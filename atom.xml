<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>蒙珣的博客</title>
  
  <subtitle>未来很长，当有勇气面对，当与自己和解。</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2022-07-20T14:46:02.352Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>蒙珣</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>呼兰河传</title>
    <link href="http://example.com/2022/07/20/%E5%91%BC%E5%85%B0%E6%B2%B3%E4%BC%A0/"/>
    <id>http://example.com/2022/07/20/%E5%91%BC%E5%85%B0%E6%B2%B3%E4%BC%A0/</id>
    <published>2022-07-20T14:31:29.000Z</published>
    <updated>2022-07-20T14:46:02.352Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><blockquote><p>摘抄自矛盾</p></blockquote><p><code>   呼兰河这小城里边，以前住着我的祖父，现在埋着我的祖父。      我生的时候，祖父已经六十多岁了，我长到四五岁，祖父就快七十了，我还没有长到二十岁，祖父就七八十岁了。祖父一过了八十，祖父就死了。      从前那后花园的主人，而今不见了。老主人死了，小主人逃荒去了。      那园里的蝴蝶，蚂蚱，蜻蜓，也许还是年年仍旧，也许现在完全荒凉了。      小黄瓜，大倭瓜，也许还是年年地种着，也许现在根本没有了。      那早晨的露珠是不是还落在花盆架上。那午间的太阳是不是还照着那大向日葵，那黄昏时候的红霞是不是还会一会工夫会变出来一匹马来，一会工夫会变出来一匹狗来，那么变着。      这一些不能想像了。      听说有二伯死了。      老厨子就是活着年纪也不小了。      东邻西舍也都不知怎样了。      至于那磨坊里的磨官，至今究竟如何，则完全不晓得了。      以上我所写的并没有什么优美的故事，只因他们充满我幼年的记忆，忘却不了，难以忘却，就记在这里了。</code></p><span id="more"></span><p>本书通过一位解事情颇早的单纯小女孩向我们展现了，民国初年，在东北的呼兰河县百姓一年又一年的简单生活。</p><p>一年之中，他们很有规律的过生活；一年之中，必定有跳大神，唱秧歌，放河灯，野台戏子，四月十八日娘娘庙大会……这些热闹隆重的节日，而这些节日也和他们的日常生活一样多么单调而呆板。</p><p>呼兰河这小城的生活科又不是没有音响和色彩的。</p><p>大街小巷，每一茅舍内，每一篱笆后边，充满了唠叨，争吵，苦笑，乃至梦呓。一年四季，依着那些走马灯似的挨次到来的隆重热闹的节日，在灰黯的日常生活的背景前，呈现了粗线条的大红大绿的带有原始性的色彩。</p><p>呼兰河的人民当然多是良善的。</p><p>他们照着几千年传下来的习惯而思索，而活着；他们有时也许显得麻木，但实在他们也颇敏感而琐细，芝麻大的事他们也会议论或者争吵三天三夜而不休。他们有时也许显得愚昧而蛮横，但实在他们并没没有害人或自害的意思，他们是按照他们认为做合理的方法，“该怎么办就怎么办”。</p><p>他们对于老胡家的小团圆媳妇的不幸遭遇，当然很同情，我们怜惜她，我们为她叫委屈，同时我们也憎恨——但憎恨的对象不是小团圆媳妇的婆婆，我们只觉得这婆婆也可怜，她同样是“照着几千年传下来的习惯而思索，而活着”的一个牺牲者。她的“立场”，她的叫人觉得可恨而又可怜的地方，在她“心安理得地花了五十吊”请那骗子——云游道人给小团圆媳妇治病的时候，就由她自己申说得明明白白：</p><p>她来到我家，我没给她气受，那家的团圆媳妇不受气，一天打八顿，骂三场，可是我也打过她，那是我给她一个下马威，我只打了她一个多月，虽然说我打得狠了一点，可是不狠那能够规矩出一个好人来。我也是不愿意狠打她的，打的连喊带叫的，我是为她着想，不打得狠一点，她是不能够中用的。……</p><p>这老胡家的婆婆为什么坚信她的小团圆媳妇必得狠狠地“管教”呢？小团圆媳妇有些什么地方叫她老人家看着不顺眼呢？因为那小团圆媳妇第一天来到老胡家就由街坊公论判定她是“太大方了”，“一点也不知道羞，头一天来到了婆家，吃饭就吃三碗”，而且“十四岁就长得那么高”也是不合规律，——因为街坊公论说：这小团圆媳妇不像个小团圆媳妇，所以更使她婆婆坚信非严加管教不可，而且更因为“只想给她一个下马威”的时候，这“太大方”的小团圆媳妇居然不服管教——带哭连喊，说要回“家”去，——所以不得不狠狠地打了她一个月。</p><p>街坊们当然也都是和那小团圆媳妇无怨无仇，都是为了她好，——要她像一个小团圆媳妇。所以当这小团圆媳妇被“管教”成病的时候，不但她的婆婆肯舍大把的钱为她治病（跳神，各种偏方），而重街坊也热心地给她出主意。</p><p>而结果呢？结果是把一个“黑忽忽的，笑呵呵的”名为十四岁其实不过十二，可实在长得比普通十四岁的女孩子又高大又结实的小团圆媳妇给活生生“送回老家去”！</p><p>呼兰河小城的生活是充满了各种各样的声响和色彩的，可有时刻板单调。</p><p>呼兰河小城的生活是寂寞的。</p><p>萧红的童年生活就是在这种的寂寞环境中过去的。这在她心灵上留的烙印有那么深，自然不言而喻。</p><p>无意识地违背了“几千年传下来的习惯而思索，而生活”的老胡家的小团圆媳妇终于死了，有意识地反抗着几千年传下来的习惯而思索，而生活的萧红则以含泪的微笑回忆这寂寞的小城，怀着寂寞的心情，在悲壮的斗争的大时代。</p><p>也许有人会觉得《呼兰河传》不是一部小说。 </p><p>他们也许会这样说：没有贯串全书的线索，故事和人物都是零零碎碎，都是片段的，不是整个的有机体。 </p><p>也许又有人觉得《呼兰河传》好像是自传，却又不完全像自传。 </p><p>但是我却觉得正因其不完全像自传，所以更好，更有意义。 </p><p>而且我们不也可以说：要点不在《呼兰河传》不像是一部严格意义的小说，而在它于这“不像”之外，还有些别的东西——一些比“像”一部小说更为“诱人”些的东西：它是一篇叙事诗，一幅多彩的风土画，一串凄婉的歌谣。 </p><p>有讽刺，也有幽默。开始读时有轻松之感，然而愈读下去心头就会一点一点沉重起来。可是，仍然有美，即使这美有点病态，也仍然不能不使你眩惑。 </p><p>也许你要说《呼兰河传》没有一个人物是积极性的。都是些甘愿做传统思想的奴隶而又自怨自艾的可怜虫，而作者对于他们的态度也不是单纯的。她不留情地鞭笞他们，可是她又同情他们：她给我们看，这些屈服于传统的人多么愚蠢而顽固——有的甚至于残忍，然而他们的本质是良善的，他们不欺诈，不虚伪，他们也不好吃懒做，他们极容易满足。有二伯，老厨子，老胡家的一家子，漏粉的那一群，都是这样的人物。他们都像最下等的植物似的，只要极少的水份，土壤，阳光——甚至没有阳光，就能够生存了，磨官冯歪嘴子是他们中间生命力最强的一个——强的使人不禁想赞美他。然而在冯歪嘴子身上也找不出什么特别的东西。除了生命力特别顽强，而这是原始性的顽强。 </p><p>如果让我们在《呼兰河传》找作者思想的弱点，那么，问题恐怕不在于作者所写的人物都缺乏积极性，而在于作者写这些人物的梦魇似的生活时给人们以这样一个印象：除了因为愚昧保守而自食其果，这些人物的生活原也悠然自得其乐，在这里，我们看不见封建的剥削和压迫，也看不见日本帝国主义那种血腥的侵略。而这两重的铁枷，在呼兰河人民生活的比重上，该也不会轻于他们自身的愚昧保守罢？ </p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;摘抄自矛盾&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;   呼兰河这小城里边，以前住着我的祖父，现在埋着我的祖父。      我生的时候，祖父已经六十多岁了，我长到四五岁，祖父就快七十了，我还没有长到二十岁，祖父就七八十岁了。祖父一过了八十，祖父就死了。      从前那后花园的主人，而今不见了。老主人死了，小主人逃荒去了。      那园里的蝴蝶，蚂蚱，蜻蜓，也许还是年年仍旧，也许现在完全荒凉了。      小黄瓜，大倭瓜，也许还是年年地种着，也许现在根本没有了。      那早晨的露珠是不是还落在花盆架上。那午间的太阳是不是还照着那大向日葵，那黄昏时候的红霞是不是还会一会工夫会变出来一匹马来，一会工夫会变出来一匹狗来，那么变着。      这一些不能想像了。      听说有二伯死了。      老厨子就是活着年纪也不小了。      东邻西舍也都不知怎样了。      至于那磨坊里的磨官，至今究竟如何，则完全不晓得了。      以上我所写的并没有什么优美的故事，只因他们充满我幼年的记忆，忘却不了，难以忘却，就记在这里了。&lt;/code&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="书评" scheme="http://example.com/categories/%E4%B9%A6%E8%AF%84/"/>
    
    
    <category term="2022" scheme="http://example.com/tags/2022/"/>
    
  </entry>
  
  <entry>
    <title>Docker常用命令</title>
    <link href="http://example.com/2022/07/11/Docker%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <id>http://example.com/2022/07/11/Docker%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</id>
    <published>2022-07-10T16:17:08.000Z</published>
    <updated>2022-07-31T12:29:01.226Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h2 id="Docker的基本组成"><a href="#Docker的基本组成" class="headerlink" title="Docker的基本组成"></a>Docker的基本组成</h2><p><strong>镜像（image）</strong></p><p>Docker镜像（Image）就是一个<strong>只读</strong>的模板。镜像可以用来创建Docker容器，<strong>一个镜像可以创建很多容器。</strong></p><p>它也相当于一个root文件系统。比如官方镜像CentOs:7就包含了一套CentOs:7最小系统的root文件系统。</p><p>相当于容器的“源代码”，<font color="red">docker镜像文件类似于Java的类模板，而docker容器实例类似于Java中new出来的实例对象。</font></p><span id="more"></span><p><strong>容器（container）</strong></p><ul><li><p>从面向对象角度</p><p>Docker利用容器（Container）独立运行的一个或一组应用，应用程序或服务运行在容器里面，容器就类似于一个虚拟化的运行环境，容器就是用镜像创建的运行实例。就像是Java中的类和实例对象一样，镜像是静态的定义，容器是镜像运行时的实体。容器为镜像提供了一个标准的和隔离的运行环境，它可以被启动、开始、停止、删除。每个容器都是相互隔离的、保证安全的平台。</p></li><li><p>从镜像容器角度</p><p><font color="red">可以把容器看做是一个简易版的Linux环境</font>（包括root用户权限、进程空间、用户空间和网络空间等）和运行在其中的应用程序。</p></li><li><p>仓库（Repository）</p><p>仓库（Repository）是<font color="red">集中存放镜像</font>文件的场所。</p><p>类似于 <strong>Maven</strong> 仓库，存放各种 <strong>jar</strong> 包的地方；</p><p><strong>GitHub</strong> 仓库，存放各种 <strong>git</strong> 项目的地方；</p><p><strong>Docker</strong> 公司提供的官方 <strong>registry</strong> 被称为 <strong>Docker Hub</strong>，存放各种进项模板的地方。</p><p>仓库分为公开仓库（Public）和私有仓库（Private）两种形式。</p><p>最大的公开仓库是 Docker Hub(<a href="https://hub.docker.com/)%EF%BC%8C%E5%AD%98%E6%94%BE%E4%BA%86%E6%95%B0%E9%87%8F%E5%BA%9E%E5%A4%A7%E7%9A%84%E9%95%9C%E5%83%8F%E4%BE%9B%E7%94%A8%E6%88%B7%E4%B8%8B%E8%BD%BD%E3%80%82%E5%9B%BD%E5%86%85%E7%9A%84%E5%85%AC%E5%BC%80%E4%BB%93%E5%BA%93%E5%8C%85%E6%8B%AC%E9%98%BF%E9%87%8C%E4%BA%91">https://hub.docker.com/)，存放了数量庞大的镜像供用户下载。国内的公开仓库包括阿里云</a> 、网易云等。</p></li><li><p>总结</p><p><font color="blue">需要正确的理解仓库/镜像/容器这几个概念:</font></p><p><font color="blue">Docker</font></p><ul><li>本身是一个容器运行载体或称之为管理引擎。我们把应用程序和配置依赖打包好形成一个可交付的运行环境，这个打包好的运行环境就是image镜像文件。只有通过这个镜像文件才能生成Docker容器实例(类似Java中new出来一个对象)。</li></ul><p><font color="blue">Image</font></p><ul><li>文件可以看作是容器的模板。Docker 根据 image 文件生成容器的实例。同一个 image 文件，可以生成多个同时运行的容器实例。</li></ul><p><font color="blue">镜像文件</font></p><ul><li>image 文件生成的容器实例，本身也是一个文件，称为镜像文件。</li></ul><p><font color="blue">容器实例</font></p><ul><li>一个容器运行一种服务，当我们需要的时候，就可以通过docker客户端创建一个对应的运行实例，也就是我们的容器</li></ul><p><font color="blue">仓库</font></p><ul><li>就是放一堆镜像的地方，我们可以把镜像发布到仓库中，需要的时候再从仓库中拉下来就可以了。</li></ul></li></ul><h2 id="Docker常用命令"><a href="#Docker常用命令" class="headerlink" title="Docker常用命令"></a>Docker常用命令</h2><h3 id="帮助启动类命令"><a href="#帮助启动类命令" class="headerlink" title="帮助启动类命令"></a>帮助启动类命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 启动docker</span></span><br><span class="line">sudo systemctl start docker</span><br><span class="line"></span><br><span class="line"><span class="comment"># 停止docker</span></span><br><span class="line">sudo systemctl stop docker</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看docker状态</span></span><br><span class="line">sudo systemctl status docker</span><br><span class="line"></span><br><span class="line"><span class="comment"># 开机启动</span></span><br><span class="line">sudo systemctl <span class="built_in">enable</span> docker</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看docker概要信息</span></span><br><span class="line">docker info</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看docker总体帮助文档</span></span><br><span class="line">docker --<span class="built_in">help</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看docker命令帮助文档</span></span><br><span class="line">docker 具体命令 --<span class="built_in">help</span></span><br></pre></td></tr></table></figure><h3 id="镜像命令"><a href="#镜像命令" class="headerlink" title="镜像命令"></a>镜像命令</h3><ul><li><p><code>docker images</code>：列出本地主机上的镜像</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-a：列出本地所有的镜像（含历史映像层）</span><br><span class="line">-q：只显示镜像ID</span><br></pre></td></tr></table></figure></li><li><p><code>docker search 某个xxx镜像名字</code>：</p><p>网站：<a href="https://hub.docker.com/">https://hub.docker.com</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 命令</span></span><br><span class="line">docker search [options] 镜像名字</span><br><span class="line"></span><br><span class="line"><span class="comment"># options说明</span></span><br><span class="line">--<span class="built_in">limit</span>：只列出N个镜像，默认25个</span><br><span class="line">docker search --<span class="built_in">limit</span> 5 redis</span><br></pre></td></tr></table></figure></li><li><p><code>docker pull 某个xxx镜像名字</code>：下载镜像</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 写法1：+TAG 镜像版本号</span></span><br><span class="line">docker pull 镜像名字[:TAG]</span><br><span class="line"><span class="comment"># 例如：docker pull redis:6.0.8</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 写法2：下载最新版latest</span></span><br><span class="line">docker pull 镜像名字</span><br></pre></td></tr></table></figure></li><li><p><code>docker system df</code>：查看镜像、容器、数据卷所占空间</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$ docker system df</span><br><span class="line">TYPE            TOTAL     ACTIVE    SIZE      RECLAIMABLE</span><br><span class="line">Images          1         1         9.136kB   0B (0%)</span><br><span class="line">Containers      2         0         0B        0B</span><br><span class="line">Local Volumes   0         0         0B        0B</span><br><span class="line">Build Cache     0         0         0B        0B</span><br><span class="line"></span><br><span class="line"><span class="comment"># Images 镜像有几个</span></span><br><span class="line"><span class="comment"># Containers 容器有几个</span></span><br><span class="line"><span class="comment"># Local Volumes 本地卷</span></span><br><span class="line"><span class="comment"># Build Cache 构建的缓存</span></span><br></pre></td></tr></table></figure></li><li><p><code>docker rmi 某个xxx镜像名字ID</code>：删除镜像</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">-f 强制删除</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除单个镜像</span></span><br><span class="line">docker rmi -f 镜像ID</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除多个镜像</span></span><br><span class="line">docker rmi -f 镜像名1:TAG 镜像名2:TAG</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除全部</span></span><br><span class="line">docker rmi -f $(docker images -qa)</span><br><span class="line"><span class="comment"># $() 引用命令</span></span><br></pre></td></tr></table></figure></li></ul><p><strong>问题：docker虚悬镜像是什么？</strong></p><ul><li><p>仓库名、标签都是<none>的镜像，俗称虚悬镜像<code>dangling image</code>，工作中没有什么用，建议删除。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker images</span><br><span class="line">REPOSITORY    TAG       IMAGE ID       CREATED        SIZE</span><br><span class="line">&lt;none&gt;   &lt;none&gt;    18e5af790473   9 months ago   9.14kB</span><br></pre></td></tr></table></figure></li></ul><h3 id="容器命令"><a href="#容器命令" class="headerlink" title="容器命令"></a>容器命令</h3><ul><li><p>新建+启动容器</p><p><code>docker run [OPTIONS] IMAGE [COMMAND] [ARG]</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># options 说明</span></span><br><span class="line">--name=<span class="string">&quot;容器新名字&quot;</span>为容器指定一个名称</span><br><span class="line">-d:后台运行容器并返回容器ID，即启动守护式容器（后台运行）</span><br><span class="line"></span><br><span class="line">-i: 以交互模式运行容器，通常与-t同时使用</span><br><span class="line">-t：为容器重新分配一个伪输入终端，通常与-同时使用</span><br><span class="line">即启动交互式容器（前台有伪终端，等待交互），退出终端输入：<span class="built_in">exit</span></span><br><span class="line"></span><br><span class="line">-P：随机端口映射</span><br><span class="line">-p：指定端口映射</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用镜像ubuntu:latest 以交互模式启动一个容器，在容器内执行bash命令</span></span><br><span class="line">$ sudo docker run -it ubuntu bash</span><br><span class="line">root@908d43950860:/<span class="comment"># ps -ef</span></span><br><span class="line">UID          PID    PPID  C STIME TTY          TIME CMD</span><br><span class="line">root           1       0  0 13:00 pts/0    00:00:00 bash</span><br><span class="line">root           9       1  0 13:00 pts/0    00:00:00 ps -ef</span><br><span class="line">root@908d43950860:/<span class="comment"># exit</span></span><br><span class="line"><span class="built_in">exit</span></span><br></pre></td></tr></table></figure></li><li><p>列出当前所有正在运行的容器</p><p><code>docker ps [OPTIONS]</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># options 说明</span></span><br><span class="line">-a：列出当前所有正在运行的容器+历史上运行过的</span><br><span class="line">-l：显示最近创建的容器</span><br><span class="line">-n：显示最近n个创建的容器</span><br><span class="line">-q：静默模式，只显示容器编号</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">$ sudo docker run -it --name=myyu1 ubuntu bash</span><br><span class="line">root@96e714997794:/<span class="comment">#</span></span><br><span class="line"></span><br><span class="line">$ sudo docker ps</span><br><span class="line">CONTAINER ID   IMAGE     COMMAND   CREATED          STATUS          PORTS     NAMES</span><br><span class="line">96e714997794   ubuntu    <span class="string">&quot;bash&quot;</span>    45 seconds ago   Up 45 seconds             myyu1</span><br><span class="line"></span><br><span class="line"><span class="comment"># CONTAINER ID 容器名</span></span><br><span class="line"><span class="comment"># IMAGE 镜像名</span></span><br><span class="line"><span class="comment"># COMMAND 运行的命令</span></span><br><span class="line"><span class="comment"># CREATED 运行时间</span></span><br><span class="line"><span class="comment"># PORTS 暴露端口号</span></span><br><span class="line"><span class="comment"># NAMES 名称</span></span><br></pre></td></tr></table></figure></li><li><p>退出容器</p><p><code>exit</code>：run进入容器，exit退出，容器会停止</p><p><code>ctrl+p+q</code>：run进入容器，ctrl+p+q退出，容器不会停止</p></li><li><p>启动已停止运行的容器</p><p><code>docker start 容器ID或容器名</code></p></li><li><p>重启容器</p><p><code>docker restart 容器ID或容器名</code></p></li><li><p>停止容器</p><p><code>docker stop 容器ID或容器名</code></p></li><li><p>强制停止容器</p><p><code>docker kill 容器ID或容器名</code></p></li><li><p>删除已停止的容器</p><p><code>docker rm 容器ID</code></p></li><li><p>一次性删除多个容器实例</p><p><code>docker rm -f $(docker ps -aq)</code> 或者 <code>docker ps -aq | xargs docker rm</code></p></li></ul><h3 id="重要"><a href="#重要" class="headerlink" title="重要"></a>重要</h3><h4 id="启动守护式容器（后台服务器）"><a href="#启动守护式容器（后台服务器）" class="headerlink" title="启动守护式容器（后台服务器）"></a>启动守护式容器（后台服务器）</h4><p><code>docker run -d 容器名</code> </p><p><strong>注意</strong></p><p>使用镜像ubuntu:lates以后台启动一个容器</p><p><code>sudo docker run -d ubuntu</code></p><p>问题：使用<code>sudo docker ps -a </code> 进行查看，发现容器已经退出</p><p><strong>很重要说明一点：<font color="red">Docker容器后台运行，就必须有一个前台进程</font></strong></p><p>容器运行的命令如果不是那些<strong>一直挂起的命令（比如运行top、tail），就是会自动退出的</strong></p><p>这个是Docker的机制问题，比如你的web容器，我们以nginx为例，正常情况下：</p><p>我们配置启动服务只需要启动响应的service即可，例如<code>service nginx start</code></p><p>但是，这样做 nginx 为后台进程模式运行，就导致docker前台没有运行的应用。</p><p>这样的容器后台启动后，会立即自杀因为他觉得他无事可做了</p><p>所以，最佳的解决方案是：**<font color="red">将你要运行的程序以前台进程的形式运行，常见就是命令行模式，表示还有交互操作，别中断。</font>**</p><h4 id="查看容器日志"><a href="#查看容器日志" class="headerlink" title="查看容器日志"></a>查看容器日志</h4><p><code>docker logs 容器ID</code></p><h4 id="查看容器内部运行的进程"><a href="#查看容器内部运行的进程" class="headerlink" title="查看容器内部运行的进程"></a>查看容器内部运行的进程</h4><p><code>docker top 容器ID</code></p><h4 id="查看容器内部细节"><a href="#查看容器内部细节" class="headerlink" title="查看容器内部细节"></a>查看容器内部细节</h4><p><code>docker inspect 容器ID</code></p><h4 id="进入正在运行的容器并以命令行交互"><a href="#进入正在运行的容器并以命令行交互" class="headerlink" title="进入正在运行的容器并以命令行交互"></a><strong>进入正在运行的容器并以命令行交互</strong></h4><p><code>docker exec -it 容器ID /bin/bash</code>  推荐使用</p><p>重新进入 <code>docker attach 容器ID</code></p><p>上述两个区别：</p><ul><li><p>attach 直接进入容器启动命令的终端，不会启动新的进程，用exit退出，会导致容器停止。</p></li><li><p>exec 是在容器中打开新的终端，并且可以启动新的进程，用exit退出，不会导致容器停止。</p></li><li><p>从容器内拷贝文件到主机上</p><p><code>docker cp 容器ID:容器内路径 目的主机路径</code></p></li></ul><h4 id="导入和导出容器"><a href="#导入和导出容器" class="headerlink" title="导入和导出容器"></a>导入和导出容器</h4><ul><li>export 导出容器的内容留作为一个tar归档文件 [对应import命令]</li><li>import 从tar包中的内容创建一个新的文件系统再导入为镜像 [对应export]</li></ul><p><strong>案例</strong></p><p>export</p><p><code>docker export 容器ID &gt; 文件名.tar</code></p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">pwd</span></span><br><span class="line">/home/william/DYJ</span><br><span class="line"></span><br><span class="line">$ sudo docker images</span><br><span class="line">[sudo] password <span class="keyword">for</span> william:</span><br><span class="line">REPOSITORY    TAG       IMAGE ID       CREATED         SIZE</span><br><span class="line">tomcat        latest    b64abfdee99c   6 months ago    668MB</span><br><span class="line">ubuntu        latest    d5ca7a445605   8 months ago    65.6MB</span><br><span class="line">hello-world   latest    18e5af790473   9 months ago    9.14kB</span><br><span class="line">redis         6.0.8     d4deb73856a2   20 months ago   98.5MB</span><br><span class="line"></span><br><span class="line">$ sudo docker run -it ubuntu /bin/bash</span><br><span class="line">root@69d281c34a71:/<span class="comment"># %</span></span><br><span class="line"></span><br><span class="line">$ sudo docker ps</span><br><span class="line">CONTAINER ID   IMAGE     COMMAND       CREATED          STATUS          PORTS     NAMES</span><br><span class="line">69d281c34a71   ubuntu    <span class="string">&quot;/bin/bash&quot;</span>   30 seconds ago   Up 30 seconds             friendly_kapitsa</span><br><span class="line"></span><br><span class="line">$ sudo docker <span class="built_in">export</span> 69d281c34a71 &gt; adcd.tar.gz</span><br><span class="line"></span><br><span class="line">$ ls</span><br><span class="line">adcd.tar.gz   git  java  python  shell</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>  import </p><p><code>cat 文件名.tar | docker import - 镜像用户/镜像名:镜像版本号</code></p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cat 文件名.tar | docker import - 镜像用户/镜像名:镜像版本号</span></span><br><span class="line">$ cat adcd.tar.gz | docker import - william/ubuntu</span><br><span class="line">sha256:8c2d3dca3bda65e49ad314f30f56c6ae3b7ff5c65d83e6f61d8af87979269b20</span><br></pre></td></tr></table></figure><h3 id="小总结-常用命令"><a href="#小总结-常用命令" class="headerlink" title="小总结-常用命令"></a>小总结-常用命令</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line">attach    Attach to a running container                 # 当前 shell 下 attach 连接指定运行镜像</span><br><span class="line"></span><br><span class="line">build     Build an image from a Dockerfile              # 通过 Dockerfile 定制镜像</span><br><span class="line"></span><br><span class="line">commit    Create a new image from a container changes   # 提交当前容器为新的镜像</span><br><span class="line"></span><br><span class="line">cp        Copy files/folders from the containers filesystem to the host path   #从容器中拷贝指定文件或者目录到宿主机中</span><br><span class="line"></span><br><span class="line">create    Create a new container                        # 创建一个新的容器，同 run，但不启动容器</span><br><span class="line"></span><br><span class="line">diff      Inspect changes on a container&#x27;s filesystem   # 查看 docker 容器变化</span><br><span class="line"></span><br><span class="line">events    Get real time events from the server          # 从 docker 服务获取容器实时事件</span><br><span class="line"></span><br><span class="line">exec      Run a command in an existing container        # 在已存在的容器上运行命令</span><br><span class="line"></span><br><span class="line">export    Stream the contents of a container as a tar archive   # 导出容器的内容流作为一个 tar 归档文件[对应 import ]</span><br><span class="line"></span><br><span class="line">history   Show the history of an image                  # 展示一个镜像形成历史</span><br><span class="line"></span><br><span class="line">images    List images                                   # 列出系统当前镜像</span><br><span class="line"></span><br><span class="line">import    Create a new filesystem image from the contents of a tarball # 从tar包中的内容创建一个新的文件系统映像[对应export]</span><br><span class="line"></span><br><span class="line">info      Display system-wide information               # 显示系统相关信息</span><br><span class="line"></span><br><span class="line">inspect   Return low-level information on a container   # 查看容器详细信息</span><br><span class="line"></span><br><span class="line">kill      Kill a running container                      # kill 指定 docker 容器</span><br><span class="line"></span><br><span class="line">load      Load an image from a tar archive              # 从一个 tar 包中加载一个镜像[对应 save]</span><br><span class="line"></span><br><span class="line">login     Register or Login to the docker registry server    # 注册或者登陆一个 docker 源服务器</span><br><span class="line"></span><br><span class="line">logout    Log out from a Docker registry server          # 从当前 Docker registry 退出</span><br><span class="line"></span><br><span class="line">logs      Fetch the logs of a container                 # 输出当前容器日志信息</span><br><span class="line"></span><br><span class="line">port      Lookup the public-facing port which is NAT-ed to PRIVATE_PORT    # 查看映射端口对应的容器内部源端口</span><br><span class="line"></span><br><span class="line">pause     Pause all processes within a container        # 暂停容器</span><br><span class="line"></span><br><span class="line">ps        List containers                               # 列出容器列表</span><br><span class="line"></span><br><span class="line">pull      Pull an image or a repository from the docker registry server   # 从docker镜像源服务器拉取指定镜像或者库镜像</span><br><span class="line"></span><br><span class="line">push      Push an image or a repository to the docker registry server    # 推送指定镜像或者库镜像至docker源服务器</span><br><span class="line"></span><br><span class="line">restart   Restart a running container                   # 重启运行的容器</span><br><span class="line"></span><br><span class="line">rm        Remove one or more containers                 # 移除一个或者多个容器</span><br><span class="line"></span><br><span class="line">rmi       Remove one or more images       # 移除一个或多个镜像[无容器使用该镜像才可删除，否则需删除相关容器才可继续或 -f 强制删除]</span><br><span class="line"></span><br><span class="line">run       Run a command in a new container              # 创建一个新的容器并运行一个命令</span><br><span class="line"></span><br><span class="line">save      Save an image to a tar archive                # 保存一个镜像为一个 tar 包[对应 load]</span><br><span class="line"></span><br><span class="line">search    Search for an image on the Docker Hub         # 在 docker hub 中搜索镜像</span><br><span class="line"></span><br><span class="line">start     Start a stopped containers                    # 启动容器</span><br><span class="line"></span><br><span class="line">stop      Stop a running containers                     # 停止容器</span><br><span class="line"></span><br><span class="line">tag       Tag an image into a repository                # 给源中镜像打标签</span><br><span class="line"></span><br><span class="line">top       Lookup the running processes of a container   # 查看容器中运行的进程信息</span><br><span class="line"></span><br><span class="line">unpause   Unpause a paused container                    # 取消暂停容器</span><br><span class="line"></span><br><span class="line">version   Show the docker version information           # 查看 docker 版本号</span><br><span class="line"></span><br><span class="line">wait      Block until a container stops, then print its exit code   # 截取容器停止时的退出状态值</span><br></pre></td></tr></table></figure><h2 id="Docker镜像"><a href="#Docker镜像" class="headerlink" title="Docker镜像"></a>Docker镜像</h2><h3 id="是什么"><a href="#是什么" class="headerlink" title="是什么"></a>是什么</h3><h4 id="镜像是分层的"><a href="#镜像是分层的" class="headerlink" title="镜像是分层的"></a>镜像是分层的</h4><p>以我们的pull为例，在下载的过程中我们可以看到docker的镜像好像是在一层一层下载</p><p><img src="1.png"></p><h4 id="UnionFS（联合文件系统）"><a href="#UnionFS（联合文件系统）" class="headerlink" title="UnionFS（联合文件系统）"></a>UnionFS（联合文件系统）</h4><p>Union文件系统（UnionFS）是一种分层、轻量级并且高性能的文件系统，他支持<font color="red">对文件系统的修改作为一次提交来一层层的叠加，</font>同时可以将不同目录挂载到同一个虚拟文件系统下（unite several disectories into a single virtual filesystem）Union文件系统是Docker镜像的基础。镜像可以通过分层来进行继承，基于基础镜像（没有父镜像），可以制作各种具体的应用镜像。</p><p><strong>特性</strong>：一次同时加载多个文件系统，但从外面看起来，只能看到一个文件系统，联合加载会把各层文件系统叠加起来，这样最终的文件系统会包含所有底层的文件和目录。</p><h4 id="Docker镜像加载原理"><a href="#Docker镜像加载原理" class="headerlink" title="Docker镜像加载原理"></a>Docker镜像加载原理</h4><p>Docker的镜像实际上由一层一层的文件系统组成，这种层级的文件系统UnionFS。</p><p>bootfs(boot file system)主要包含bootloader和kernel, bootloader主要是引导加载kernel, Linux刚启动时会加载bootfs文件系统，在Docker镜像的最底层是引导文件系统bootfs。这一层与我们典型的Linux/Unix系统是一样的，包含boot加载器和内核。当boot加载完成之后整个内核就都在内存中了，此时内存的使用权已由bootfs转交给内核，此时系统也会卸载bootfs。</p><p>rootfs (root file system) ，在bootfs之上。包含的就是典型 Linux 系统中的 /dev, /proc, /bin, /etc 等标准目录和文件。rootfs就是各种不同的操作系统发行版，比如Ubuntu，Centos等等。 </p><p><strong>问题</strong>：平时我们安装进虚拟机的CentOS都是好几个G，为什么docker这里才200M？？</p><p>对于一个精简的OS，rootfs可以很小，只需要包括最基本的命令、工具和程序库就可以了，因为底层直接用Host的kernel，自己只需要提供 rootfs 就行了。由此可见对于不同的linux发行版, bootfs基本是一致的, rootfs会有差别, 因此不同的发行版可以公用bootfs。</p><h4 id="Docker为什么要采用这种分层结构？"><a href="#Docker为什么要采用这种分层结构？" class="headerlink" title="Docker为什么要采用这种分层结构？"></a>Docker为什么要采用这种分层结构？</h4><p>镜像分层最大的一个好处就是共享资源，方便复制迁移，就是为了复用。</p><p>比如说多个镜像都从相同的base镜像构建而来，那么Docker Host只需要在磁盘上保存同时，内存也只需加载一份base镜像，就可以为所有容器服务了。而且镜像的每一层都可以被共享。</p><h3 id="Docker分层重要理解"><a href="#Docker分层重要理解" class="headerlink" title="Docker分层重要理解"></a>Docker分层重要理解</h3><p><strong><font color="coral">Docker镜像层都是只读的，容器层是可写的。</font></strong></p><p>当容器启动时，一个新的可写层被加载到镜像的顶部。这一层通常被称作“容器层”，“容器层”之下的都被叫镜像层。</p><p>所以，对容器的改动——无论添加、删除、还是修改文件都只会发成在容器层中。只有容器层是可写的，容器层下面的所有镜像层都只是可读的。</p><p><img src="2.png"></p><h3 id="Docker镜像commit操作案例"><a href="#Docker镜像commit操作案例" class="headerlink" title="Docker镜像commit操作案例"></a>Docker镜像commit操作案例</h3><ul><li>docker commit 提交容器副本使之称为一个新的镜像</li><li><code>docker commit -m=&quot;提交的描述信息&quot; -a=&quot;作者&quot; 容器ID 要创建的目标镜像名:[标签名]</code></li></ul><p>案例演示：ubunt容器安装vim</p><ul><li>从Hub上下载ubuntu镜像到本地并成功运行</li><li>原始的默认ubuntu镜像不带vim命令</li><li>外网连通的情况下，安装vim</li><li>安装完成后，commit我们自己的新镜像</li><li>启动我们的镜像并和原来的对比</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[william@arch ~]$ sudo docker run -it ubuntu /bin/bash</span><br><span class="line"></span><br><span class="line">root@57a82b1d18d4:/<span class="comment"># apt-get update</span></span><br><span class="line"></span><br><span class="line">root@57a82b1d18d4:/<span class="comment"># apt-get -y install vim</span></span><br><span class="line"></span><br><span class="line">root@57a82b1d18d4:/<span class="comment"># vim 123.txt</span></span><br><span class="line"></span><br><span class="line">[william@arch ~]$  sudo docker commit -m=<span class="string">&quot;add vim cmd&quot;</span> -a=<span class="string">&quot;william&quot;</span> 57a82b1d18d4 william/ubuntu:1.1</span><br><span class="line"></span><br><span class="line">[william@arch ~]$ sudo docker images</span><br><span class="line"></span><br><span class="line">REPOSITORY       TAG       IMAGE ID       CREATED          SIZE</span><br><span class="line">william/ubuntu   1.1       33d04ddcdce9   34 seconds ago   84.1MB</span><br></pre></td></tr></table></figure><h2 id="本地镜像发布到阿里云"><a href="#本地镜像发布到阿里云" class="headerlink" title="本地镜像发布到阿里云"></a>本地镜像发布到阿里云</h2><h3 id="本地镜像发布到阿里云流程"><a href="#本地镜像发布到阿里云流程" class="headerlink" title="本地镜像发布到阿里云流程"></a>本地镜像发布到阿里云流程</h3><p><img src="3.png"></p><h3 id="镜像的生成方法"><a href="#镜像的生成方法" class="headerlink" title="镜像的生成方法"></a>镜像的生成方法</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1.commit方法</span></span><br><span class="line"><span class="comment"># docker commit -m=&quot;提交的描述信息&quot; -a=&quot;作者&quot; 容器ID 要创建的目标镜像名:[标签名]</span></span><br><span class="line">sudo docker commit -a william -m <span class="string">&quot;Vim ubuntu&quot;</span> 镜像ID ubuntu-vim:1.1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.docker file 之后学</span></span><br></pre></td></tr></table></figure><h3 id="将本地镜像推送到阿里云"><a href="#将本地镜像推送到阿里云" class="headerlink" title="将本地镜像推送到阿里云"></a>将本地镜像推送到阿里云</h3><h4 id="创建仓库镜像"><a href="#创建仓库镜像" class="headerlink" title="创建仓库镜像"></a>创建仓库镜像</h4><ul><li><p><a href="https://cr.console.aliyun.com/cn-hangzhou/instances">选择控制台，进入容器镜像服务</a></p></li><li><p>选择个人实例</p></li><li><p>命名空间</p></li><li><p>仓库名称</p></li><li><p>进入管理界面获得脚本</p><p><img src="4.png"></p></li></ul><h4 id="将镜像推送到阿里云"><a href="#将镜像推送到阿里云" class="headerlink" title="将镜像推送到阿里云"></a>将镜像推送到阿里云</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$ sudo docker images</span><br><span class="line">REPOSITORY   TAG       IMAGE ID       CREATED          SIZE</span><br><span class="line">ubuntu-vim   1.1       7c0e2d4866ee   14 seconds ago   161MB</span><br><span class="line">redis        latest    97772dcef71b   6 days ago       111MB</span><br><span class="line">ubuntu       latest    a7870fd478f4   5 weeks ago      69.2MB</span><br><span class="line">tomcat       latest    b64abfdee99c   6 months ago     668MB</span><br><span class="line">redis        6.0.8     d4deb73856a2   20 months ago    98.5MB</span><br><span class="line"></span><br><span class="line">$ sudo docker login --username=william117 registry.cn-hangzhou.aliyuncs.com</span><br><span class="line">$ sudo docker tag 7c0e2d4866ee registry.cn-hangzhou.aliyuncs.com/william117/ubuntu:1.1</span><br><span class="line">$ sudo docker push registry.cn-hangzhou.aliyuncs.com/william117/ubuntu:1.1</span><br></pre></td></tr></table></figure><h3 id="将阿里云上的镜像下载到本地"><a href="#将阿里云上的镜像下载到本地" class="headerlink" title="将阿里云上的镜像下载到本地"></a>将阿里云上的镜像下载到本地</h3><p><code>sudo docker pull registry.cn-hangzhou.aliyuncs.com/william117/ubuntu:[镜像版本号]</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ sudo docker pull registry.cn-hangzhou.aliyuncs.com/william117/ubuntu:1.1</span><br><span class="line"></span><br><span class="line">$ sudo docker run -it 7c0e2d4866ee /bin/bash</span><br></pre></td></tr></table></figure><h2 id="本地镜像发布到私有库"><a href="#本地镜像发布到私有库" class="headerlink" title="本地镜像发布到私有库"></a>本地镜像发布到私有库</h2><h3 id="本地镜像发布到私有库流程"><a href="#本地镜像发布到私有库流程" class="headerlink" title="本地镜像发布到私有库流程"></a>本地镜像发布到私有库流程</h3><p><img src="5.png"></p><h3 id="私有库是什么"><a href="#私有库是什么" class="headerlink" title="私有库是什么"></a>私有库是什么</h3><p> Docker Registry是官方提供的工具，可以用于构建私有镜像仓库</p><ol><li><p>官方Docker Hub地址：<a href="https://hub.docker.com/%EF%BC%8C%E4%B8%AD%E5%9B%BD%E5%A4%A7%E9%99%86%E8%AE%BF%E9%97%AE%E5%A4%AA%E6%85%A2%E4%BA%86%E4%B8%94%E5%87%86%E5%A4%87%E8%A2%AB%E9%98%BF%E9%87%8C%E4%BA%91%E5%8F%96%E4%BB%A3%E7%9A%84%E8%B6%8B%E5%8A%BF%EF%BC%8C%E4%B8%8D%E5%A4%AA%E4%B8%BB%E6%B5%81%E3%80%82">https://hub.docker.com/，中国大陆访问太慢了且准备被阿里云取代的趋势，不太主流。</a></p></li><li><p>Dockerhub、阿里云这样的公共镜像仓库可能不太方便，涉及机密的公司不可能提供镜像给公网，所以需要创建一个本地私人仓库供给团队使用，基于公司内部项目构建镜像。</p></li></ol><h3 id="将本地镜像推送到私有库"><a href="#将本地镜像推送到私有库" class="headerlink" title="将本地镜像推送到私有库"></a>将本地镜像推送到私有库</h3><ol><li><p>下载镜像Docker Registry</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">william@william-ARM-Ubuntu:~$ sudo docker pull registry</span><br><span class="line">Using default tag: latest</span><br><span class="line">latest: Pulling from library/registry</span><br><span class="line">b48a9fe99aba: Pull complete</span><br><span class="line">095878aa44ca: Pull complete</span><br><span class="line">04df0d597e2b: Pull complete</span><br><span class="line">e0594d0cd6d6: Pull complete</span><br><span class="line">94a758d8738a: Pull complete</span><br><span class="line">Digest: sha256:169211e20e2f2d5d115674681eb79d21a217b296b43374b8e39f97fcf866b375</span><br><span class="line">Status: Downloaded newer image <span class="keyword">for</span> registry:latest</span><br><span class="line">docker.io/library/registry:latest</span><br><span class="line"></span><br><span class="line">william@william-ARM-Ubuntu:~$ sudo docker images</span><br><span class="line">REPOSITORY                                            TAG       IMAGE ID       CREATED         SIZE</span><br><span class="line">registry.cn-hangzhou.aliyuncs.com/william117/ubuntu   1.1       7c0e2d4866ee   11 days ago     161MB</span><br><span class="line">redis                                                 latest    97772dcef71b   2 weeks ago     111MB</span><br><span class="line">ubuntu                                                latest    a7870fd478f4   7 weeks ago     69.2MB</span><br><span class="line">tomcat                                                latest    b64abfdee99c   7 months ago    668MB</span><br><span class="line">registry                                              latest    11bf57bb5c31   8 months ago    24.5MB</span><br><span class="line">redis                                                 6.0.8     d4deb73856a2   21 months ago   98.5MB</span><br></pre></td></tr></table></figure></li><li><p>运行私有库Registry，相当于本地有个私有的Docker Hub</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 默认情况下，仓库被创建在容器的/var/lib/registry目录下，建议自行用容器卷映射，方便与宿主机联调</span></span><br><span class="line">william@william-ARM-Ubuntu:~$ sudo docker run -d -p 5000:5000 -v /home/william/myregistry/:/home/<span class="built_in">test</span> --privileged=<span class="literal">true</span> registry</span><br><span class="line">7a74ca4f7bc3bde701d7921c861bd4f799c6e6255e9aa661127bfda1d09b7977</span><br><span class="line"></span><br><span class="line">william@william-ARM-Ubuntu:~/DYJ/myregistry$ sudo docker ps</span><br><span class="line">CONTAINER ID   IMAGE      COMMAND                  CREATED          STATUS          PORTS                                       NAMES</span><br><span class="line">7a74ca4f7bc3   registry   <span class="string">&quot;/entrypoint.sh /etc…&quot;</span>   16 seconds ago   Up 16 seconds   0.0.0.0:5000-&gt;5000/tcp, :::5000-&gt;5000/tcp   mystifying_joliot</span><br></pre></td></tr></table></figure></li><li><p>案例演示创建一个新镜像，ubuntu安装ifconfig命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 运行ubuntu</span></span><br><span class="line">william@william-ARM-Ubuntu:~$ sudo docker run -it ubuntu /bin/bash</span><br><span class="line"></span><br><span class="line"><span class="comment"># ubuntu容器执行ifconfig命令，发现并没有该命令</span></span><br><span class="line">root@db6c8a0b2695:/<span class="comment"># ifconfig</span></span><br><span class="line">bash: ifconfig: <span class="built_in">command</span> not found</span><br><span class="line"></span><br><span class="line"><span class="comment"># 更新ubuntu容器源</span></span><br><span class="line">root@db6c8a0b2695:/<span class="comment"># apt update</span></span><br><span class="line">Get:1 http://ports.ubuntu.com/ubuntu-ports jammy InRelease [270 kB]</span><br><span class="line">Get:2 http://ports.ubuntu.com/ubuntu-ports jammy-updates InRelease [114 kB]</span><br><span class="line">Get:3 http://ports.ubuntu.com/ubuntu-ports jammy-backports InRelease [99.8 kB]</span><br><span class="line">Get:4 http://ports.ubuntu.com/ubuntu-ports jammy-security InRelease [110 kB]</span><br><span class="line">Get:5 http://ports.ubuntu.com/ubuntu-ports jammy/main arm64 Packages [1758 kB]</span><br><span class="line">Get:6 http://ports.ubuntu.com/ubuntu-ports jammy/restricted arm64 Packages [24.2 kB]</span><br><span class="line">Get:7 http://ports.ubuntu.com/ubuntu-ports jammy/universe arm64 Packages [17.2 MB]</span><br><span class="line">Get:8 http://ports.ubuntu.com/ubuntu-ports jammy/multiverse arm64 Packages [224 kB]</span><br><span class="line">Get:9 http://ports.ubuntu.com/ubuntu-ports jammy-updates/restricted arm64 Packages [81.1 kB]</span><br><span class="line">Get:10 http://ports.ubuntu.com/ubuntu-ports jammy-updates/universe arm64 Packages [234 kB]</span><br><span class="line">Get:11 http://ports.ubuntu.com/ubuntu-ports jammy-updates/main arm64 Packages [580 kB]</span><br><span class="line">Get:12 http://ports.ubuntu.com/ubuntu-ports jammy-updates/multiverse arm64 Packages [1250 B]</span><br><span class="line">Get:13 http://ports.ubuntu.com/ubuntu-ports jammy-backports/universe arm64 Packages [5812 B]</span><br><span class="line">Get:14 http://ports.ubuntu.com/ubuntu-ports jammy-security/universe arm64 Packages [108 kB]</span><br><span class="line">Get:15 http://ports.ubuntu.com/ubuntu-ports jammy-security/restricted arm64 Packages [61.7 kB]</span><br><span class="line">Get:16 http://ports.ubuntu.com/ubuntu-ports jammy-security/main arm64 Packages [269 kB]</span><br><span class="line">Fetched 21.2 MB <span class="keyword">in</span> 1min 8s (310 kB/s)</span><br><span class="line">Reading package lists... Done</span><br><span class="line">Building dependency tree... Done</span><br><span class="line">Reading state information... Done</span><br><span class="line">16 packages can be upgraded. Run <span class="string">&#x27;apt list --upgradable&#x27;</span> to see them.</span><br><span class="line"></span><br><span class="line"><span class="comment"># ubuntu容器安装net-tools</span></span><br><span class="line">root@db6c8a0b2695:/<span class="comment"># apt install net-tools</span></span><br><span class="line">Reading package lists... Done</span><br><span class="line">Building dependency tree... Done</span><br><span class="line">Reading state information... Done</span><br><span class="line">The following NEW packages will be installed:</span><br><span class="line">  net-tools</span><br><span class="line">0 upgraded, 1 newly installed, 0 to remove and 16 not upgraded.</span><br><span class="line">Need to get 207 kB of archives.</span><br><span class="line">After this operation, 774 kB of additional disk space will be used.</span><br><span class="line">Get:1 http://ports.ubuntu.com/ubuntu-ports jammy/main arm64 net-tools arm64 1.60+git20181103.0eebece-1ubuntu5 [207 kB]</span><br><span class="line">Fetched 207 kB <span class="keyword">in</span> 5s (38.9 kB/s)</span><br><span class="line">debconf: delaying package configuration, since apt-utils is not installed</span><br><span class="line">Selecting previously unselected package net-tools.</span><br><span class="line">(Reading database ... 4389 files and directories currently installed.)</span><br><span class="line">Preparing to unpack .../net-tools_1.60+git20181103.0eebece-1ubuntu5_arm64.deb ...</span><br><span class="line">Unpacking net-tools (1.60+git20181103.0eebece-1ubuntu5) ...</span><br><span class="line">Setting up net-tools (1.60+git20181103.0eebece-1ubuntu5) ...</span><br><span class="line"></span><br><span class="line"><span class="comment"># ubuntu容器执行ifconfig命令</span></span><br><span class="line">root@db6c8a0b2695:/<span class="comment"># ifconfig</span></span><br><span class="line">eth0: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1500</span><br><span class="line">        inet 172.17.0.2  netmask 255.255.0.0  broadcast 172.17.255.255</span><br><span class="line">        ether 02:42:ac:11:00:02  txqueuelen 0  (Ethernet)</span><br><span class="line">        RX packets 15090  bytes 22180068 (22.1 MB)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 3322  bytes 183806 (183.8 KB)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br><span class="line"></span><br><span class="line">lo: flags=73&lt;UP,LOOPBACK,RUNNING&gt;  mtu 65536</span><br><span class="line">        inet 127.0.0.1  netmask 255.0.0.0</span><br><span class="line">        loop  txqueuelen 1000  (Local Loopback)</span><br><span class="line">        RX packets 0  bytes 0 (0.0 B)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 0  bytes 0 (0.0 B)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将该有net-tools工具的ubuntu镜像，创建成一个新的镜像</span></span><br><span class="line">william@william-ARM-Ubuntu:~$ sudo docker commit -m=<span class="string">&quot;ifconfig cmd add&quot;</span> -a=<span class="string">&quot;william&quot;</span> db6c8a0b2695 ubuntu:1.2</span><br><span class="line">sha256:07bca3d7c4a16461b32f57c09a306d9b597bb39c39d6f0dc7d2b1bc8489781f5</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看本地镜像仓库</span></span><br><span class="line">william@william-ARM-Ubuntu:~$ sudo docker images</span><br><span class="line">REPOSITORY                                            TAG       IMAGE ID       CREATED         SIZE</span><br><span class="line">ubuntu                                                1.2       07bca3d7c4a1   8 seconds ago   104MB</span><br><span class="line">registry.cn-hangzhou.aliyuncs.com/william117/ubuntu   1.1       7c0e2d4866ee   11 days ago     161MB</span><br><span class="line">redis                                                 latest    97772dcef71b   2 weeks ago     111MB</span><br><span class="line">ubuntu                                                latest    a7870fd478f4   7 weeks ago     69.2MB</span><br><span class="line">tomcat                                                latest    b64abfdee99c   7 months ago    668MB</span><br><span class="line">registry                                              latest    11bf57bb5c31   8 months ago    24.5MB</span><br><span class="line">redis                                                 6.0.8     d4deb73856a2   21 months ago   98.5MB</span><br></pre></td></tr></table></figure></li><li><p>curl验证私服库上有什么镜像</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">william@william-ARM-Ubuntu:~$ sudo docker ps</span><br><span class="line">CONTAINER ID   IMAGE      COMMAND                  CREATED          STATUS          PORTS                                       NAMES</span><br><span class="line">54549fde7be3   ubuntu     <span class="string">&quot;/bin/bash&quot;</span>              41 minutes ago   Up 41 minutes                                               cool_wilbur</span><br><span class="line">7a74ca4f7bc3   registry   <span class="string">&quot;/entrypoint.sh /etc…&quot;</span>   42 minutes ago   Up 42 minutes   0.0.0.0:5000-&gt;5000/tcp, :::5000-&gt;5000/tcp   mystifying_joliot</span><br><span class="line"></span><br><span class="line">william@william-ARM-Ubuntu:~$ curl -XGET http://10.211.55.3:5000/v2/_catalog</span><br><span class="line">&#123;<span class="string">&quot;repositories&quot;</span>:[]&#125;</span><br></pre></td></tr></table></figure></li><li><p>将新镜像ubuntu:1.2修改符合私服规范的Tag</p><p><code>docker tag 镜像:Tag Host:Port/Repository:Tag</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">william@william-ARM-Ubuntu:~$ sudo docker tag ubuntu:1.2 10.211.55.3:5000/ubuntu:1.2</span><br><span class="line">william@william-ARM-Ubuntu:~$ sudo docker images</span><br><span class="line">REPOSITORY                                            TAG       IMAGE ID       CREATED         SIZE</span><br><span class="line">10.211.55.3:5000/ubuntu                               1.2       07bca3d7c4a1   25 hours ago    104MB</span><br><span class="line">ubuntu                                                1.2       07bca3d7c4a1   25 hours ago    104MB</span><br><span class="line">registry.cn-hangzhou.aliyuncs.com/william117/ubuntu   1.1       7c0e2d4866ee   12 days ago     161MB</span><br><span class="line">redis                                                 latest    97772dcef71b   2 weeks ago     111MB</span><br><span class="line">ubuntu                                                latest    a7870fd478f4   7 weeks ago     69.2MB</span><br><span class="line">tomcat                                                latest    b64abfdee99c   7 months ago    668MB</span><br><span class="line">registry                                              latest    11bf57bb5c31   8 months ago    24.5MB</span><br><span class="line">redis                                                 6.0.8     d4deb73856a2   21 months ago   98.5MB</span><br></pre></td></tr></table></figure></li><li><p>修改配置文件使之支持http</p><p>Docker默认不允许http方式推送镜像。所以我们需要配置/etc/docker/daemon.json来取消限制</p><p><strong>修改完后不生效，建议重启Docker。Docker重启后，所有Docker容器将会停止。</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">william@william-ARM-Ubuntu:~$ cat /etc/docker/daemon.json</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;registry-mirrors&quot;</span>: [<span class="string">&quot;https://lsq7tfu3.mirror.aliyuncs.com&quot;</span>]</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment"># 上面是之前配置的阿里云镜像加速器，我们需要在阿里云镜像加速器下面写上&quot;insecure-registries&quot;:[&quot;10.211.55.3:5000&quot;]</span></span><br><span class="line"></span><br><span class="line">william@william-ARM-Ubuntu:~$ cat /etc/docker/daemon.json</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;registry-mirrors&quot;</span>: [<span class="string">&quot;https://lsq7tfu3.mirror.aliyuncs.com&quot;</span>],</span><br><span class="line">  <span class="string">&quot;insecure-registries&quot;</span>:[<span class="string">&quot;10.211.55.3:5000&quot;</span>]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启Docker后需要重新运行私服仓库</span></span><br><span class="line">william@william-ARM-Ubuntu:~$ sudo docker run -d -p 5000:5000 -v /home/william/DYJ/myregistry/:/home/<span class="built_in">test</span> --privileged=<span class="literal">true</span> registry</span><br><span class="line">3bbcd1f874b5bb2b2a3931d3dd77182d239a5a012dd0e54f58e5cb383701990c</span><br></pre></td></tr></table></figure></li><li><p>push推送到私服库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">william@william-ARM-Ubuntu:~$ sudo docker push 10.211.55.3:5000/ubuntu:1.2</span><br><span class="line">The push refers to repository [10.211.55.3:5000/ubuntu]</span><br><span class="line">d53c1aceb6e1: Pushed</span><br><span class="line">13e8c0db60e7: Pushed</span><br><span class="line">1.2: digest: sha256:af7b0352137dcbe7c9ea4de6c4c9e438dd8bba885e6937ad1e97cd53a0fc1913 size: 741</span><br><span class="line"></span><br><span class="line">william@william-ARM-Ubuntu:~$ sudo docker images</span><br><span class="line">REPOSITORY                                            TAG       IMAGE ID       CREATED         SIZE</span><br><span class="line">10.211.55.3:5000/ubuntu                               1.2       07bca3d7c4a1   25 hours ago    104MB</span><br><span class="line">ubuntu                                                1.2       07bca3d7c4a1   25 hours ago    104MB</span><br><span class="line">registry.cn-hangzhou.aliyuncs.com/william117/ubuntu   1.1       7c0e2d4866ee   12 days ago     161MB</span><br><span class="line">redis                                                 latest    97772dcef71b   2 weeks ago     111MB</span><br><span class="line">ubuntu                                                latest    a7870fd478f4   7 weeks ago     69.2MB</span><br><span class="line">tomcat                                                latest    b64abfdee99c   7 months ago    668MB</span><br><span class="line">registry                                              latest    11bf57bb5c31   8 months ago    24.5MB</span><br><span class="line">redis                                                 6.0.8     d4deb73856a2   21 months ago   98.5MB</span><br></pre></td></tr></table></figure></li><li><p>再次curl验证私服库上有什么镜像</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">william@william-ARM-Ubuntu:~$ curl -XGET http://10.211.55.3:5000/v2/_catalog</span><br><span class="line">&#123;<span class="string">&quot;repositories&quot;</span>:[<span class="string">&quot;ubuntu&quot;</span>]&#125;</span><br></pre></td></tr></table></figure></li><li><p>pull到本地并运行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 删除本地镜像以作验证</span></span><br><span class="line">william@william-ARM-Ubuntu:~$ sudo docker rmi -f 10.211.55.3:5000/ubuntu:1.2</span><br><span class="line">Untagged: 10.211.55.3:5000/ubuntu:1.2</span><br><span class="line">Untagged: 10.211.55.3:5000/ubuntu@sha256:af7b0352137dcbe7c9ea4de6c4c9e438dd8bba885e6937ad1e97cd53a0fc1913</span><br><span class="line"></span><br><span class="line">william@william-ARM-Ubuntu:~$ sudo docker rmi -f ubuntu:1.2</span><br><span class="line">Untagged: ubuntu:1.2</span><br><span class="line">Deleted: sha256:07bca3d7c4a16461b32f57c09a306d9b597bb39c39d6f0dc7d2b1bc8489781f5</span><br><span class="line">Deleted: sha256:ad133ac82d25ca03ee07e8fb53055321eb9ef89b13ce9bbefa957cf90bf76454</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看docker镜像</span></span><br><span class="line">william@william-ARM-Ubuntu:~$ sudo docker images</span><br><span class="line">REPOSITORY                                            TAG       IMAGE ID       CREATED         SIZE</span><br><span class="line">registry.cn-hangzhou.aliyuncs.com/william117/ubuntu   1.1       7c0e2d4866ee   12 days ago     161MB</span><br><span class="line">redis                                                 latest    97772dcef71b   2 weeks ago     111MB</span><br><span class="line">ubuntu                                                latest    a7870fd478f4   7 weeks ago     69.2MB</span><br><span class="line">tomcat                                                latest    b64abfdee99c   7 months ago    668MB</span><br><span class="line">registry                                              latest    11bf57bb5c31   8 months ago    24.5MB</span><br><span class="line">redis                                                 6.0.8     d4deb73856a2   21 months ago   98.5MB</span><br><span class="line"></span><br><span class="line"><span class="comment"># 从私服库拉取ubuntu镜像，注意Tag号要带上</span></span><br><span class="line">william@william-ARM-Ubuntu:~$ sudo docker pull 10.211.55.3:5000/ubuntu:1.2</span><br><span class="line">1.2: Pulling from ubuntu</span><br><span class="line">ed02c6ade914: Already exists</span><br><span class="line">07b9b2314dd0: Pull complete</span><br><span class="line">Digest: sha256:af7b0352137dcbe7c9ea4de6c4c9e438dd8bba885e6937ad1e97cd53a0fc1913</span><br><span class="line">Status: Downloaded newer image <span class="keyword">for</span> 10.211.55.3:5000/ubuntu:1.2</span><br><span class="line">10.211.55.3:5000/ubuntu:1.2</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果忘记了版本号，可以通过curl http://仓库IP:5000/v2/镜像名称/tags/list 查看</span></span><br><span class="line"></span><br><span class="line">william@william-ARM-Ubuntu:/etc/docker$ curl http://10.211.55.3:5000/v2/ubuntu/tags/list</span><br><span class="line">&#123;<span class="string">&quot;name&quot;</span>:<span class="string">&quot;ubuntu&quot;</span>,<span class="string">&quot;tags&quot;</span>:[<span class="string">&quot;1.2&quot;</span>]&#125;</span><br></pre></td></tr></table></figure></li></ol><h2 id="Docker容器数据卷"><a href="#Docker容器数据卷" class="headerlink" title="Docker容器数据卷"></a>Docker容器数据卷</h2><h3 id="坑：容器卷记得加入-–privilege-true"><a href="#坑：容器卷记得加入-–privilege-true" class="headerlink" title="坑：容器卷记得加入 [–privilege=true]"></a><font color="red"><strong>坑：容器卷记得加入 [–privilege=true]</strong></font></h3><p>为什么要开启权限</p><p>Docker挂载主机目录访问如果出现<font color="red">cannot open directory .: Permission denied</font></p><p>解决办法：在挂载目录后多加一个–privilege=true参数即可</p><p>如果是CentOS7安全模块会比之前系统版本加强，不安全的会先禁止，所以目录挂载的情况被默认为不安全的行为。</p><p>在SELinux里面挂载目录被禁止掉了，如果要开启，我们一般使用–privilege=true命令，扩大容器的权限解决挂载目录没有权限的问题，也即使用该参数，container内的root拥有真正的root权限，否则，container内的root只是外部的一个普通用户权限。</p><h3 id="回顾-本地镜像发布到私有库，参数V"><a href="#回顾-本地镜像发布到私有库，参数V" class="headerlink" title="回顾 [本地镜像发布到私有库，参数V]"></a>回顾 [本地镜像发布到私有库，参数V]</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">william@william-ARM-Ubuntu:~$ sudo docker run -d -p 5000:5000 -v /william/myregistry/:/tmp/registry --privileged=<span class="literal">true</span> registry</span><br><span class="line"></span><br><span class="line"><span class="comment">#v 添加自定义的容器卷</span></span><br><span class="line"><span class="comment"># /william/myregistry/ 宿主机路径</span></span><br><span class="line"><span class="comment"># /tmp/registryDocker容器内路径</span></span><br><span class="line"><span class="comment"># --privilege=true放开权限，运行容器实例以后，完成了容器和宿主机的某个绝对路径互通，实现了信息共享</span></span><br></pre></td></tr></table></figure><h3 id="什么是容器数据卷"><a href="#什么是容器数据卷" class="headerlink" title="什么是容器数据卷"></a>什么是容器数据卷</h3><p>Docker容器数据卷，即Docker Volume（卷）</p><p>当Docker容器运行的时候，会产生一些列的数据文件，这些数据文件会在关闭Docker容器时，直接消失的。但是其中产生部分的数据内容，我们是希望能够把它给保存起来，另做它用的。</p><p><code>关闭Docker容器=删除内部除了image底层数据的其他全部内容，即删库跑路</code></p><p>所以我们期望：</p><ul><li>将应用于运行的环境打包形成容器运行，伴随着容器运行产生的数据，我们希望这些数据能够持久化。</li><li>希望容器之间也能够实现数据的共享</li></ul><p>Docker容器产生的数据同步到本地，这样关闭容器的时候，数据是在本地的，不会影响数据的安全性。</p><p>Docker的容器卷技术也就是将容器内部目录和本地目录进行一个同步，即挂载。</p><p><code>总结：容器的持久化和同步化操作，容器之间也是可以数据共享的（但是注意挂载不是等于同步！！！）</code></p><p>卷就是目录或文件，存在于一个或多个容器中，由docker挂载到容器，但补数据联合文件系统，因此能够绕过Union File System提供一些用于持续存储或共享数据的特性：</p><p>卷的设计目的就是<font color="red">数据的持久化</font>，完全独立于容器的生存周期，因此Docker不会在容器删除时删除其挂载的数据卷。</p><ul><li><p>一句话：有点类似我们Redis里面的rdb和aof文件</p></li><li><p>将docker容器内的数据保存进宿主机的磁盘中</p></li><li><p>运行一个带有容器卷存储功能的容器实例</p><p><code>docker run -it --privileged=true -v /宿主机绝对路径目录: /容器内目录 镜像名</code></p></li></ul><h3 id="容器数据卷能干嘛"><a href="#容器数据卷能干嘛" class="headerlink" title="容器数据卷能干嘛"></a>容器数据卷能干嘛</h3><p>将docker容器内的数据保存进宿主机的磁盘中，完成敏感数据和重要数据的持久化和备份</p><p>Docker容器产生的数据，如果不备份，那么当容器实例删除后，容器内的数据自然也就没有了。为了能保存数据在Docker中我们使用卷。</p><p><strong>特点:</strong></p><ul><li><p>数据卷可在容器之间共享或重用数据</p></li><li><p>卷中的更改可以直接生效</p><ul><li>相较于docker cp更方便</li></ul></li><li><p>数据卷中的更改不会包含在镜像的更新中</p></li><li><p>数据卷的生命周期一直持续到没有容器使用为止</p></li></ul><p><img src="6.png"></p><h3 id="数据卷案例"><a href="#数据卷案例" class="headerlink" title="数据卷案例"></a>数据卷案例</h3><h4 id="宿主-vs-容器之间映射添加容器卷"><a href="#宿主-vs-容器之间映射添加容器卷" class="headerlink" title="宿主 vs 容器之间映射添加容器卷"></a>宿主 vs 容器之间映射添加容器卷</h4><p>直接添加命令</p><ul><li><p>命令</p><p>查看容器卷：<code>sudo docker volume ls</code></p><p><code>sudo docker run -it --privileged=true -v /宿主机绝对路径目录:/容器内目录 镜像名 </code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">william@william-ARM-Ubuntu:~$ sudo docker run -it -v /home/william/DYJ/myregistry/:/home/<span class="built_in">test</span> ubuntu /bin/bash</span><br></pre></td></tr></table></figure></li><li><p>查看数据卷是否挂载成功</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root@27776923a655:~<span class="comment"># cd /home/test</span></span><br><span class="line">root@27776923a655:/home/<span class="built_in">test</span><span class="comment"># touch hello.txt</span></span><br></pre></td></tr></table></figure><p><code>docker inspect 容器ID</code>        将容器的版本、属性信息以Json串的形式暴露</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">william@william-ARM-Ubuntu:~/DYJ/myregistry$ sudo docker ps</span><br><span class="line">CONTAINER ID   IMAGE     COMMAND       CREATED        STATUS        PORTS     NAMES</span><br><span class="line">27776923a655   ubuntu    <span class="string">&quot;/bin/bash&quot;</span>   18 hours ago   Up 18 hours             tender_kilby</span><br><span class="line"></span><br><span class="line">william@william-ARM-Ubuntu:~/DYJ/myregistry$ sudo docker inspect 27776923a655</span><br><span class="line">...</span><br><span class="line">        <span class="string">&quot;Mounts&quot;</span>: [</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="string">&quot;Type&quot;</span>: <span class="string">&quot;bind&quot;</span>,</span><br><span class="line">                <span class="string">&quot;Source&quot;</span>: <span class="string">&quot;/home/william/DYJ/myregistry&quot;</span>,</span><br><span class="line">                <span class="string">&quot;Destination&quot;</span>: <span class="string">&quot;/home/test&quot;</span>,</span><br><span class="line">                <span class="string">&quot;Mode&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">                <span class="string">&quot;RW&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">                <span class="string">&quot;Propagation&quot;</span>: <span class="string">&quot;rprivate&quot;</span></span><br><span class="line">            &#125;</span><br><span class="line">        ],</span><br><span class="line">        ...</span><br></pre></td></tr></table></figure></li><li><p>容器和宿主机之间数据共享</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">william@william-ARM-Ubuntu:~/DYJ/myregistry$ <span class="built_in">pwd</span></span><br><span class="line">/home/william/DYJ/myregistry</span><br><span class="line">william@william-ARM-Ubuntu:~/DYJ/myregistry$ ls</span><br><span class="line">hello.txt</span><br></pre></td></tr></table></figure></li></ul><h4 id="读写规则映射添加说明"><a href="#读写规则映射添加说明" class="headerlink" title="读写规则映射添加说明"></a>读写规则映射添加说明</h4><ol><li><p>读写（默认）</p><ul><li><code>sudo docker run -it --privileged=true -v /宿主机绝对路径目录:/容器内目录:rw 镜像名</code></li><li>默认同上案例，默认就是rw</li></ul></li><li><p>只读</p><ul><li>容器实例内部被限制，只能读取不能写</li><li>如果此时宿主机写入内容，可以同步给容器内，容器可以读取到</li><li><code>sudo docker run -it --privileged=true -v /宿主机绝对路径目录:/容器内目录:ro 镜像名</code></li><li>ro = read only</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">william@william-ARM-Ubuntu:~/DYJ/myregistry$ sudo docker run -it --privileged=<span class="literal">true</span> -v /home/william/DYJ/myregistry:/home/<span class="built_in">test</span>:ro ubuntu</span><br><span class="line">[sudo] password <span class="keyword">for</span> william:</span><br><span class="line">root@97b22f619d7d:/<span class="comment"># cd /home/test/</span></span><br><span class="line">root@97b22f619d7d:/home/<span class="built_in">test</span><span class="comment"># ls</span></span><br><span class="line">1.txt  2.txt  3.txt  hello.txt</span><br><span class="line">root@97b22f619d7d:/home/<span class="built_in">test</span><span class="comment"># touch 4.txt</span></span><br><span class="line">touch: cannot touch <span class="string">&#x27;4.txt&#x27;</span>: Read-only file system</span><br></pre></td></tr></table></figure></li></ol><h4 id="卷的继承和共享"><a href="#卷的继承和共享" class="headerlink" title="卷的继承和共享"></a>卷的继承和共享</h4><ol><li><p>容器1完成和宿主机的映射</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">william@william-ARM-Ubuntu:~/DYJ/myregistry$ sudo docker run -it --privileged=<span class="literal">true</span> -v /home/william/DYJ/myregistry:/home/<span class="built_in">test</span> --name tender_kilby ubuntu</span><br></pre></td></tr></table></figure></li><li><p>容器2继承容器1的卷规则</p><p><code>docker run -it --privileged=true --volumes-from 父类 --name u2 ubuntu</code></p><ul><li>父类为要u2容器继承的容器名称</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">william@william-ARM-Ubuntu:~/DYJ/myregistry$ docker run -it --privileged=<span class="literal">true</span> --volumes-from u1 --name u2 ubuntu</span><br><span class="line"></span><br><span class="line">william@william-ARM-Ubuntu:~/DYJ/myregistry$ sudo docker run -it --privileged=<span class="literal">true</span> --volumes-from tender_kilby --name u2 ubuntu</span><br><span class="line"></span><br><span class="line">root@20699ce4cbc1:/<span class="comment"># cd /home/test/</span></span><br><span class="line"></span><br><span class="line">root@20699ce4cbc1:/home/<span class="built_in">test</span><span class="comment"># ls</span></span><br><span class="line">1.txt  2.txt  3.txt  hello.txt</span><br></pre></td></tr></table></figure><ul><li>容器1停止后，容器2还会和宿主机挂载同样的路径</li><li>容器1恢复后，会同步容器2和宿主机的文件</li></ul></li></ol><h2 id="Docker常规安装简介"><a href="#Docker常规安装简介" class="headerlink" title="Docker常规安装简介"></a>Docker常规安装简介</h2>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;Docker的基本组成&quot;&gt;&lt;a href=&quot;#Docker的基本组成&quot; class=&quot;headerlink&quot; title=&quot;Docker的基本组成&quot;&gt;&lt;/a&gt;Docker的基本组成&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;镜像（image）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Docker镜像（Image）就是一个&lt;strong&gt;只读&lt;/strong&gt;的模板。镜像可以用来创建Docker容器，&lt;strong&gt;一个镜像可以创建很多容器。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;它也相当于一个root文件系统。比如官方镜像CentOs:7就包含了一套CentOs:7最小系统的root文件系统。&lt;/p&gt;
&lt;p&gt;相当于容器的“源代码”，&lt;font color=&quot;red&quot;&gt;docker镜像文件类似于Java的类模板，而docker容器实例类似于Java中new出来的实例对象。&lt;/font&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Linux" scheme="http://example.com/categories/Linux/"/>
    
    
    <category term="Docker" scheme="http://example.com/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>随机生成句子</title>
    <link href="http://example.com/2022/06/20/%E9%9A%8F%E6%9C%BA%E7%94%9F%E6%88%90%E5%8F%A5%E5%AD%90/"/>
    <id>http://example.com/2022/06/20/%E9%9A%8F%E6%9C%BA%E7%94%9F%E6%88%90%E5%8F%A5%E5%AD%90/</id>
    <published>2022-06-20T15:14:45.000Z</published>
    <updated>2022-06-20T15:16:03.211Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">from</span> faker <span class="keyword">import</span> Faker</span><br><span class="line"></span><br><span class="line"><span class="comment"># 判断文件是否存在，存在则删除</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">file_exists</span>():</span></span><br><span class="line">    file_path = <span class="string">&#x27;/root/file&#x27;</span></span><br><span class="line">    <span class="keyword">if</span> os.path.exists(file_path):</span><br><span class="line">        os.remove(file_path)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 封装句子生成</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">create_sentence</span>(<span class="params">i</span>):</span></span><br><span class="line">    f = Faker(<span class="string">&#x27;zh_CN&#x27;</span>)</span><br><span class="line">    s = f.sentence(nb_words=i, variable_nb_words=<span class="literal">False</span>)</span><br><span class="line">    <span class="keyword">return</span> s</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将句子与标签拼接，生成文本</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">create_document</span>(<span class="params">sentence_list</span>):</span></span><br><span class="line">    create_paragraph = <span class="string">&#x27;&lt;audio src=&quot;询问.wav&quot;&gt;&#123;&#125;&lt;/audio&gt;&#123;&#125;&lt;audio src=&quot;金额.wav&quot;&gt;&#123;&#125;&lt;/audio&gt;&#123;&#125;&lt;audio src=&quot;请您在.wav&quot; &gt;&#123;&#125;&lt;/audio&gt;&#123;&#125;&lt;audio src=&quot;逾期提醒.wav&quot; &gt;&#123;&#125;&lt;/audio&gt;\n&#x27;</span>.<span class="built_in">format</span>(*sentence_list)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;/root/file&#x27;</span>,<span class="string">&#x27;at&#x27;</span>,encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        f.write(create_paragraph)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 主程序</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>():</span></span><br><span class="line">    file_exists()</span><br><span class="line"></span><br><span class="line">    concurrent_time = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&quot;请输入并发次数：&quot;</span>))</span><br><span class="line">    loop_time = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&quot;请输入循环次数：&quot;</span>))</span><br><span class="line"></span><br><span class="line">    word_list = [<span class="number">21</span>,<span class="number">3</span>,<span class="number">15</span>,<span class="number">1</span>,<span class="number">18</span>,<span class="number">5</span>,<span class="number">33</span>]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(loop_time*concurrent_time):</span><br><span class="line">        sentence_list = []</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> word_list:</span><br><span class="line">            data = create_sentence(i)</span><br><span class="line">            sentence_list.append(data)</span><br><span class="line">        create_document(sentence_list)</span><br><span class="line"></span><br><span class="line">main()</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="Python" scheme="http://example.com/categories/Python/"/>
    
    
  </entry>
  
  <entry>
    <title>小时候的爱好</title>
    <link href="http://example.com/2022/03/22/%E5%B0%8F%E6%97%B6%E5%80%99%E7%9A%84%E7%88%B1%E5%A5%BD/"/>
    <id>http://example.com/2022/03/22/%E5%B0%8F%E6%97%B6%E5%80%99%E7%9A%84%E7%88%B1%E5%A5%BD/</id>
    <published>2022-03-22T14:45:41.000Z</published>
    <updated>2022-03-22T15:06:12.663Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>无意中看到了绘画书，突然好想画画啊，也算是圆了小时候没钱买画笔的一个梦想吧。</p><p>然后油画全套差不多200左右突然就心疼起自己的钱来…</p><p>明明吃饭、出去玩、买别的都挺舍得的😂，是否有一丝当年老妈的感触呢？</p><p>也可能我并没有准备好，所以没有下定决心要买吧。</p><p>不过我觉得我能按照书上的教程画个八九不离十吧应该。</p><span id="more"></span><p>从小就挺喜欢画画的，但是没有老师教，也没有钱买材料。之前看到过漫画教程的书籍，没想到让我发现了油画书（世上还有这种东西？）</p><p>那么我儿时的水彩梦是不是也能实现呢？</p><p>所以会有人送我一套绘画工具吗？（不要脸🤪）</p><p><img src="1.png"></p><p>初步打算天气缓和起来的时候在画吧。</p><p>现在要学习数字电路和操作系统，等之后应该能用树莓派做个什么东西出来吧。（树莓派现在能涨价400%真的挺离谱的，已经是理财产品了）</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;无意中看到了绘画书，突然好想画画啊，也算是圆了小时候没钱买画笔的一个梦想吧。&lt;/p&gt;
&lt;p&gt;然后油画全套差不多200左右突然就心疼起自己的钱来…&lt;/p&gt;
&lt;p&gt;明明吃饭、出去玩、买别的都挺舍得的😂，是否有一丝当年老妈的感触呢？&lt;/p&gt;
&lt;p&gt;也可能我并没有准备好，所以没有下定决心要买吧。&lt;/p&gt;
&lt;p&gt;不过我觉得我能按照书上的教程画个八九不离十吧应该。&lt;/p&gt;</summary>
    
    
    
    <category term="随笔" scheme="http://example.com/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
    <category term="2022" scheme="http://example.com/tags/2022/"/>
    
  </entry>
  
  <entry>
    <title>3.19雪中长城</title>
    <link href="http://example.com/2022/03/19/3-19%E9%9B%AA%E4%B8%AD%E9%95%BF%E5%9F%8E/"/>
    <id>http://example.com/2022/03/19/3-19%E9%9B%AA%E4%B8%AD%E9%95%BF%E5%9F%8E/</id>
    <published>2022-03-19T14:46:51.000Z</published>
    <updated>2022-03-20T14:10:07.103Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>好想变强，好想好好睡觉，好想走遍山河。</p><p>最近感觉自己越来越闲鱼了，上班之外基本啥也没有做，读书学习都没了兴趣。</p><p>现在唯一要等的就是花开了吧，唯一还有动力能做的就是游玩计划了吧。</p><p>苦瓜柠檬茶很好喝，苦瓜清甜而不苦，加上柠檬带有一丝微微的酸甜，还有冰能很好维持这种味道就久而不消散，以至于很久之后感觉嘴巴里还是清香甘甜的。</p><p>这个冬季，在每个雪天，去过了北京自然博物馆、天坛、故宫、香山、黑龙潭、北京游乐公园、长城</p><p>所以我能变成更好的那个自己吗</p><span id="more"></span><p><img src="1.jpg"></p><p><img src="2.jpg"></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;好想变强，好想好好睡觉，好想走遍山河。&lt;/p&gt;
&lt;p&gt;最近感觉自己越来越闲鱼了，上班之外基本啥也没有做，读书学习都没了兴趣。&lt;/p&gt;
&lt;p&gt;现在唯一要等的就是花开了吧，唯一还有动力能做的就是游玩计划了吧。&lt;/p&gt;
&lt;p&gt;苦瓜柠檬茶很好喝，苦瓜清甜而不苦，加上柠檬带有一丝微微的酸甜，还有冰能很好维持这种味道就久而不消散，以至于很久之后感觉嘴巴里还是清香甘甜的。&lt;/p&gt;
&lt;p&gt;这个冬季，在每个雪天，去过了北京自然博物馆、天坛、故宫、香山、黑龙潭、北京游乐公园、长城&lt;/p&gt;
&lt;p&gt;所以我能变成更好的那个自己吗&lt;/p&gt;</summary>
    
    
    
    <category term="随笔" scheme="http://example.com/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
    <category term="2022" scheme="http://example.com/tags/2022/"/>
    
  </entry>
  
  <entry>
    <title>ADB命令大全</title>
    <link href="http://example.com/2022/03/11/ADB%E5%91%BD%E4%BB%A4%E5%A4%A7%E5%85%A8/"/>
    <id>http://example.com/2022/03/11/ADB%E5%91%BD%E4%BB%A4%E5%A4%A7%E5%85%A8/</id>
    <published>2022-03-11T15:29:59.000Z</published>
    <updated>2022-03-11T15:31:59.967Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><blockquote><p>转载自：<a href="https://zhuanlan.zhihu.com/p/89060003">知乎：木头人</a></p></blockquote><p>常用命令用于速查，都是经常需要用到的，没有接触过adb命令从第二节开始看，对每个命令有详细解释。</p><h2 id="1-常用命令："><a href="#1-常用命令：" class="headerlink" title="1. 常用命令："></a>1. 常用命令：</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">adb devices #查看连接设备</span><br><span class="line"></span><br><span class="line">adb -s cf27456f shell # 指定连接设备使用命令</span><br><span class="line"></span><br><span class="line">adb install test.apk # 安装应用</span><br><span class="line"></span><br><span class="line">adb install -r demo.apk #重新安装现有应用，保留其数据。</span><br><span class="line"></span><br><span class="line">adb uninstall cn.com.test.mobile #卸载应用，需要指定包</span><br><span class="line"></span><br><span class="line">adb uninstall -k cn.com.test.mobile #卸载app 但保留数据和缓存文件</span><br><span class="line"></span><br><span class="line">adb shell pm list packages #列出手机装的所有app 的包名</span><br><span class="line"></span><br><span class="line">adb shell pm list packages -3 #列出除了系统应用的第三方应用包名</span><br><span class="line"></span><br><span class="line">adb shell pm clear cn.com.test.mobile #清除应用数据与缓存</span><br><span class="line"></span><br><span class="line">adb shell am start -ncn.com.test.mobile/.ui.SplashActivity #启动应用</span><br><span class="line"></span><br><span class="line">adb shell dumpsys package #包信息Package Information</span><br><span class="line"></span><br><span class="line">adb shell dumpsys meminfo #内存使用情况Memory Usage</span><br><span class="line"></span><br><span class="line">adb shell am force-stop cn.com.test.mobile #强制停止应用</span><br><span class="line"></span><br><span class="line">adb logcat #查看日志</span><br><span class="line"></span><br><span class="line">adb logcat -c #清除log 缓存</span><br><span class="line"></span><br><span class="line">adb reboot #重启</span><br><span class="line"></span><br><span class="line">adb get-serialno #获取序列号</span><br><span class="line"></span><br><span class="line">adb shell getprop ro.build.version.release #查看Android 系统版本</span><br><span class="line"></span><br><span class="line">adb shell top -s 10 #查看占用内存前10 的app</span><br><span class="line"></span><br><span class="line">adb push &lt;local&gt; &lt;remote&gt; #从本地复制文件到设备</span><br><span class="line"></span><br><span class="line">adb pull &lt;remote&gt; &lt;local&gt; #从设备复制文件到本地</span><br><span class="line"></span><br><span class="line">adb bugreport #查看bug 报告</span><br><span class="line"></span><br><span class="line">adb help #查看ADB 帮助</span><br></pre></td></tr></table></figure><span id="more"></span><h2 id="2-1-连接设备"><a href="#2-1-连接设备" class="headerlink" title="2.1 连接设备"></a>2.1 连接设备</h2><p><strong>adb [-d|-e|-s <serialNumber>] <command></strong></p><p>连接指定设备</p><p>参数：</p><p>-d 指定当前唯一通过USB 连接的Android 设备为命令目标</p><p>-e 指定当前唯一运行的模拟器为命令目标</p><p>-s <serialNumber> 指定相应serialNumber 号的设备/模拟器为命令目标</p><p>command 为所需对设备执行的命令</p><p>示例：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$adb</span> devices</span><br><span class="line">List of devices attached</span><br><span class="line">cf263b7f device</span><br><span class="line">emulator<span class="literal">-5554</span> offline</span><br><span class="line"><span class="number">192.168</span>.<span class="number">1.6</span>:<span class="number">5555</span> device</span><br><span class="line"><span class="variable">$adb</span> <span class="literal">-s</span> cf263b7f <span class="comment">#连接cf264b8f 设备</span></span><br></pre></td></tr></table></figure><p>adb devices 查看已连接的设备信息, 上面已经连接3台设备。</p><h2 id="2-2-查看信息"><a href="#2-2-查看信息" class="headerlink" title="2.2 查看信息"></a>2.2 查看信息</h2><p><strong>2.2.1 查看版本设备</strong></p><p><strong>adb version</strong> 查看adb 版本信息</p><p><strong>adb devices</strong> 查看adb 连接设备</p><p>示例：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$adb</span> devices</span><br><span class="line">List of devices attached</span><br><span class="line"><span class="number">1226959</span>f device</span><br><span class="line"><span class="number">3426422</span>f offline</span><br></pre></td></tr></table></figure><p>注意：offline 表示设备未连接成功或无响应，device 设备已连接</p><p><strong>adb shell getprop ro.product.model</strong> 查看设备型号</p><p><strong>adb get-serialno</strong> 获取设备序列号</p><p><strong>adb bugreport</strong> 查看bug 报告</p><p><strong>adb logcat</strong> 查看日志</p><p><strong>adb shell wm size</strong> 查看屏幕分辨率</p><p><strong>adb shell wm density</strong> 查看屏幕密度</p><p><strong>2.2.2 查看应用信息</strong></p><p><strong>adb shell pm list packages</strong> 列出手机装的所有app 的包名</p><p><strong>adb shell pm list packages -s</strong> 列出系统应用的所有包名</p><p><strong>adb shell pm list packages -3</strong> 列出除了系统应用的第三方应用包名</p><p><strong>adb shell pm list packages | find “test” win</strong> 列出手机装带有的test的包</p><p><strong>adb shell pm list packages | grep ‘test’ linux</strong> 列出手机装带有的test的包</p><p><strong>adb shell cat */sys/class/net/wlan0/address*</strong> 获取MAC 地址, 根据系统版本参数可能不同</p><p><strong>adb shell getprop ro.build.version.release</strong> 查看Android 系统版本</p><p><strong>adb shell dumpsys activity services [<packagename>]</strong> 查看正在运行的Services</p><p><packagename> 参数不是必须的，指定<packagename> 表示查看与某个包名相关的Services，不指定表示查看所有Services。</p><p><packagename> 不一定要给出完整的包名，比如运行adb shell dumpsys activity services org.zhihu，那么包名org.zhihu.demo1、org.zhihu.demo2 和org.zhihu 等相关的Services 都会列出来。</p><h2 id="2-3-app-安装和卸载"><a href="#2-3-app-安装和卸载" class="headerlink" title="2.3 app 安装和卸载"></a>2.3 app 安装和卸载</h2><p><strong>2.3.1 app 安装：</strong></p><p><strong>adb install <apkfile></strong> 参数apkfile 为.apk 文件名称</p><p><strong>adb install -r *test.apk*</strong> 保留数据和缓存文件，重新安装apk</p><p><strong>adb install -s *test.apk*</strong> 安装apk 到sd 卡</p><p><strong>2.3.2 app 卸载</strong></p><p><strong>adb uninstall <package></strong> 参数package 为软件包名称</p><p>示例：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$adb</span> uninstall cn.com.test.mobile</span><br><span class="line"> </span><br><span class="line"><span class="comment">#  卸载app 但保留数据和缓存文件</span></span><br><span class="line"><span class="variable">$adb</span> uninstall <span class="literal">-k</span> ccn.com.test.mobile </span><br></pre></td></tr></table></figure><h2 id="2-4-启动停止服务"><a href="#2-4-启动停止服务" class="headerlink" title="2.4 启动停止服务"></a>2.4 启动停止服务</h2><p><strong>adb start-server</strong></p><p>启动adb 服务，基本不会用到，因为只要设备连接正确，会自动启动adb server</p><p><strong>adb kill-server</strong></p><p>停止adb server</p><p><strong>adb -P <port> start-server</strong></p><p>指定adb server 的网络端口port （默认为5037）启动服务</p><h2 id="2-5-与应用交互"><a href="#2-5-与应用交互" class="headerlink" title="2.5 与应用交互"></a>2.5 与应用交互</h2><p><strong>adb shell pm clear <packagename></strong></p><p>清除应用数据与缓存</p><p>示例：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$adb</span> shell pm <span class="built_in">clear</span> cn.com.test.mobile</span><br></pre></td></tr></table></figure><p><strong>adb shell am force-stop <packagename></strong></p><p>强制停止应用</p><p>示例：强制停止微信</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$adb</span> shell am force<span class="literal">-stop</span> com.tencent.mm</span><br></pre></td></tr></table></figure><p><strong>adb shell am <command></strong></p><p>command 命令详解</p><blockquote><p>command 用途<br>start [options] <INTENT> 启动 <INTENT> 指定的 Activity<br>startservice [options] <INTENT> 启动 <INTENT> 指定的 Service<br>broadcast [options] <INTENT> 发送 <INTENT> 指定的广播<br>force-stop <packagename> 停止 <packagename> 相关的进程</p></blockquote><p><INTENT> 参数很灵活，和写 Android 程序时代码里的 Intent 相对应,用于决定 intent 对象的选项如下：</p><blockquote><p>-a <ACTION> 指定 action，如android.intent.action.VIEW<br>-c <CATEGORY> 指定 category，如android.intent.category.APP_CONTACTS<br>-n <COMPONENT> 指定完整 component 名，用于明确指定启动哪个 Activity，如<br><a href="https://link.zhihu.com/?target=http://com.example.app/.ExampleActivity">com.example.app/.ExampleActivity</a></p></blockquote><p><strong>2.5.1 启动 Activity</strong></p><p><strong>adb shell am start [options] <INTENT></strong></p><p>示例：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">#指定完整 component 名，用于明确指定启动哪个Activity</span></span><br><span class="line"><span class="variable">$adb</span> shell am <span class="built_in">start</span> <span class="literal">-n</span> &lt;COMPONENT&gt;  </span><br><span class="line">如： <span class="comment">#表示调起微信主界面</span></span><br><span class="line"><span class="variable">$adb</span> shell am <span class="built_in">start</span> <span class="literal">-n</span> com.tencent.mm/.ui.LauncherUI  </span><br></pre></td></tr></table></figure><p><strong>2.5.2 启动 Service</strong></p><p><strong>adb shell am startservice [options] <INTENT></strong></p><p>示例： 表示调起微信的某 Service。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$adb</span> shell am startservice <span class="literal">-n</span> com.tencent.mm/.plugin.accountsync.model.AccountAuthenticatorService</span><br></pre></td></tr></table></figure><p><strong>2.5.3 发送广播</strong></p><p>可以向所有组件广播，也可以只向指定组件广播。</p><p>adb shell am broadcast [options] <INTENT></p><p>示例：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#向所有组件广播 BOOT_COMPLETED (开机广播)</span></span><br><span class="line"><span class="variable">$adb</span> shell am broadcast <span class="literal">-a</span> android.intent.action.BOOT_COMPLETED   </span><br><span class="line"><span class="comment">#如：只向 org.mazhuang.boottimemeasure/.BootCompletedReceiver 广播 BOOT_COMPLETED：</span></span><br><span class="line"><span class="variable">$adb</span> shell am broadcast <span class="literal">-a</span> android.intent.action.BOOT_COMPLETED <span class="literal">-n</span> org.mazhuang.boottimemeasure/.BootCompletedReceiver</span><br></pre></td></tr></table></figure><p>系统预定义的广播：</p><p><img src="https://pic4.zhimg.com/80/v2-c1eb5c565ef8dbea3610dc7957225917_1440w.jpg" alt="img">Android 系统预定义广播</p><p><strong>2.5.4 强制停止应用</strong></p><p><strong>adb shell am force-stop <packagename></strong></p><p><em>示例：</em></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment"># 查询出包名</span></span><br><span class="line"><span class="variable">$adb</span> shell pm list packages </span><br><span class="line">.....</span><br><span class="line"><span class="comment"># 强制停止微信</span></span><br><span class="line"><span class="variable">$adb</span> shell am force<span class="literal">-stop</span> com.tencent.mm</span><br></pre></td></tr></table></figure><h2 id="2-6-文件管理"><a href="#2-6-文件管理" class="headerlink" title="2.6 文件管理"></a><strong>2.6 文件管理</strong></h2><p><strong>2.6.1 复制设备里的文件到电脑</strong></p><p><strong>adb pull &lt;设备里的文件路径&gt; [电脑上的目录]</strong></p><p>示例：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$adb</span> pull /sdcard/abc.mp4  ~/tmp/</span><br></pre></td></tr></table></figure><blockquote><p><em><strong>小技巧</strong>：设备上的文件路径可能需要 root 权限才能访问，如果你的设备已经 root 过，可以先使用 adb shell 和 su 命令在 adb shell 里获取 root 权限后，先 cp /path/on/device /sdcard/filename 将文件复制到 sdcard，然后 adb pull /sdcard/filename /path/on/pc。</em></p></blockquote><p><strong>2.6.2 复制电脑里的文件到设备</strong></p><p><strong>adb push &lt;电脑上的文件路径&gt; &lt;设备里的目录&gt;</strong></p><p><strong>示例：</strong></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$adb</span> push  e:/ss.au3  /<span class="keyword">data</span>/local/tmp/</span><br></pre></td></tr></table></figure><blockquote><p><em><strong>小技巧</strong>：设备上的文件路径普通权限可能无法直接写入，如果你的设备已经 root 过，可以先 adb push /path/on/pc /sdcard/filename，然后 adb shell 和 su 在 adb shell 里获取 root 权限后，cp /sdcard/filename /path/on/device</em></p></blockquote><h2 id="2-7-使用ADB命令模拟按键-输入"><a href="#2-7-使用ADB命令模拟按键-输入" class="headerlink" title="2.7 使用ADB命令模拟按键/输入"></a><strong>2.7 使用ADB命令模拟按键/输入</strong></h2><p><strong>adb shell input keyevent <keycode></strong></p><p>keycode位操作参数，不同的 keycode 能实现不同的功能</p><p>完整的功能见：<a href="https://link.zhihu.com/?target=https://developer.android.com/reference/android/view/KeyEvent.html">https://developer.android.com/reference/android/view/KeyEvent.html</a></p><p>keycode 能实现不同的功能，对应的编码如下：</p><p><img src="https://pic3.zhimg.com/80/v2-19f07a6dc7f9b589c0ca808be3302e32_1440w.jpg" alt="img">keycode 列表</p><p>示例：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$adb</span> shell input keyevent <span class="number">26</span>  <span class="comment">#电源键</span></span><br><span class="line"><span class="variable">$adb</span> shell input keyevent <span class="number">82</span>  <span class="comment">#菜单键</span></span><br><span class="line"><span class="variable">$adb</span> shell input keyevent <span class="number">3</span>  <span class="comment">#HOME 键</span></span><br><span class="line"><span class="variable">$adb</span> shell input keyevent <span class="number">4</span> <span class="comment">#返回键</span></span><br><span class="line"><span class="variable">$adb</span> shell input keyevent <span class="number">24</span> <span class="comment">#增加音量</span></span><br><span class="line"><span class="variable">$adb</span> shell input keyevent <span class="number">25</span> <span class="comment">#降低音量</span></span><br><span class="line"><span class="variable">$adb</span> shell input keyevent <span class="number">164</span> <span class="comment">#静音</span></span><br><span class="line"><span class="variable">$adb</span> shell input keyevent <span class="number">85</span>  <span class="comment">#播放/暂停</span></span><br><span class="line"><span class="variable">$adb</span> shell input keyevent <span class="number">86</span> <span class="comment">#停止播放</span></span><br><span class="line"><span class="variable">$adb</span> shell input keyevent <span class="number">87</span> <span class="comment">#播放下一首</span></span><br><span class="line"><span class="variable">$adb</span> shell input keyevent <span class="number">88</span> <span class="comment">#播放上一首</span></span><br><span class="line"><span class="variable">$adb</span> shell input keyevent <span class="number">126</span> <span class="comment">#恢复播放</span></span><br><span class="line"><span class="variable">$adb</span> shell input keyevent <span class="number">127</span> <span class="comment">#暂停播放</span></span><br><span class="line"><span class="variable">$adb</span> shell input keyevent <span class="number">224</span> <span class="comment">#点亮屏幕</span></span><br><span class="line"><span class="variable">$adb</span> shell input keyevent <span class="number">223</span> <span class="comment">#熄灭屏幕</span></span><br><span class="line"><span class="variable">$adb</span> shell input swipe <span class="number">300</span> <span class="number">1000</span> <span class="number">300</span> <span class="number">500</span>  <span class="comment">#滑动解锁，向上滑动手势解锁</span></span><br><span class="line"><span class="comment">#参数 300 1000 300 500 分别表示起始点x坐标 起始点y坐标 结束点x坐标 结束点y坐标 </span></span><br><span class="line"><span class="variable">$adb</span> shell input text hello <span class="comment">#焦点处于某文本框时输入文本</span></span><br></pre></td></tr></table></figure><h2 id="2-8-查看日志"><a href="#2-8-查看日志" class="headerlink" title="2.8 查看日志"></a><strong>2.8 查看日志</strong></h2><h3 id="2-8-1-Android-日志"><a href="#2-8-1-Android-日志" class="headerlink" title="2.8.1 Android 日志"></a><strong>2.8.1 Android 日志</strong></h3><p><strong>[adb] logcat [<option>] … [<filter-spec>] …</strong></p><p>*<strong>按级别过滤日志*</strong></p><p>按某级别过滤日志则会将该级别及以上的日志输出，Android 日志的优先级如下：</p><blockquote><p>V —— Verbose（最低，输出得最多）<br>D —— Debug<br>I —— Info<br>W —— Warning<br>E —— Error<br>F —— Fatal<br>S —— Silent（最高，啥也不输出）</p></blockquote><p>示例：输出W之上的日志，W,E,F,S</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$adb</span> logcat *:W</span><br></pre></td></tr></table></figure><p>*<strong>按 tag 和级别过滤日志*</strong></p><p><filter-spec> 可以由多个 <tag>[:priority] 组成</p><p>示例：输出 tag ActivityManager 的 I 以上级别日志，输出tag MyApp的D 以上级别日志，及其它 tag 的 S 级别日志（即屏蔽其它 tag 日志）。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$adb</span> logcat ActivityManager:I MyApp:D *:S</span><br></pre></td></tr></table></figure><p>*<strong>日志格式*</strong></p><p><strong>adb logcat -v <format></strong></p><p>指定日志输出格式</p><p>示例：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$adb</span> logcat <span class="literal">-v</span> &lt;format&gt;  指定日志输出格式</span><br><span class="line"><span class="variable">$adb</span> logcat <span class="literal">-v</span> brief   <span class="comment">#默认格式,&lt;priority&gt;/&lt;tag&gt;(&lt;pid&gt;): &lt;message&gt;</span></span><br><span class="line"><span class="variable">$adb</span> logcat <span class="literal">-v</span> <span class="keyword">process</span> <span class="comment">#&lt;priority&gt;(&lt;pid&gt;) &lt;message&gt;</span></span><br><span class="line"><span class="variable">$adb</span> logcat <span class="literal">-v</span> tag  <span class="comment">#&lt;priority&gt;/&lt;tag&gt;: &lt;message&gt;</span></span><br><span class="line"><span class="variable">$adb</span> logcat <span class="literal">-v</span> raw  <span class="comment">#&lt;message&gt;</span></span><br><span class="line"><span class="variable">$adb</span> logcat <span class="literal">-v</span> time  <span class="comment">#&lt;datetime&gt; &lt;priority&gt;/&lt;tag&gt;(&lt;pid&gt;): &lt;message&gt;</span></span><br><span class="line"><span class="variable">$adb</span> logcat <span class="literal">-v</span> threadtime <span class="comment">#&lt;datetime&gt; &lt;pid&gt; &lt;tid&gt; &lt;priority&gt; &lt;tag&gt;: &lt;message&gt;</span></span><br><span class="line"><span class="variable">$adb</span> logcat <span class="literal">-v</span> long  <span class="comment">#[ &lt;datetime&gt; &lt;pid&gt;:&lt;tid&gt; &lt;priority&gt;/&lt;tag&gt;:] &lt;message&gt;</span></span><br><span class="line"><span class="variable">$adb</span> logcat <span class="literal">-v</span> long ActivityManager:I *:S  <span class="comment">#指定格式可与上面的过滤同时使用</span></span><br></pre></td></tr></table></figure><p>*<strong>清空日志*</strong></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$adb</span> logcat <span class="literal">-c</span></span><br></pre></td></tr></table></figure><p><strong>2.8.2 内核日志</strong></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$adb</span> shell dmesg  </span><br></pre></td></tr></table></figure><p>查看内核日志</p><h2 id="2-9-查看设备信息"><a href="#2-9-查看设备信息" class="headerlink" title="2.9 查看设备信息"></a><strong>2.9 查看设备信息</strong></h2><h3 id="2-9-1-型号"><a href="#2-9-1-型号" class="headerlink" title="2.9.1 型号"></a><strong>2.9.1 型号</strong></h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$adb</span> shell getprop ro.product.model</span><br></pre></td></tr></table></figure><h3 id="2-9-2-电池状况"><a href="#2-9-2-电池状况" class="headerlink" title="2.9.2 电池状况"></a><strong>2.9.2 电池状况</strong></h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$adb</span> shell dumpsys battery</span><br></pre></td></tr></table></figure><h3 id="2-9-3-屏幕分辨率"><a href="#2-9-3-屏幕分辨率" class="headerlink" title="2.9.3 屏幕分辨率"></a><strong>2.9.3 屏幕分辨率</strong></h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$adb</span> shell wm size</span><br></pre></td></tr></table></figure><h3 id="2-9-4-屏幕密度"><a href="#2-9-4-屏幕密度" class="headerlink" title="2.9.4 屏幕密度"></a><strong>2.9.4 屏幕密度</strong></h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$adb</span> shell wm density</span><br></pre></td></tr></table></figure><h3 id="2-9-5-显示屏参数"><a href="#2-9-5-显示屏参数" class="headerlink" title="2.9.5 显示屏参数"></a><strong>2.9.5 显示屏参数</strong></h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$adb</span> shell dumpsys window displays</span><br></pre></td></tr></table></figure><h3 id="2-9-6-android-id"><a href="#2-9-6-android-id" class="headerlink" title="2.9.6 android_id"></a><strong>2.9.6 android_id</strong></h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$adb</span> shell settings get secure android_id</span><br></pre></td></tr></table></figure><h3 id="2-9-7-IMEI"><a href="#2-9-7-IMEI" class="headerlink" title="2.9.7 IMEI"></a><strong>2.9.7 IMEI</strong></h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$adb</span> shell dumpsys iphonesubinfo</span><br><span class="line"><span class="comment">#而在 Android 5.0 及以上版本里这个命令输出为空，得通过其它方式获取了（需要 root 权限）：</span></span><br><span class="line">adb shell</span><br><span class="line">su</span><br><span class="line"><span class="variable">$service</span> call iphonesubinfo <span class="number">1</span></span><br></pre></td></tr></table></figure><h3 id="2-9-8-Android-系统版本"><a href="#2-9-8-Android-系统版本" class="headerlink" title="2.9.8 Android 系统版本"></a><strong>2.9.8 Android 系统版本</strong></h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$adb</span> shell getprop ro.build.version.release</span><br></pre></td></tr></table></figure><h3 id="2-9-9-IP-地址"><a href="#2-9-9-IP-地址" class="headerlink" title="2.9.9 IP 地址"></a><strong>2.9.9 IP 地址</strong></h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$adb</span> shell ifconfig | find “Mask”</span><br><span class="line"><span class="variable">$adb</span> shell ifconfig wlan0 <span class="comment">#设备连着 WiFi，可以使用如下命令来查看局域网 IP</span></span><br><span class="line"><span class="variable">$adb</span> shell netcfg <span class="comment"># 上面两个无结果可以用这个，查看网络连接状态</span></span><br></pre></td></tr></table></figure><h3 id="2-9-10-Mac-地址"><a href="#2-9-10-Mac-地址" class="headerlink" title="2.9.10 Mac 地址"></a><strong>2.9.10 Mac 地址</strong></h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$adb</span> shell <span class="built_in">cat</span> /sys/<span class="class"><span class="keyword">class</span>/<span class="title">net</span>/<span class="title">wlan0</span>/<span class="title">address</span> # 设备不同可能地址不同</span></span><br></pre></td></tr></table></figure><h3 id="2-9-11-CPU-信息"><a href="#2-9-11-CPU-信息" class="headerlink" title="2.9.11 CPU 信息"></a><strong>2.9.11 CPU 信息</strong></h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$adb</span> shell <span class="built_in">cat</span> /proc/cpuinfo</span><br></pre></td></tr></table></figure><h3 id="2-9-12-内存信息"><a href="#2-9-12-内存信息" class="headerlink" title="2.9.12 内存信息"></a><strong>2.9.12 内存信息</strong></h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$adb</span> shell <span class="built_in">cat</span> /proc/meminfo</span><br></pre></td></tr></table></figure><h3 id="2-9-13更多硬件与系统属性"><a href="#2-9-13更多硬件与系统属性" class="headerlink" title="2.9.13更多硬件与系统属性"></a><strong>2.9.13更多硬件与系统属性</strong></h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$adb</span> shell <span class="built_in">cat</span> /system/build.prop</span><br></pre></td></tr></table></figure><p><strong>adb shell getprop &lt;属性名&gt;</strong></p><p>也可以</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$adb</span> shell <span class="built_in">cat</span> /system/build.prop | grep ro.product.cpu.abi</span><br><span class="line"><span class="variable">$adb</span> shell <span class="built_in">cat</span> /system/build.prop | find “ro.product.cpu.abi”</span><br></pre></td></tr></table></figure><p><img src="https://pic2.zhimg.com/80/v2-1991d0e88f480209f16d87c8dabf69b5_1440w.jpg" alt="img"></p><h2 id="2-10-修改设置"><a href="#2-10-修改设置" class="headerlink" title="2.10 修改设置"></a><strong>2.10 修改设置</strong></h2><p>修改设置之后，运行恢复命令仍然不太正常，可以运行 adb reboot 重启设备或手动重启。</p><p>修改设置的原理主要是通过 settings 命令修改 /data/data/com.android.providers.settings/databases/settings.db 里存放的设置值。</p><h3 id="2-10-1分辨率"><a href="#2-10-1分辨率" class="headerlink" title="2.10.1分辨率"></a><strong>2.10.1分辨率</strong></h3><p><strong>adb shell wm size *480x1024*</strong> #将分辨率修改为 480px * 1024px</p><p><strong>adb shell wm size reset</strong> #恢复原分辨率</p><h3 id="2-10-2屏幕密度"><a href="#2-10-2屏幕密度" class="headerlink" title="2.10.2屏幕密度"></a><strong>2.10.2屏幕密度</strong></h3><p><strong>adb shell wm density *160*</strong> #屏幕密度修改为 160dpi</p><p><strong>adb shell wm density reset</strong> #恢复原屏幕密度</p><h3 id="2-10-3显示区域"><a href="#2-10-3显示区域" class="headerlink" title="2.10.3显示区域"></a><strong>2.10.3显示区域</strong></h3><p><strong>adb shell wm overscan *0,0,0,100*</strong></p><p># 四个数字分别表示距离左、上、右、下边缘的留白像素，以上命令表示将屏幕底部 100px留白</p><p><strong>adb shell wm overscan reset</strong> #恢复显示区域</p><h3 id="2-10-4-关闭-USB-调试模式"><a href="#2-10-4-关闭-USB-调试模式" class="headerlink" title="2.10.4 关闭 USB 调试模式"></a><strong>2.10.4 关闭 USB 调试模式</strong></h3><p><strong>adb shell settings put global adb_enabled 0</strong></p><p>使用命令无法恢复调试模式，只能通过手动</p><h3 id="2-10-5-状态栏和导航栏的显示隐藏"><a href="#2-10-5-状态栏和导航栏的显示隐藏" class="headerlink" title="2.10.5 状态栏和导航栏的显示隐藏"></a><strong>2.10.5 状态栏和导航栏的显示隐藏</strong></h3><p><strong>adb shell settings put global policy_control <key-values></strong></p><p><key-values> 可由如下几种键及其对应的值组成，格式为 <key1>=<value1>:<key2>=<value2></p><p>key 键对应的值</p><p><img src="https://pic3.zhimg.com/80/v2-bd196a935a4b328d77fdfef289dc1926_1440w.jpg" alt="img"></p><p>这些键对应的值可则如下值用逗号组合</p><p><img src="https://pic1.zhimg.com/80/v2-a88f429d1bdaccbae6f7feeef65546d8_1440w.jpg" alt="img"></p><p>示例：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 设置在所有界面下都同时隐藏状态栏和导航栏</span></span><br><span class="line"><span class="variable">$adb</span> shell settings put global policy_control immersive.full=*</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置在包名为 com.package1 和 com.package2 的应用里隐藏状态栏，在除了包名为 com.package3 的所有应用里隐藏导航栏。</span></span><br><span class="line"><span class="variable">$adb</span> shell settings put global policy_control immersive.status=com.package1,com.package2:immersive.navigation=apps,<span class="literal">-com</span>.package3</span><br></pre></td></tr></table></figure><h2 id="2-11-实用功能"><a href="#2-11-实用功能" class="headerlink" title="2.11 实用功能"></a><strong>2.11 实用功能</strong></h2><h3 id="2-11-1屏幕截图"><a href="#2-11-1屏幕截图" class="headerlink" title="2.11.1屏幕截图"></a><strong>2.11.1屏幕截图</strong></h3><p><strong>adb exec-out screencap -p &gt; img.png</strong> # 老版本无exec-out命令，只适合于新版的截图</p><p><strong>adb shell screencap -p /sdcard/img.png</strong> # 老版本截图先保存在设备端</p><p><strong>adb pull /sdcard/img.png</strong> # 通过pull拷贝到本地</p><p>screencap 参数：</p><p>参数 含义</p><p>-p 指定保存文件为 png 格式</p><p>-d display-id 指定截图的显示屏编号（有多显示屏的情况下）</p><h3 id="2-11-2录制屏幕"><a href="#2-11-2录制屏幕" class="headerlink" title="2.11.2录制屏幕"></a><strong>2.11.2录制屏幕</strong></h3><p><strong>#</strong> 默认录制时间和最长录制时间都是180s</p><p><strong>adb shell screenrecord /sdcard/filename.mp4</strong></p><p>screenrecord 参数：</p><p>参数 含义</p><p>–size WIDTHxHEIGHT 视频的尺寸，比如 1280x720，默认是屏幕分辨率。</p><p>–bit-rate RATE 视频的比特率，默认是 4Mbps。</p><p>–time-limit TIME 录制时长，单位秒。</p><p>–verbose 输出更多信息。</p><p><strong>2.11.3 重新挂载 system 分区为可写</strong></p><p><strong>注：需要 root 权限</strong></p><p>/system 分区默认挂载为只读，但有些操作比如给 Android 系统添加命令、删除自带应用等需要对 /system 进行写操作，所以需要重新挂载它为可读写。</p><p>步骤：</p><p>1.进入 shell 并切换到 root 用户权限。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$adb</span> shell</span><br><span class="line"><span class="variable">$su</span></span><br></pre></td></tr></table></figure><p>2.查看当前分区挂载情况。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$mount</span></span><br><span class="line">输出如下</span><br><span class="line">.....</span><br><span class="line">debugfs /sys/kernel/debug debugfs rw,relatime <span class="number">0</span> <span class="number">0</span></span><br><span class="line">none /acct cgroup rw,relatime,cpuacct <span class="number">0</span> <span class="number">0</span></span><br><span class="line">none /sys/fs/cgroup tmpfs rw,seclabel,relatime,mode=<span class="number">750</span>,gid=<span class="number">1000</span> <span class="number">0</span> <span class="number">0</span></span><br><span class="line">tmpfs /mnt/obb tmpfs rw,seclabel,relatime,mode=<span class="number">755</span>,gid=<span class="number">1000</span> <span class="number">0</span> <span class="number">0</span></span><br><span class="line">none /dev/cpuctl cgroup rw,relatime,cpu <span class="number">0</span> <span class="number">0</span></span><br><span class="line">/dev/block/mtdblock0 /system ext4 ro,seclabel,relatime,<span class="keyword">data</span>=ordered <span class="number">0</span> <span class="number">0</span></span><br><span class="line">.......</span><br></pre></td></tr></table></figure><p>找到其中我们关注的带 <strong>/system</strong> 的那一行：</p><p>3.重新挂载。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$mount</span> <span class="literal">-o</span> remount,rw <span class="literal">-t</span> yaffs2 /dev/block/mtdblock0 /system</span><br></pre></td></tr></table></figure><p><strong>2.11.4 查看连接过的 WiFi 密码</strong></p><p><strong>注：需要 root 权限</strong></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$adb</span> shell</span><br><span class="line"><span class="variable">$su</span></span><br><span class="line"><span class="variable">$cat</span> /<span class="keyword">data</span>/misc/wifi/*.conf</span><br></pre></td></tr></table></figure><p><strong>2.11.5设置系统日期和时间</strong></p><p><strong>注：需要 root 权限</strong></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$adb</span> shell</span><br><span class="line"><span class="variable">$su</span></span><br><span class="line"><span class="variable">$date</span> <span class="literal">-s</span> <span class="number">20190531.131600</span>  <span class="comment">#将系统日期和时间更改为 2019 年 05 月 31 日 13 点 16 分 00 秒。</span></span><br></pre></td></tr></table></figure><p><strong>2.11.6 重启手机</strong></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$adb</span> reboot</span><br></pre></td></tr></table></figure><p><strong>2.11.7 检测设备是否已 root</strong></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$adb</span> shell</span><br><span class="line"><span class="variable">$su</span></span><br></pre></td></tr></table></figure><p>此时命令行提示符是 $ 则表示没有 root 权限，是 # 则表示已 root。</p><p><strong>2.11.8 使用 Monkey 进行压力测试</strong></p><p>Monkey 可以生成伪随机用户事件来模拟单击、触摸、手势等操作，可以对正在开发中的程序进行随机压力测试。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 向 &lt;packagename&gt; 指定的应用程序发送 500 个伪随机事件</span></span><br><span class="line"><span class="variable">$adb</span> shell monkey <span class="literal">-p</span> &lt;packagename&gt; <span class="literal">-v</span> <span class="number">500</span></span><br></pre></td></tr></table></figure><p>monkey 官方文档 <a href="https://link.zhihu.com/?target=https://developer.android.com/studio/test/monkey.html">https://developer.android.com/studio/test/monkey.html</a></p><p><strong>2.11.9 开启/关闭 WiFi</strong></p><p><strong>注：需要 root 权限</strong></p><p>开启 WiFi：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$adb</span> root</span><br><span class="line"><span class="variable">$adb</span> shell svc wifi enable</span><br></pre></td></tr></table></figure><p>关闭 WiFi：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$adb</span> root</span><br><span class="line"><span class="variable">$adb</span> shell svc wifi disable</span><br></pre></td></tr></table></figure><h2 id="2-12刷机相关命令"><a href="#2-12刷机相关命令" class="headerlink" title="2.12刷机相关命令"></a><strong>2.12刷机相关命令</strong></h2><p><strong>注：不要随便操作，没实验过无法保证成功</strong></p><h3 id="2-12-1重启到-Recovery-模式"><a href="#2-12-1重启到-Recovery-模式" class="headerlink" title="2.12.1重启到 Recovery 模式"></a><strong>2.12.1重启到 Recovery 模式</strong></h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$adb</span> reboot recovery</span><br></pre></td></tr></table></figure><h3 id="2-12-2从-Recovery-重启到-Android"><a href="#2-12-2从-Recovery-重启到-Android" class="headerlink" title="2.12.2从 Recovery 重启到 Android"></a><strong>2.12.2从 Recovery 重启到 Android</strong></h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$adb</span> reboot</span><br></pre></td></tr></table></figure><h3 id="2-12-3重启到-Fastboot-模式"><a href="#2-12-3重启到-Fastboot-模式" class="headerlink" title="2.12.3重启到 Fastboot 模式"></a><strong>2.12.3重启到 Fastboot 模式</strong></h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$adb</span> reboot bootloader</span><br></pre></td></tr></table></figure><h3 id="2-12-4通过-sideload-更新系统"><a href="#2-12-4通过-sideload-更新系统" class="headerlink" title="2.12.4通过 sideload 更新系统"></a><strong>2.12.4通过 sideload 更新系统</strong></h3><p>如果我们下载了 Android 设备对应的系统更新包到电脑上，那么也可以通过 adb 来完成更新。</p><p>以 Recovery 模式下更新为例：</p><p>1.重启到 Recovery 模式。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$adb</span> reboot recovery</span><br></pre></td></tr></table></figure><p>2.在设备的 Recovery 界面上操作进入 Apply update-Apply from ADB。</p><p>注：不同的 Recovery 菜单可能与此有差异，有的是一级菜单就有 Apply update from ADB。</p><p>3.通过 adb 上传和更新系统。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$adb</span> sideload &lt;path<span class="literal">-to</span><span class="literal">-update</span>.zip&gt;</span><br></pre></td></tr></table></figure><h2 id="2-13-更多-adb-shell-命令"><a href="#2-13-更多-adb-shell-命令" class="headerlink" title="2.13 更多 adb shell 命令"></a><strong>2.13 更多 adb shell 命令</strong></h2><h3 id="2-13-1查看进程"><a href="#2-13-1查看进程" class="headerlink" title="2.13.1查看进程"></a><strong>2.13.1查看进程</strong></h3><p>adb shell ps</p><h3 id="2-13-2查看实时资源占用情况"><a href="#2-13-2查看实时资源占用情况" class="headerlink" title="2.13.2查看实时资源占用情况"></a><strong>2.13.2查看实时资源占用情况</strong></h3><p>adb shell top</p><p>top命令参数如下：</p><p>使用方法: top [ -m max_procs ] [ -n iterations ] [ -d delay ] [ -s sort_column ] [ -t ] [ -h ]</p><blockquote><p>-m num 最多显示多少个进程<br>-n num 刷新多少次后退出<br>-d num 刷新时间间隔（单位秒，默认值 5）<br>-s col 按某列排序（可用 col 值：cpu, vss, rss, thr）<br>-t 显示线程信息<br>-h 显示帮助文档</p></blockquote><p><strong>2.13.3其它</strong></p><p><img src="https://pic1.zhimg.com/80/v2-6044fe28a519255e62608e7ea542e65c_1440w.jpg" alt="img"></p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;转载自：&lt;a href=&quot;https://zhuanlan.zhihu.com/p/89060003&quot;&gt;知乎：木头人&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;常用命令用于速查，都是经常需要用到的，没有接触过adb命令从第二节开始看，对每个命令有详细解释。&lt;/p&gt;
&lt;h2 id=&quot;1-常用命令：&quot;&gt;&lt;a href=&quot;#1-常用命令：&quot; class=&quot;headerlink&quot; title=&quot;1. 常用命令：&quot;&gt;&lt;/a&gt;1. 常用命令：&lt;/h2&gt;&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;adb devices #查看连接设备&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;adb -s cf27456f shell # 指定连接设备使用命令&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;adb install test.apk # 安装应用&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;adb install -r demo.apk #重新安装现有应用，保留其数据。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;adb uninstall cn.com.test.mobile #卸载应用，需要指定包&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;adb uninstall -k cn.com.test.mobile #卸载app 但保留数据和缓存文件&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;adb shell pm list packages #列出手机装的所有app 的包名&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;adb shell pm list packages -3 #列出除了系统应用的第三方应用包名&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;adb shell pm clear cn.com.test.mobile #清除应用数据与缓存&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;adb shell am start -ncn.com.test.mobile/.ui.SplashActivity #启动应用&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;adb shell dumpsys package #包信息Package Information&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;adb shell dumpsys meminfo #内存使用情况Memory Usage&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;adb shell am force-stop cn.com.test.mobile #强制停止应用&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;adb logcat #查看日志&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;adb logcat -c #清除log 缓存&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;adb reboot #重启&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;adb get-serialno #获取序列号&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;adb shell getprop ro.build.version.release #查看Android 系统版本&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;adb shell top -s 10 #查看占用内存前10 的app&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;adb push &amp;lt;local&amp;gt; &amp;lt;remote&amp;gt; #从本地复制文件到设备&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;adb pull &amp;lt;remote&amp;gt; &amp;lt;local&amp;gt; #从设备复制文件到本地&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;adb bugreport #查看bug 报告&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;adb help #查看ADB 帮助&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="软件测试" scheme="http://example.com/categories/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/"/>
    
    
  </entry>
  
  <entry>
    <title>sql循环生成数据</title>
    <link href="http://example.com/2022/03/11/sql%E5%BE%AA%E7%8E%AF%E7%94%9F%E6%88%90%E6%95%B0%E6%8D%AE/"/>
    <id>http://example.com/2022/03/11/sql%E5%BE%AA%E7%8E%AF%E7%94%9F%E6%88%90%E6%95%B0%E6%8D%AE/</id>
    <published>2022-03-11T15:22:54.000Z</published>
    <updated>2022-03-11T15:29:05.447Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>使用python脚本，批量生成mysql数据，并插入到服务器中</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 导入pymysql模块</span></span><br><span class="line"><span class="keyword">import</span> pymysql</span><br><span class="line"></span><br><span class="line"><span class="comment"># 连接database</span></span><br><span class="line">conn = pymysql.connect(host=<span class="string">&#x27;ip&#x27;</span>, user=<span class="string">&#x27;root&#x27;</span>, port=<span class="number">3306</span>, password=<span class="string">&#x27;admin&#x27;</span>, db=<span class="string">&#x27;iod&#x27;</span>,charset=<span class="string">&#x27;utf8mb4&#x27;</span>)</span><br><span class="line"><span class="comment"># 得到一个可以执行SQL语句的光标对象</span></span><br><span class="line">cursor = conn.cursor()</span><br><span class="line"><span class="comment"># 插入sql</span></span><br><span class="line">sql = <span class="string">&quot;&quot;&quot;INSERT INTO table(column1,column2...) VALUES (value1,value2,...);</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行SQL语句，一次生成100W条太费时间，每1000条循环一次</span></span><br><span class="line"><span class="keyword">for</span> k <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1000</span>):</span><br><span class="line">    [cursor.execute(sql) <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1000</span>)]</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Done &quot;</span>+<span class="built_in">str</span>(k))</span><br><span class="line"><span class="comment"># 提交事务</span></span><br><span class="line">conn.commit()</span><br><span class="line">cursor.close()</span><br><span class="line">conn.close()</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="python" scheme="http://example.com/categories/python/"/>
    
    
  </entry>
  
  <entry>
    <title>python发送邮件</title>
    <link href="http://example.com/2022/03/08/python%E5%8F%91%E9%80%81%E9%82%AE%E4%BB%B6/"/>
    <id>http://example.com/2022/03/08/python%E5%8F%91%E9%80%81%E9%82%AE%E4%BB%B6/</id>
    <published>2022-03-08T13:48:44.000Z</published>
    <updated>2022-03-08T14:34:56.580Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h3 id="0-前言"><a href="#0-前言" class="headerlink" title="0. 前言"></a>0. 前言</h3><p>发送电子邮件是个很常见的开发需求。比如你写了个监控天气的脚本，发现第二天要下雨，或者网站上关注的某个商品降价了，就可以发个邮件到邮箱来提醒自己。</p><p>使用 Python 脚本发送邮件并不复杂。不过由于各家邮件的发送机制和安全策略不同，常常会因为一些配置问题造成发送失败。今天我们来举例讲讲如何使用 Python 发送邮件。</p><p>本文主要内容包括，了解发邮件的思路，发送邮件需要的一些设置，发送一封简单的邮件，发送一封包含附件的邮件，在写代码过程中我们需要注意哪些问题等等。（完整参考代码地址见文末）</p><span id="more"></span><h3 id="1-思路"><a href="#1-思路" class="headerlink" title="1. 思路"></a>1. 思路</h3><p>使用脚本发送邮件的思路其实和客户端发送邮件一样，过程都是：</p><p><strong>登录 —&gt; 写邮件 —&gt; 发送</strong></p><p>只不过通过脚本发送时我们需要考虑到整个过程的方方面面。以下为思路导图：</p><p><img src="Python-Email.png"></p><h3 id="2-Python-email-模块"><a href="#2-Python-email-模块" class="headerlink" title="2. Python-email 模块"></a>2. Python-email 模块</h3><p>与发送邮件相关的 Python 模块：</p><p><strong>smtplib</strong></p><p>是关于 SMTP（简单邮件传输协议）的操作模块，在发送邮件的过程中起到服务器之间互相通信的作用。</p><p><strong>email</strong></p><p>简单来说，即服务器之间通信的信息，包括信息头、信息主体等等。</p><p>举个简单的例子，当你登录邮箱，写好邮件后点击发送，这部分是由 SMTP 接管；而写邮件、添加附件是由 email 模块控制。</p><h3 id="3-开通电子邮箱的SMTP功能"><a href="#3-开通电子邮箱的SMTP功能" class="headerlink" title="3. 开通电子邮箱的SMTP功能"></a>3. 开通电子邮箱的SMTP功能</h3><p>在使用脚本发邮件之前，我们需要打开自己邮箱的 SMTP 功能，各家邮箱的设置方法就不一一讲述了，具体使用时可以百度一下，下面以 163 邮箱设置为例做一个简单的演示：</p><p><img src="1.png"></p><p><img src="2.png"></p><h3 id="4-简单代码"><a href="#4-简单代码" class="headerlink" title="4. 简单代码"></a>4. 简单代码</h3><p>实践出真知，我们结合一个简单的代码来理解这一过程：登录 163 邮箱，向 qq 邮箱发送邮件。</p><p>脚本分为三个步骤：</p><ol><li>设置好服务器端信息</li><li>邮件主体信息</li><li>登录发送</li></ol><p>另外在处理文本时，我们需要使用 MIMEText 类。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> smtplib</span><br><span class="line"><span class="keyword">from</span> email.mime.text <span class="keyword">import</span> MIMEText</span><br><span class="line"><span class="comment">#设置服务器所需信息</span></span><br><span class="line"><span class="comment">#163邮箱服务器地址</span></span><br><span class="line">mail_host = <span class="string">&#x27;smtp.163.com&#x27;</span>  </span><br><span class="line"><span class="comment">#163用户名</span></span><br><span class="line">mail_user = <span class="string">&#x27;176*****10&#x27;</span>  </span><br><span class="line"><span class="comment">#密码(部分邮箱为授权码) </span></span><br><span class="line">mail_pass = <span class="string">&#x27;7******x&#x27;</span>   </span><br><span class="line"><span class="comment">#邮件发送方邮箱地址</span></span><br><span class="line">sender = <span class="string">&#x27;176*****10@163.com&#x27;</span>  </span><br><span class="line"><span class="comment">#邮件接受方邮箱地址，注意需要[]包裹，这意味着你可以写多个邮件地址群发</span></span><br><span class="line">receivers = [<span class="string">&#x27;45*****34@qq.com&#x27;</span>]  </span><br><span class="line"></span><br><span class="line"><span class="comment">#设置email信息</span></span><br><span class="line"><span class="comment">#邮件内容设置</span></span><br><span class="line">message = MIMEText(<span class="string">&#x27;content&#x27;</span>,<span class="string">&#x27;plain&#x27;</span>,<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line"><span class="comment">#邮件主题       </span></span><br><span class="line">message[<span class="string">&#x27;Subject&#x27;</span>] = <span class="string">&#x27;title&#x27;</span> </span><br><span class="line"><span class="comment">#发送方信息</span></span><br><span class="line">message[<span class="string">&#x27;From&#x27;</span>] = sender </span><br><span class="line"><span class="comment">#接受方信息     </span></span><br><span class="line">message[<span class="string">&#x27;To&#x27;</span>] = receivers[<span class="number">0</span>]  </span><br><span class="line"></span><br><span class="line"><span class="comment">#登录并发送邮件</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    smtpObj = smtplib.SMTP() </span><br><span class="line">    <span class="comment">#连接到服务器</span></span><br><span class="line">    smtpObj.connect(mail_host,<span class="number">25</span>)</span><br><span class="line">    <span class="comment">#登录到服务器</span></span><br><span class="line">    smtpObj.login(mail_user,mail_pass) </span><br><span class="line">    <span class="comment">#发送</span></span><br><span class="line">    smtpObj.sendmail(</span><br><span class="line">        sender,receivers,message.as_string()) </span><br><span class="line">    <span class="comment">#退出</span></span><br><span class="line">    smtpObj.quit() </span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;success&#x27;</span>)</span><br><span class="line"><span class="keyword">except</span> smtplib.SMTPException <span class="keyword">as</span> e:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;error&#x27;</span>,e) <span class="comment">#打印错误</span></span><br></pre></td></tr></table></figure><p><strong>注意事项：</strong></p><p>一些邮箱登录比如 QQ 邮箱需要 SSL 认证，所以 SMTP 已经不能满足要求，而需要SMTP_SSL，解决办法为：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#启动</span></span><br><span class="line">smtpObj = smtplib.SMTP()</span><br><span class="line"><span class="comment">#连接到服务器</span></span><br><span class="line">smtpObj.connect(mail_host,<span class="number">25</span>)</span><br><span class="line"><span class="comment">#######替换为########</span></span><br><span class="line">smtpObj = smtplib.SMTP_SSL(mail_host)</span><br></pre></td></tr></table></figure><h3 id="5-带附件的Email"><a href="#5-带附件的Email" class="headerlink" title="5. 带附件的Email"></a>5. 带附件的Email</h3><p>上面我们介绍了发送字符串的邮件，但这明显不满足现代邮件的需求，下面我们介绍如何发送内容以 HTML 格式，并且带有图片和文本文件的邮件。</p><p>处理多种形态的邮件主体我们需要 MIMEMultipart 类，而处理图片需要 MIMEImage 类。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> smtplib</span><br><span class="line"><span class="keyword">from</span> email.mime.text <span class="keyword">import</span> MIMEText</span><br><span class="line"><span class="keyword">from</span> email.mime.multipart <span class="keyword">import</span> MIMEMultipart</span><br><span class="line"><span class="keyword">from</span> email.mime.image <span class="keyword">import</span> MIMEImage</span><br><span class="line"></span><br><span class="line"><span class="comment">#设置登录及服务器信息</span></span><br><span class="line">mail_host = <span class="string">&#x27;smtp.163.com&#x27;</span></span><br><span class="line">mail_user = <span class="string">&#x27;176*****10&#x27;</span></span><br><span class="line">mail_pass = <span class="string">&#x27;7******x&#x27;</span></span><br><span class="line">sender = <span class="string">&#x27;176*****10@163.com&#x27;</span></span><br><span class="line">receivers = [<span class="string">&#x27;4******4@qq.com&#x27;</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment">#设置eamil信息</span></span><br><span class="line"><span class="comment">#添加一个MIMEmultipart类，处理正文及附件</span></span><br><span class="line">message = MIMEMultipart()</span><br><span class="line">message[<span class="string">&#x27;From&#x27;</span>] = sender</span><br><span class="line">message[<span class="string">&#x27;To&#x27;</span>] = receivers[<span class="number">0</span>]</span><br><span class="line">message[<span class="string">&#x27;Subject&#x27;</span>] = <span class="string">&#x27;title&#x27;</span></span><br><span class="line"><span class="comment">#推荐使用html格式的正文内容，这样比较灵活，可以附加图片地址，调整格式等</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;abc.html&#x27;</span>,<span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    content = f.read()</span><br><span class="line"><span class="comment">#设置html格式参数</span></span><br><span class="line">part1 = MIMEText(content,<span class="string">&#x27;html&#x27;</span>,<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line"><span class="comment">#添加一个txt文本附件</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;abc.txt&#x27;</span>,<span class="string">&#x27;r&#x27;</span>)<span class="keyword">as</span> h:</span><br><span class="line">    content2 = h.read()</span><br><span class="line"><span class="comment">#设置txt参数</span></span><br><span class="line">part2 = MIMEText(content2,<span class="string">&#x27;plain&#x27;</span>,<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line"><span class="comment">#附件设置内容类型，方便起见，设置为二进制流</span></span><br><span class="line">part2[<span class="string">&#x27;Content-Type&#x27;</span>] = <span class="string">&#x27;application/octet-stream&#x27;</span></span><br><span class="line"><span class="comment">#设置附件头，添加文件名</span></span><br><span class="line">part2[<span class="string">&#x27;Content-Disposition&#x27;</span>] = <span class="string">&#x27;attachment;filename=&quot;abc.txt&quot;&#x27;</span></span><br><span class="line"><span class="comment">#添加照片附件</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;1.png&#x27;</span>,<span class="string">&#x27;rb&#x27;</span>)<span class="keyword">as</span> fp:</span><br><span class="line">    picture = MIMEImage(fp.read())</span><br><span class="line">    <span class="comment">#与txt文件设置相似</span></span><br><span class="line">    picture[<span class="string">&#x27;Content-Type&#x27;</span>] = <span class="string">&#x27;application/octet-stream&#x27;</span></span><br><span class="line">    picture[<span class="string">&#x27;Content-Disposition&#x27;</span>] = <span class="string">&#x27;attachment;filename=&quot;1.png&quot;&#x27;</span></span><br><span class="line"><span class="comment">#将内容附加到邮件主体中</span></span><br><span class="line">message.attach(part1)</span><br><span class="line">message.attach(part2)</span><br><span class="line">message.attach(picture)</span><br><span class="line"></span><br><span class="line"><span class="comment">#登录并发送</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    smtpObj = smtplib.SMTP()</span><br><span class="line">    smtpObj.connect(mail_host,<span class="number">25</span>)</span><br><span class="line">    smtpObj.login(mail_user,mail_pass)</span><br><span class="line">    smtpObj.sendmail(</span><br><span class="line">        sender,receivers,message.as_string())</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;success&#x27;</span>)</span><br><span class="line">    smtpObj.quit()</span><br><span class="line"><span class="keyword">except</span> smtplib.SMTPException <span class="keyword">as</span> e:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;error&#x27;</span>,e)</span><br></pre></td></tr></table></figure><h3 id="6-小结"><a href="#6-小结" class="headerlink" title="6.小结"></a>6.小结</h3><p>通过上面的代码，想必大家已经对发邮件有了基本的认识。</p><p>从整体上我们要把握整个过程的思路：</p><ol><li>登录</li><li>写邮件</li><li>发送</li></ol><p>微观上我们需要了解：</p><ul><li>smtplib/email 模块的代码规则；</li><li>什么时候使用 SMTP，什么时候使用 SMTP_SSL？</li><li>针对不同的邮件内容需要使用到不同的类，MIMEmultipart、MIMEText、MIMEIamge 等等；</li><li>怎么去设置附件信息</li></ul><p>当然，看再多教程，不如亲自动手写一段代码。大家不妨都自己发一封邮件试一试。</p><h3 id="7-监控进程，发送邮件"><a href="#7-监控进程，发送邮件" class="headerlink" title="7. 监控进程，发送邮件"></a>7. 监控进程，发送邮件</h3><p>这个脚本只是做了简单的监控程序进程，当然也可以监控进程后重启进程，发送时间点等，就不过多详写了。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line"><span class="meta">#</span><span class="bash">test16.py修改你所检测的进程名称</span></span><br><span class="line"></span><br><span class="line">while true;do</span><br><span class="line">    count=`ps -ef | grep test16.py |grep -v grep`</span><br><span class="line">    if [ &quot;$?&quot; != &quot;0&quot; ];then</span><br><span class="line">        echo  &quot;&gt;&gt;&gt;&gt; no process,run it&quot;</span><br><span class="line">        python3 send_email.py</span><br><span class="line">    else</span><br><span class="line">        echo &quot;&gt;&gt;&gt;&gt; process is runing...&quot;</span><br><span class="line">    fi</span><br><span class="line"></span><br><span class="line">    sleep 300</span><br><span class="line">done</span><br></pre></td></tr></table></figure><blockquote><p>转载自：<a href="https://zhuanlan.zhihu.com/p/24180606">Crossin的编程教室</a></p></blockquote>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;0-前言&quot;&gt;&lt;a href=&quot;#0-前言&quot; class=&quot;headerlink&quot; title=&quot;0. 前言&quot;&gt;&lt;/a&gt;0. 前言&lt;/h3&gt;&lt;p&gt;发送电子邮件是个很常见的开发需求。比如你写了个监控天气的脚本，发现第二天要下雨，或者网站上关注的某个商品降价了，就可以发个邮件到邮箱来提醒自己。&lt;/p&gt;
&lt;p&gt;使用 Python 脚本发送邮件并不复杂。不过由于各家邮件的发送机制和安全策略不同，常常会因为一些配置问题造成发送失败。今天我们来举例讲讲如何使用 Python 发送邮件。&lt;/p&gt;
&lt;p&gt;本文主要内容包括，了解发邮件的思路，发送邮件需要的一些设置，发送一封简单的邮件，发送一封包含附件的邮件，在写代码过程中我们需要注意哪些问题等等。（完整参考代码地址见文末）&lt;/p&gt;</summary>
    
    
    
    <category term="Python" scheme="http://example.com/categories/Python/"/>
    
    
  </entry>
  
  <entry>
    <title>寒梅落尽把冬了，家燕衔春思归巢</title>
    <link href="http://example.com/2022/02/15/%E5%AF%92%E6%A2%85%E8%90%BD%E5%B0%BD%E6%8A%8A%E5%86%AC%E4%BA%86%EF%BC%8C%E5%AE%B6%E7%87%95%E8%A1%94%E6%98%A5%E6%80%9D%E5%BD%92%E5%B7%A2/"/>
    <id>http://example.com/2022/02/15/%E5%AF%92%E6%A2%85%E8%90%BD%E5%B0%BD%E6%8A%8A%E5%86%AC%E4%BA%86%EF%BC%8C%E5%AE%B6%E7%87%95%E8%A1%94%E6%98%A5%E6%80%9D%E5%BD%92%E5%B7%A2/</id>
    <published>2022-02-15T13:58:50.000Z</published>
    <updated>2022-02-17T14:09:16.161Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script>    <div id="aplayer-xUZcePXE" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="000MbcLT3Rrxqi" data-server="tencent" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#ad7a86"    ></div></br><center>青玉案·元夕<br><br>东风夜放花千树。更吹落，星如雨。宝马雕车香满路。凤箫声动，玉壶光转，一夜鱼龙舞。<br>蛾儿雪柳黄金缕。笑语盈盈暗香去。众里寻他千百度。蓦然回首，那人却在，灯火阑珊处。</center><span id="more"></span><br><p>上元节快乐啊  (*^▽^*)</p><p>看了b站的《千灯会》好喜欢宋明两朝的衣服啊，上次去故宫赏雪就有一位男子穿着飞鱼服。英姿飒爽，神气不已，仿佛那便是当朝的官员，而我已处于影视之外。</p><p>好想有一天我也能穿上飞鱼服带上隐形眼镜穿过故宫，或是走在清明上河园。</p><p>清明节十三陵好像会有表演活动，那时候会有很多古装演员。</p><p>3至4月的长城杏花遍野，当你听到韩红唱的《美丽的神话》仿佛回到大秦，见证了一把蒙毅与朝鲜公主的爱情故事。</p><p>玉渊潭的樱花🌸、温榆河湿地的河滩、陶然亭公园远处的中央电视塔，从上便可眺望北京的夜景。</p><p>还有顺义鲜花港，海淀的百望山。</p><p>五月期待可以去云南，环绕着洱海，拍下最美的日落。</p><p>于玉龙雪山上，俯瞰人世间。</p><p>踏着丽江古都的房梁，乔装成一名侠客。</p><p>骑着马慢慢穿过那条千年之久的茶马古道。</p><br><div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;">    <iframe src="https://www.bilibili.com/video/BV1TT4y1976y?spm_id_from=333.999.0.0"  scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;"></iframe></div>]]></content>
    
    
    <summary type="html">&lt;div id=&quot;aplayer-xUZcePXE&quot; class=&quot;aplayer aplayer-tag-marker meting-tag-marker&quot;
         data-id=&quot;000MbcLT3Rrxqi&quot; data-server=&quot;tencent&quot; data-type=&quot;song&quot; data-mode=&quot;circulation&quot; data-autoplay=&quot;false&quot; data-mutex=&quot;true&quot; data-listmaxheight=&quot;340px&quot; data-preload=&quot;auto&quot; data-theme=&quot;#ad7a86&quot;
    &gt;&lt;/div&gt;
&lt;/br&gt;

&lt;center&gt;
青玉案·元夕&lt;br&gt;&lt;br&gt;
东风夜放花千树。更吹落，星如雨。宝马雕车香满路。凤箫声动，玉壶光转，一夜鱼龙舞。&lt;br&gt;
蛾儿雪柳黄金缕。笑语盈盈暗香去。众里寻他千百度。蓦然回首，那人却在，灯火阑珊处。
&lt;/center&gt;</summary>
    
    
    
    <category term="随笔" scheme="http://example.com/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
    <category term="2022" scheme="http://example.com/tags/2022/"/>
    
  </entry>
  
  <entry>
    <title>好好活下去！</title>
    <link href="http://example.com/2022/02/13/%E5%A5%BD%E5%A5%BD%E6%B4%BB%E4%B8%8B%E5%8E%BB%EF%BC%81/"/>
    <id>http://example.com/2022/02/13/%E5%A5%BD%E5%A5%BD%E6%B4%BB%E4%B8%8B%E5%8E%BB%EF%BC%81/</id>
    <published>2022-02-13T13:02:18.000Z</published>
    <updated>2022-02-13T15:11:50.338Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script>    <div id="aplayer-Kscykqiq" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="1856336348" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#ad7a86"    ></div></br><p>情感真的是太复杂的东西了，唯一能做的就是好好活下去了吧。</p><p>所有的行程都排在了春天以后，等待着一个期许。</p><p>我想待在家中，却不想因为风雪而被困住。</p><span id="more"></span><p><img src="2.jpg"></p><p><small>北京游乐园，这是我第一次看见摩天轮。</small></p><br><p><img src="3.jpg"></p><p><small>北京游乐园其实早已废弃10年，坐落在城中心显得格外诡异，北京市政府最近才将其改建为龙潭中湖公园。唯独这个摩天轮完好保存下来，成为一个地标性的建筑物。</small></p><br><p><img src="5.jpg"></p><p><small>飞鸟、渡轮、湖水、围栏、剧院</small></p><br><p><img src="7.jpg"></p><p><small>很美的一张照片，来自于一位up主，拍摄于黑龙江，气温为-20°C。</small></p>]]></content>
    
    
    <summary type="html">&lt;div id=&quot;aplayer-Kscykqiq&quot; class=&quot;aplayer aplayer-tag-marker meting-tag-marker&quot;
         data-id=&quot;1856336348&quot; data-server=&quot;netease&quot; data-type=&quot;song&quot; data-mode=&quot;circulation&quot; data-autoplay=&quot;false&quot; data-mutex=&quot;true&quot; data-listmaxheight=&quot;340px&quot; data-preload=&quot;auto&quot; data-theme=&quot;#ad7a86&quot;
    &gt;&lt;/div&gt;
&lt;/br&gt;

&lt;p&gt;情感真的是太复杂的东西了，唯一能做的就是好好活下去了吧。&lt;/p&gt;
&lt;p&gt;所有的行程都排在了春天以后，等待着一个期许。&lt;/p&gt;
&lt;p&gt;我想待在家中，却不想因为风雪而被困住。&lt;/p&gt;</summary>
    
    
    
    <category term="随笔" scheme="http://example.com/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
    <category term="2022" scheme="http://example.com/tags/2022/"/>
    
  </entry>
  
  <entry>
    <title>Linux下GBK文件编码批量转换UTF-8</title>
    <link href="http://example.com/2022/02/06/Linux%E4%B8%8BGBK%E6%96%87%E4%BB%B6%E7%BC%96%E7%A0%81%E6%89%B9%E9%87%8F%E8%BD%AC%E6%8D%A2UTF-8/"/>
    <id>http://example.com/2022/02/06/Linux%E4%B8%8BGBK%E6%96%87%E4%BB%B6%E7%BC%96%E7%A0%81%E6%89%B9%E9%87%8F%E8%BD%AC%E6%8D%A2UTF-8/</id>
    <published>2022-02-06T10:47:15.000Z</published>
    <updated>2022-02-06T10:48:27.355Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h4 id="使用iconv转换"><a href="#使用iconv转换" class="headerlink" title="使用iconv转换"></a>使用iconv转换</h4><hr><p><strong>iconv语法</strong></p><p><code>$ iconv -f encoding -t encoding inputfile</code></p><p><strong>单个文件转换示例</strong></p><p><code>$ iconv -f GBK -t UTF-8 file1 -o file2</code></p><p><strong>批量转换</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> find default -<span class="built_in">type</span> d -<span class="built_in">exec</span> mkdir -p utf/&#123;&#125; \;</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> find default -<span class="built_in">type</span> f -<span class="built_in">exec</span> iconv -f GBK -t UTF-8 &#123;&#125; -o utf/&#123;&#125; \;</span></span><br></pre></td></tr></table></figure><p>两行命令将default目录下的文件由GBK编码转换为UTF-8编码，目录结构不变，转码后的文件保存在utf/default目录下</p><span id="more"></span><p><strong>shell脚本</strong>（不好用）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/sh</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">使用前先创建rec.txt文件</span></span><br><span class="line"><span class="meta">#</span><span class="bash">还有/home/yang/txt/bank_txt/目录</span></span><br><span class="line"><span class="meta">#</span><span class="bash">文件目录不唯一 可以自己规定</span></span><br><span class="line"></span><br><span class="line">touch rec.txt</span><br><span class="line"></span><br><span class="line">mkdir -p /home/yang/txt/bank_txt/</span><br><span class="line">for i in `cat rec.txt`;</span><br><span class="line">do</span><br><span class="line"></span><br><span class="line">iconv -f UTF8 -t GBK &quot;$i&quot; -o ref/&quot;$&#123;i#/home/yang/txt/bank_txt/&#125;&quot;;</span><br><span class="line"></span><br><span class="line">done</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h4 id=&quot;使用iconv转换&quot;&gt;&lt;a href=&quot;#使用iconv转换&quot; class=&quot;headerlink&quot; title=&quot;使用iconv转换&quot;&gt;&lt;/a&gt;使用iconv转换&lt;/h4&gt;&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;iconv语法&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ iconv -f encoding -t encoding inputfile&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;单个文件转换示例&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ iconv -f GBK -t UTF-8 file1 -o file2&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;批量转换&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;bash&quot;&gt; find default -&lt;span class=&quot;built_in&quot;&gt;type&lt;/span&gt; d -&lt;span class=&quot;built_in&quot;&gt;exec&lt;/span&gt; mkdir -p utf/&amp;#123;&amp;#125; \;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;bash&quot;&gt; find default -&lt;span class=&quot;built_in&quot;&gt;type&lt;/span&gt; f -&lt;span class=&quot;built_in&quot;&gt;exec&lt;/span&gt; iconv -f GBK -t UTF-8 &amp;#123;&amp;#125; -o utf/&amp;#123;&amp;#125; \;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;两行命令将default目录下的文件由GBK编码转换为UTF-8编码，目录结构不变，转码后的文件保存在utf/default目录下&lt;/p&gt;</summary>
    
    
    
    <category term="Linux" scheme="http://example.com/categories/Linux/"/>
    
    
  </entry>
  
  <entry>
    <title>动物农场</title>
    <link href="http://example.com/2022/02/06/%E5%8A%A8%E7%89%A9%E5%86%9C%E5%9C%BA/"/>
    <id>http://example.com/2022/02/06/%E5%8A%A8%E7%89%A9%E5%86%9C%E5%9C%BA/</id>
    <published>2022-02-06T10:37:44.000Z</published>
    <updated>2022-02-06T10:46:23.063Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>读完动物农场，不知道我自己在这个社会又是一个什么样的角色呢？</p><p>是驴子，是猫，还是拳击手呢？</p><p>又或许都不是，毕竟我们是社会主义社会，但作为一位职工来说呢？</p><span id="more"></span><blockquote><p>转自 百度百科</p></blockquote><p>《动物庄园》作为一部寓言小说，作者所真切感受到的是，所谓的平等、自由实在是有限的、相对的、短暂的，世上没有乌托邦式的理想主义时代。一群动物带着对理想的憧憬，力图打破旧秩序，本应冲出牢笼，但又跳入了另一个陷阱，他们依然被欺骗，被奴役，被统治，不平等是不变的结局。唯一的区别在于人类农场是人类管理动物，动物农场是动物管理动物，仅此而已。《动物庄园》里最令人恐惧的还是那句话，那被篡改的只剩下一条的戒律：所有动物一律平等，但有些动物比其他动物更加平等。当“平等”也有高低贵贱之分时，所谓的平等不过是一句自欺的谎言，所谓的自由也就成为了彻头彻后的笑话，微贱的平民唯有在困境中沉默挣扎。 </p><p>小说中关于动物们性格中的贪婪、自私、懦弱、虚荣和愚蠢的描写，明显可以解释为人性中的黑暗面，然而，民众中的主体还是驯服的和不知反抗的，沉默隐忍似乎成为了他们唯一的生存之道，其中最具代表性的是拳击手和本杰明。</p><p>奥威尔用一个寓言告诉人们：一个革命后的政权，如果没有民主监督，没有法治，必定异化，必定走向他的反面。革命总是以反专制开始，就像老少校启蒙动物们时所说的：“万恶之源完全在于人类的专制统治”，但专制并不会出革命被打破，甚至相反，革命往往会建立起更强的专制。《动物农场》这个故事的深刻之处，在于他揭示了动物农场革命的悲剧，被压迫各奋起革命后，由于缺乏对民主和法制的深刻认识，又没有建立起完善的权力制约制度，最终迎来了个人独裁，生活又倒退回了革命前甚至更差。 </p><p>寓言也是一种叙述方式，一种绝对普遍的表达方式和观察世界的模式。寓言不受时间和地域条件的限制，不同时代，不同民族不同文化中的读者在面对寓言作品时都极易产生共鸣。文学作品的意义从来就不是单一固化的，优秀的小说应有更深远普遍的意义。奥威尔借助寓言的叙述方式，通过简单易懂的故事体现人类的普遍理解力。《动物农场》出版于二战刚刚结束的1945年，两极格局初露端倪因而它反映了奥威尔对两大阵营的相同不满。小说的意义绝不仅仅限于影射斯大林时期的政治极权，而应将其置于更为广阔的社会政治背景中来理解。因而小说有更为复杂深远的喻指——反对一切形式的极权主义，追求民主与公正。</p><p><strong>现实影射</strong></p><p>小说的情节看上去像童书一样简单，但却包孕着“一部压缩版的‘联共布党史’，老少校的梦是动物造反的起因。造反之梦即共产主义之梦，《英格兰生灵》即《国际歌》，动物造反是指1917的十月革命。牛棚战役是讲动物农场打败人类的武装干涉，大致相当于苏联的内战时期。农场中的两支力量一一雪球和拿破仑间的斗争暗讽苏共党内的激烈争论。列宁去世后，斯大林掀起反托派的运动，开始迫害、驱逐托洛茨基及托派分子。雪球被逐之后，拿破仑继续造风车，尖嗓篡改“七戒”，即苏联推行国家工业化和集体化的时期。第七章讲动物农场的刑讯逼供、血腥屠杀暗指苏联的大清洗时期。小说中的“风车之役”喻指苏联卫国战争，虽然最终战胜德国，但象征着工业化的宏伟“风车”却轰然倒塌。在此期间，动物农场的主人们和人类农场主之间的关系错综复杂，勾心斗角，这一段故事大致影射了二战期间，英法、德国、苏联之间相互倾轧，都想靠移祸他国保全自己的政治现实。小说的最后一章写的是拿破仑与皮尔京顿的和解。全书的最后一幕：猪穿着人的衣服，像人一样站立起来。拿破仑为首的“猪”与皮尔京顿为首的“人”欢聚在一处，他们举起酒杯，觥筹交错间达成全面和解。皮尔京顿和拿破仑的影子重合在一起，原来猪和人从来就没有什么不同，他们的目标完全一致，都是为了对付下等动物。窗外的其他动物目瞪口呆再也分不清谁是动物谁是人。这里猪“异化”为人，暗讽二战之后苏联走上极权之路，与英、美一同瓜分世界。</p><p>世界依旧没有发生改变，与小说开头老少校的时代一样，极权统治仍在继续甚至愈演愈烈。奥威尔安排这样的结局，正是照应了当时的政治现实。对于这种极权统治，奥威尔并没试图去寻找解决问题的办法没有宣扬任何政治性的主张而是单纯地用文学的形式将这种极权的怪圈展现给读者，将文学的艺术性与政治性揉于一处。小说中没有丝毫的政治宣传，却比宣传更加有力，使读者易于接受并对此加以抵制。这也是他的政治寓言小说在文学之外的重大贡献。</p><p><strong>荒诞手法</strong></p><p>《动物庄园》采用荒诞的手法进行讽刺揭露，整个故事十分荒诞可笑，一群动物竟然具有人的智慧，将农庄的主人赶走，建立起了自己的庄园。这样荒诞不经的事情在现实中根本就不可能发生，而公猪拿破仑的杂乱统治，反映了现实社会的混乱无章。里面的驴本杰明有点黑色幽默主人公的精神，它虽然很精明，能够看透农庄中的种种卑劣行为，可是他一直保持沉默，一副事不关己的样子。其实他自己也明白，即使他采取行动也改变不了什么。荒诞的情节、荒诞的角色设置，使《动物庄园》充满荒诞色彩。 </p><p><strong>反差</strong></p><p>奥威尔采用事物前后强烈的反差，揭露事情的本质变化，达到嘲讽的目的。在《动物庄园》中，革命刚刚胜利，动物们制定了“七诫”：1.凡是两条腿走路的都是敌人；2.凡是四条腿走路或者有翅膀的都是朋友；3.任何动物不得穿衣服；4.任何动物不得睡在床上；5.任何动物不得饮酒；6.任何动物不得杀害别的动物；7.所有动物一律平等。可是到了后来，这七条戒律变得面目全非。“农场里其他动物学会A字，再也没有学会第二个字母的了。另外一点是，像羊、鸡、鸭这些愚笨的动物，甚至连七条戒律也记不住。雪球煞费脑筋地思索了一番，最后宣布说，七条戒律的含义实际上可以概括为一句：“‘四条腿好，两条腿坏’。他说这句话包含了动物主义的基本道理。谁能彻底把握这句话，谁就保险不受人的影响。”由此可知，七诫的内容是好的，可是在大多数动物当中，他们根本就记不住七诫是什么内容，更别说去理解七诫的真正含义。从而为后来七诫的不断异化提供了条件。通过前后鲜明的对比，可以看到革命在公猪拿破仑的统治下发生了本质的变化，由先前老上校提出的民主构想变成了极权统治。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;读完动物农场，不知道我自己在这个社会又是一个什么样的角色呢？&lt;/p&gt;
&lt;p&gt;是驴子，是猫，还是拳击手呢？&lt;/p&gt;
&lt;p&gt;又或许都不是，毕竟我们是社会主义社会，但作为一位职工来说呢？&lt;/p&gt;</summary>
    
    
    
    <category term="书评" scheme="http://example.com/categories/%E4%B9%A6%E8%AF%84/"/>
    
    
    <category term="2022" scheme="http://example.com/tags/2022/"/>
    
  </entry>
  
  <entry>
    <title>一月小记</title>
    <link href="http://example.com/2022/01/25/%E4%B8%80%E6%9C%88%E5%B0%8F%E8%AE%B0/"/>
    <id>http://example.com/2022/01/25/%E4%B8%80%E6%9C%88%E5%B0%8F%E8%AE%B0/</id>
    <published>2022-01-25T15:18:56.000Z</published>
    <updated>2022-01-25T15:36:52.804Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>今年1月真的是全新的开始。不得不说，如果你心情烦闷了，不如一个人去野外走走。如果你感到孤独了，不如叫个朋友陪你旅行。</p><p>这不1月1日新年初始，我就去了凤凰岭。毕竟新年爬山，步步高升嘛！</p><span id="more"></span><p><img src="1.jpeg" alt="凤凰岭"></p><p>之后8号，我在咸鱼认识了一位朋友。本以为交易完毕，再无交集，却发生了一些小“意外”，感觉这份友谊会因为这次“意外”走的更加长远。</p><p>刚开始见到他的时候，感觉挺帅气的，还是红发，还想着不会是“社会少年”吧？哈哈哈，尴尬</p><p>毕竟，让我白等了一个半小时，还以为是寻我开心。</p><p>（ps：他的手机铃声好像是《三天三夜》，还打不通，当时坐在汉堡王的我简直精神肉体双重折磨。）</p><p>他看起来比较毛躁，这点仅是对他自己而言。从刚开始认识他，把电脑放在不平的桌子上，挪动的时候还不小心碰了一下。到和他一起去看北京中轴线，当我们走在狭长的过道时，我提醒过他书包会剐蹭到墙壁，不过他好像并不以为然。感觉他有在意，又有点在旁人面前不好在意，又有那么点不在意的样子。</p><p>不过这样一个毛毛躁躁的人，对待他人却挺心细的。从退货的理由和礼物，到我拍照时会刻意走在我后面，再到吃辣子鸡时给我特意倒水而非倒酒，可以看出对待他人是一个很细心的家伙，会观察对方的言行。</p><p>（pps：不过喝酒这一点我要吐槽，就不能不那么在意谁的杯子比谁低嘛？让我有种拘束感，我又不是长辈。）</p><p>在那次交易完毕之后，我就和朋友去了朝阳公园滑冰。这我不得不夸赞下我自己的运动天赋（这文章应该没人看吧），我本来以为会摔倒无数次，结果下地就会滑了，而且滑的挺有样子，这里我要感谢下小时候滑旱冰摔跤而没放弃的自己。</p><p>之后的16号，我和他去了中轴线。因为15号突发奇想想看看即将开冬奥的鸟巢，所以大晚上去了奥体中心。正如他所说奥林匹克塔远远望去神圣而又给人安宁。那天晚上它散发着幽暗的紫光，与周围的建筑格格不入，看上去更像是外星文明。如果说周围的建筑是这个时代的产物，那么奥林匹克塔就是我想象中《三体》的巨树。</p><p><img src="2.jpeg"></p><p>我发现我现在有点神经病，因为做决定总是突然之间的，并未经过大脑，或仅是短暂停留。</p><p>其实，我还在担心我这么直接邀请他去中轴线，会不会人家不好意思拒绝而耽误了他的冬奥志愿者。那我不就成了“千古罪人”，还好疫情并不严重，而我也像章北海一样内心怀有坚定的信念。</p><p>走在南长街，当夕阳洒在地上，望着飞鸟，看着河面，感受微风抚摸你的脸颊。将身体的每一个部分都交给它，将自己化作这古城的一部分，感受岁月的流逝，感受千古的历史。那一刻好像时间静止，而你已是永恒。</p><p>最开始把他当成学生，觉得凡事都多该为他想想，毕竟是祖国的未来嘛。现在看来，我真是个神经病，正常朋友对待就好了。在这次旅程中，我渐渐忘了他学生的身份，把他当成了朋友，同事或是同学，毕竟也没比我小多少。</p><p>那天的月亮又圆又亮，灯火阑珊间，看着男男女女们走在石桥上，好像是一对对相会的爱人。</p><p>那晚我们走在烟袋斜街，望着城墙，望着月亮，平静如水的是心。</p><p>20号北京下雪了而且连续下了3天，真是上天眷顾。这不马不停蹄的去了故宫，这雪景我是可不能错过的。</p><p><img src="3.jpeg" alt="故宫雪景1"></p><br><p><img src="4.jpeg" alt="故宫雪景2"></p><p>景是好景，但人实在是太多了，那样就少了独特的孤独感。</p><p>于是……我又来到了香山。山里的雪景一定也是很好看的吧！</p><p>（一天都没吃饭了，还能再爬个香山…我终于找的我长不胖的原因了。）</p><p>不过正如我所说，美景难寻。</p><p><img src="5.jpeg" alt="香山美景"></p><br><p><img src="6.jpeg" alt="香山美景"></p><p>在我们的聊天中，我得知他是一名重度抑郁患者。当时我想到了在我为数不多的朋友中，也有一位轻度抑郁患者。他们好像饱受失眠，焦虑，学业等各种社会压力的影响。</p><p>但我并不能看的出来，觉得他们和别人也没有什么不同。除了因失眠带来的困扰能让我感同身受，我并不懂得如何帮助他们，或许这和他们的原生家庭有关，还是不区别对待他们就好啦。</p><p>总之能在新年初始，便能遇到一位闪闪发光的朋友，真的是无比幸运。</p><p>那么祝大家晚安啦，好梦~~~</p><br>    <div id="aplayer-YUgLqZTb" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="1422246732" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#ad7a86"    ></div>]]></content>
    
    
    <summary type="html">&lt;p&gt;今年1月真的是全新的开始。不得不说，如果你心情烦闷了，不如一个人去野外走走。如果你感到孤独了，不如叫个朋友陪你旅行。&lt;/p&gt;
&lt;p&gt;这不1月1日新年初始，我就去了凤凰岭。毕竟新年爬山，步步高升嘛！&lt;/p&gt;</summary>
    
    
    
    <category term="随笔" scheme="http://example.com/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
    <category term="2022" scheme="http://example.com/tags/2022/"/>
    
  </entry>
  
  <entry>
    <title>2022年的雪</title>
    <link href="http://example.com/2022/01/20/2022%E5%B9%B4%E7%9A%84%E9%9B%AA/"/>
    <id>http://example.com/2022/01/20/2022%E5%B9%B4%E7%9A%84%E9%9B%AA/</id>
    <published>2022-01-20T13:46:35.000Z</published>
    <updated>2022-01-20T14:22:46.108Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script>    <div id="aplayer-lKUbPVai" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="355794" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#ad7a86"    ></div><br><p>还记得2021年年初的时候，也下了很大的雪。我却在家里看着《武林外传》感叹美景，实在罪过。</p><p>那篇文章的标题叫《雪》😂</p><span id="more"></span><br><br><p>今年的雪，不得不说真的好大啊。我和同事还很不解，为啥天气预报显示的是小雪，而我这却大雪纷飞呢？</p><p>难道是上天的眷顾？</p><p>原来朝阳没有雪，我下班出地铁人都傻了，地都干了。朝阳真有你的！</p><p>我都有点害怕，周六去故宫没有雪怎么办。</p><p>对了，昨天终于找到能让我静下心来看的书了。太高兴了，虽然很短。书名嘛，等我读完发书评就知道了。</p><p>然后就是因为疫情，我去不了长白山了，有点小遗憾，但也在意料之中吧。</p><p>上周日，医生给我开了去痘痘的药，药效不错。就是吃完了头晕，哈哈哈。</p><p>地铁上看到了一段话，还是写出来吧。</p><blockquote><p>不要刻意回避，要成长就要学会面对。</p><p>你还年轻，未来还是有很多可能，只是你遇到的太少，总觉得他是你的天花板。</p><p>别人已经远去，何必留在原地回想以前？如果以前是美好的，还可以想象，可是以前并不美好。</p><p>该走了。</p><p>任何时候都要明白不依附任何人，不谄媚任何人，自己要发光发热。</p></blockquote><br><br><p>好了，今天就着雪，学了两首小诗。</p><center>  <b>春 雪</b><br>唐 韩愈<br><br>新年都未有芳华，二月初惊见草芽。<br>白雪却嫌春色晚，故穿庭树作飞花。</center><br><br><center>  <b>冬晚对雪忆胡居士家</b><br>  唐 王维<br><br>  寒更传晓箭，清镜览衰颜。<br>  隔牖风惊竹，开门雪满山。<br>  洒空深港静，积素广庭闲。<br>  借问袁安问，翛然尚闭关。</center><br><br><center>  <b>对 雪</b><br>  唐 杜甫<br><br>  站哭多新鬼，愁吟独老翁。<br>  乱云低薄暮，急雪舞回风。<br>  瓢弃尊无绿，炉存火似红。<br>  数州消息断，愁坐正书空。</center><br><p>好吧，其实是三首，杜甫这首单纯因为“乱云低薄暮，急雪舞回风”有感觉。</p><br><p><img src="1.jpg"></p><br><p><img src="2.jpg"></p>]]></content>
    
    
    <summary type="html">&lt;div id=&quot;aplayer-lKUbPVai&quot; class=&quot;aplayer aplayer-tag-marker meting-tag-marker&quot;
         data-id=&quot;355794&quot; data-server=&quot;netease&quot; data-type=&quot;song&quot; data-mode=&quot;circulation&quot; data-autoplay=&quot;false&quot; data-mutex=&quot;true&quot; data-listmaxheight=&quot;340px&quot; data-preload=&quot;auto&quot; data-theme=&quot;#ad7a86&quot;
    &gt;&lt;/div&gt;

&lt;br&gt;

&lt;p&gt;还记得2021年年初的时候，也下了很大的雪。我却在家里看着《武林外传》感叹美景，实在罪过。&lt;/p&gt;
&lt;p&gt;那篇文章的标题叫《雪》😂&lt;/p&gt;</summary>
    
    
    
    <category term="随笔" scheme="http://example.com/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
    <category term="2021" scheme="http://example.com/tags/2021/"/>
    
  </entry>
  
  <entry>
    <title>如果你也曾迷茫</title>
    <link href="http://example.com/2022/01/18/%E5%A6%82%E6%9E%9C%E4%BD%A0%E4%B9%9F%E6%9B%BE%E8%BF%B7%E8%8C%AB/"/>
    <id>http://example.com/2022/01/18/%E5%A6%82%E6%9E%9C%E4%BD%A0%E4%B9%9F%E6%9B%BE%E8%BF%B7%E8%8C%AB/</id>
    <published>2022-01-18T13:52:20.000Z</published>
    <updated>2022-01-18T14:11:01.238Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script>    <div id="aplayer-lrpBhKDs" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="355798" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#ad7a86"    ></div></br><blockquote><p>转自：央视新闻夜读</p></blockquote><blockquote><p>在《夜读》读者的留言里，有许多这样的<strong>“灵魂发问”</strong>：</p><p><strong>马上18了</strong>，大家都说这是最好的年龄，但<strong>我为什么觉得这么迷茫？</strong></p><p><strong>还有几个月就要毕业了，却完全不知道自己要做什么</strong>，好迷茫，怎么办？</p><p><strong>北漂的第十年，最近突然开始迷茫</strong>，我的坚持真的有意义吗？</p><p>已经<strong>28岁了，却好像仍然没有在社会上找到自己的位置</strong>，怎么会这样？</p><p>过了年就30了，<strong>立没立不知道，迷茫倒是真的……</strong></p><p>你大概也察觉出关键词了吧：<strong>迷茫。</strong></p><p>谁的青春不迷茫？但迷茫这种状态，并不是青春的专属，无论你在人生的哪个阶段，都难免有被它笼罩的时刻，所以，学会走出迷茫，也许是一个人一生的功课。</p><p>《夜读》奉上几个走出迷茫的小建议，可能算不上什么“解药”，但若能给你些许慰藉，便是值得。</p></blockquote><span id="more"></span><br><h4 id="01-不要为没有到来的坏事担忧"><a href="#01-不要为没有到来的坏事担忧" class="headerlink" title="01 不要为没有到来的坏事担忧"></a>01 <strong>不要为没有到来的坏事担忧</strong></h4><p><strong>很多时候，人是被自己想象出来的困难打败的</strong>：“会不会有很多障碍？”“这个根本不可能实现啊！”“要是失败了怎么办？”……</p><p><strong>擅自放大困难，提前对结果作悲观的设想，几乎是一种对自己的“恐吓”，会制造出另一种焦虑，让人陷入“干脆放弃好了”的漩涡</strong>，结果就是你在行动之前就望而却步了，而问题本身依然悬而未解。</p><p>想得太多，就容易丧失行动力。<strong>如果非得等到一切完美就绪才开始，那我们可能永远也无法开始。</strong></p><p>迷茫不定的时候，与其一个劲担心这担心那，不如直接去做吧，<strong>做着做着可能就有答案了。</strong>也许的确会有困难，也许并不能保证一定有“最好的结果”，但至少在向目标靠近。而且，请相信，只要努力了，结果真的没有想象的那么坏。</p><br><h4 id="02-读书吧，书里有你要的答案"><a href="#02-读书吧，书里有你要的答案" class="headerlink" title="02 读书吧，书里有你要的答案"></a>02 <strong>读书吧，书里有你要的答案</strong></h4><p>有人说：<strong>如果想在迷茫期和低谷期提升自己，又毫无头绪不知道该怎么做，去做这两件事一定不会错——读书和锻炼身体。</strong></p><p>身体健康了，意志力才不会消沉；<strong>而读书，则是一个通过阅读不断理解自己、理解世界的过程。</strong>全世界最伟大的智者们，用他们毕生的智慧不断触发你的思考，让你获得沉静下来的力量和面对困境的勇气。<strong>哪怕不能立马帮你解决眼下的难题，也会一点点安慰你、滋养你、改变你、塑造你，带给你内心的笃定和思想的丰厚，这种笃定，助你驱赶迷茫；这种丰厚，帮你对抗平庸。</strong></p><p><strong>“心之何如，有似万丈迷津，遥亘千里，其中并无舟子可渡人，除了自渡，他人爱莫能助。”</strong>人生如蹚江过海，多数时候只能自渡，那些迷茫不知何往的时刻，<strong>书可作扁舟，渡你过江海。</strong></p><br><h4 id="03-直面问题，不回避不逃避"><a href="#03-直面问题，不回避不逃避" class="headerlink" title="03 直面问题，不回避不逃避"></a>03 <strong>直面问题，不回避不逃避</strong></h4><p>不知道大家有没有听过这句话：<strong>“我经常有那种感觉，如果这个事情来了，你却没有勇敢地去解决掉，它一定会再来。生活真是这样，它会一次次地让你去做这个功课，直到你学会为止。”</strong></p><p>某种程度上，每个人都害怕承受痛苦，遇到问题时都会想逃避。<strong>有人通过拖延来逃避</strong>，仿佛拖着拖着事情就可以解决；<strong>有人通过无视来逃避</strong>，好像只要不去看不去想，它们就不存在；<strong>有人通过转移来逃避</strong>，比如用无止尽的娱乐麻痹自己。可<strong>逃避从来都不是什么轻松的事，不仅无助于问题的解决，反而会让迷茫的情绪不断放大和蔓延，造成更大的混沌。</strong></p><p>M·斯科特·派克在《少有人走的路》里说：“<strong>回避问题和逃避痛苦的倾向，是人类心理疾病的根源</strong>……勇于承担责任，敢于面对困难，才能够使心灵变得健康。”</p><p>痛苦和困难本身也许没有价值，但你直面它们的积极态度，你敢于承受它们的勇气，一定有。<strong>越迷茫，越不能躲起来，直面问题、承担责任、忠于事实、保持平衡****，会有意想不到的收获。</strong></p><br><h4 id="04-越迷茫，越要做具体的事"><a href="#04-越迷茫，越要做具体的事" class="headerlink" title="04 越迷茫，越要做具体的事"></a>04 <strong>越迷茫，越要做具体的事</strong></h4><p>你觉得，迷茫的反义词是什么？</p><p>有些人可能会说是坚定，但还有另一种说法：<strong>迷茫的反义词是具体。</strong></p><p>比如，很多人大学毕业的时候都会十分迷茫，不知道自己未来该做什么，但如果把这个问题具体化，一步步细化成：我要找一份工作。一份什么样的工作？可能钱不是很多但能让我快速成长的工作，最好是大一点的平台。那哪些工作比较符合这个要求，你要为此做什么准备？……</p><p><strong>这样一步步具体下来，会比较容易找到方法和路径。</strong></p><p>迷茫是一种空泛的、说不清楚的、没有着力点的情绪，所以才让人焦虑，但<strong>当你抓到那个把手，从某件具体的事做起，开启你的创造之旅时，焦虑就会一点点退去。</strong></p><p>作家松浦弥太郎也有类似的建议，他对那些对未来感到不安的人说：<strong>“按照顺序，一件一件地用心去处理好眼前发生的问题，这才是你该做的事。只要这么做，你心中的不安便不会再任意膨胀，只因你采取了具体的行动。”</strong></p><br><h4 id="05-放空一会儿，再上路"><a href="#05-放空一会儿，再上路" class="headerlink" title="05 放空一会儿，再上路"></a>05 <strong>放空一会儿，再上路</strong></h4><p>要在迷茫时找回状态，并不是一日之功，不必把自己逼得太紧，也不要急着一步到位，试着接受目前的状态，暂时放空一下吧。<strong>我们都在努力成为自己想成为的人，但在这条路上学会放松，同样必要。</strong></p><p>不知道该做什么的时候，你可以睡觉发呆，可以观山看海，可以看花怎么开叶如何黄，可以去游乐场和孩童同乐，可以看一场喜剧电影，可以笑笑跑跑跳跳……总之，<strong>你可以停下来喘口气，在生活的缝隙里，找到爱、温暖，以及快乐的能力。</strong></p><p>当心情平静下来，精神得到放松，<strong>你可能会对这个世界有更清晰的看法，那些“无法解决”的问题，也可能有了新的转机。</strong></p><p>更重要的是，暂停后的你，已经备足力气，可以再次上路，<strong>“去认识自己，去探索世界，去慢慢发现自己真正擅长的事情，然后在这个方向上，成为那个真正可以发光的人。”</strong></p><p><strong>迷茫总会过去，因为你永远比它强大。</strong></p><br><h4 id="06-我目前的状态"><a href="#06-我目前的状态" class="headerlink" title="06 我目前的状态"></a>06 <strong>我目前的状态</strong></h4><p>最近自己总是静不下心来，书读不下去，也不想学习，回家就想着睡觉。</p><p>不知道为什么老是想到处乱跑，还想着那晚的城墙、那晚的月亮、那晚的人。</p><p>我不过是渴望着微光的萤火虫而已。</p><p>或许应该去图书馆静心了。</p><p><img src="1.JPG"></p>]]></content>
    
    
    <summary type="html">&lt;div id=&quot;aplayer-lrpBhKDs&quot; class=&quot;aplayer aplayer-tag-marker meting-tag-marker&quot;
         data-id=&quot;355798&quot; data-server=&quot;netease&quot; data-type=&quot;song&quot; data-mode=&quot;circulation&quot; data-autoplay=&quot;false&quot; data-mutex=&quot;true&quot; data-listmaxheight=&quot;340px&quot; data-preload=&quot;auto&quot; data-theme=&quot;#ad7a86&quot;
    &gt;&lt;/div&gt;

&lt;/br&gt;

&lt;blockquote&gt;
&lt;p&gt;转自：央视新闻夜读&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;在《夜读》读者的留言里，有许多这样的&lt;strong&gt;“灵魂发问”&lt;/strong&gt;：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;马上18了&lt;/strong&gt;，大家都说这是最好的年龄，但&lt;strong&gt;我为什么觉得这么迷茫？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;还有几个月就要毕业了，却完全不知道自己要做什么&lt;/strong&gt;，好迷茫，怎么办？&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;北漂的第十年，最近突然开始迷茫&lt;/strong&gt;，我的坚持真的有意义吗？&lt;/p&gt;
&lt;p&gt;已经&lt;strong&gt;28岁了，却好像仍然没有在社会上找到自己的位置&lt;/strong&gt;，怎么会这样？&lt;/p&gt;
&lt;p&gt;过了年就30了，&lt;strong&gt;立没立不知道，迷茫倒是真的……&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;你大概也察觉出关键词了吧：&lt;strong&gt;迷茫。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;谁的青春不迷茫？但迷茫这种状态，并不是青春的专属，无论你在人生的哪个阶段，都难免有被它笼罩的时刻，所以，学会走出迷茫，也许是一个人一生的功课。&lt;/p&gt;
&lt;p&gt;《夜读》奉上几个走出迷茫的小建议，可能算不上什么“解药”，但若能给你些许慰藉，便是值得。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="随笔" scheme="http://example.com/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
    <category term="2022" scheme="http://example.com/tags/2022/"/>
    
  </entry>
  
  <entry>
    <title>我所害怕和难过的事</title>
    <link href="http://example.com/2022/01/16/%E6%88%91%E6%89%80%E5%AE%B3%E6%80%95%E5%92%8C%E9%9A%BE%E8%BF%87%E7%9A%84%E4%BA%8B/"/>
    <id>http://example.com/2022/01/16/%E6%88%91%E6%89%80%E5%AE%B3%E6%80%95%E5%92%8C%E9%9A%BE%E8%BF%87%E7%9A%84%E4%BA%8B/</id>
    <published>2022-01-15T22:04:23.000Z</published>
    <updated>2022-01-17T14:13:36.074Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script>    <div id="aplayer-HgOKxzoX" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="002IFZ9537O1Du" data-server="tencent" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#ad7a86"    ></div></br><p>梦见90年代花坛边看着爷爷奶奶们唱着那个年代的老歌，你一句我一句，甚是享乐。</p><p>旁边的大爷却是暗自神伤，独自落泪，之后大家唱着唱着也都哭了起来。</p><p><em>大浪里淘尽所有的往事，可是我会永远，珍藏那张不老的风帆。</em></p><p>梦里他们明明是爷爷，奶奶，但我看他们却还是很年轻，没有比我大太多。</p><p>或许感慨时光不待，青春再也追不回来了的人并不是他们，而是我自己。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="随笔" scheme="http://example.com/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
    <category term="2022" scheme="http://example.com/tags/2022/"/>
    
  </entry>
  
  <entry>
    <title>因为一句诗而迷上苏轼</title>
    <link href="http://example.com/2022/01/08/%E5%9B%A0%E4%B8%BA%E4%B8%80%E5%8F%A5%E8%AF%97%E8%80%8C%E8%BF%B7%E4%B8%8A%E8%8B%8F%E8%BD%BC/"/>
    <id>http://example.com/2022/01/08/%E5%9B%A0%E4%B8%BA%E4%B8%80%E5%8F%A5%E8%AF%97%E8%80%8C%E8%BF%B7%E4%B8%8A%E8%8B%8F%E8%BD%BC/</id>
    <published>2022-01-08T13:37:11.000Z</published>
    <updated>2022-01-17T14:01:44.845Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><center>  临 江 仙 <br>  夜 归 临 皋 <br><br>  夜饮东坡醒复醉，归来仿佛三更。家童鼻息已雷鸣。敲门都不应，倚杖听江声。<br>  长恨自身非我有，何时忘却营营。夜阑风静縠纹平。<b>小舟从此逝，江海寄余生。</b><br><span id="more"></span><p><br><br></p><center>定 风 波<br>  <small>三月七日，沙湖道中遇雨，雨具先去，通行皆狼狈，余独不觉。已而遂晴，故作此。</small><br><br>  莫听穿林打叶声，何妨吟啸且徐行，<b>竹杖芒鞋轻胜马，谁怕？一蓑烟雨任平生</b><br>    料峭春风吹酒醒，微冷，山头斜照却相迎，<b>回首向来萧瑟处，归去，也无风雨也无晴。</b><br><p><br><br></p><center>  和 子 由 渑 池 怀 旧<br><br>    <b>人生到处知何处，应似飞鸿踏雪泥。</b><br>  泥上偶有留指爪，飞鸿那复计东西。<br>  老僧已死成新塔，坏壁无由见旧题。<br>  往日崎岖还记否，路长人困蹇驴嘶。<br></center><p><br><br></p><center>  望 江 南<br>  超 然 台 作<br><br>  春未老，风细柳斜斜。试上超然台上看，半壕春水一城花，烟雨暗千家。<br>  寒食后，酒醒却咨成嗟。<b>休对故人思故国，且降新火试新茶，诗酒趁年华。</b><br></center><p><br><br></p><center>  临 江 仙<br>  送 钱 穆 父<br><br>  一别都门三改火，天涯踏尽红尘。依然一笑作春温。无波真古井，有节是秋筠。<br>  惆怅孤帆连夜发，送行淡月微云。尊前不用翠眉颦。<b>人生如逆旅，我亦是行人。</b><br></center><p><br><br></p><center>水 调 歌 头<br><small>丙辰中秋，欢饮达旦，大醉，作此篇，兼怀子由。</small><br><br>明月几时有，把酒问青天。<b>不知天上宫阙，今夕是何年。</b>我欲乘风归去，唯恐琼楼玉宇，高处不胜寒。起舞弄清影，何似在人间。<br>转朱阁，低绮户，照无眠。不应有恨，何事长向别时圆。人有悲欢离合，月有阴晴圆缺，此事古难全。<b>但愿人长久，千里共婵娟。</b><br></center><p><br><br></p><center>卜 算 子<br>黄州定慧院寓居作<br><br>缺月挂疏桐，漏断人初静。谁见幽人独往来，缥缈孤鸿影。<br>惊起却回头，有恨无人省。<b>拣尽寒枝不肯栖，寂寞沙洲冷。</b><br></center><p><br><br></p><center>题 西 林 壁<br><br>横看成岭侧成峰，远近高低各不同。<br><b>不识庐山真面目，只缘身在此山中。</b><br></center><center> 饮湖上初晴后雨二首（其二）<br><br>水光潋滟晴方好，山色空蒙雨亦奇。<br><b>欲把西湖比西子，淡妆浓抹总相宜。</b><br></center><p><br><br></p><center>念 奴 娇<br>赤壁怀古<br><br>大江东去，浪淘尽、千古风流人物。故垒西边，人道是、三国周郎赤壁。乱石穿空，惊涛拍岸，卷起千堆雪。江山如画，一时多少豪杰！<br>遥想公瑾当年，小乔初嫁了，雄姿英发。羽扇纶巾，谈笑间、樯橹灰飞烟灭。<b>故国神游，多情应笑我、早生华发。人生如梦，一樽还酹江月。</b><br></center><p><br><br></p><center>江 城 子<br>乙卯正月二十日夜记梦<br><br>十年生死两茫茫。不思量，自难忘。千里孤坟，无处话凄凉。<b>纵使相逢应不识，尘满面，鬓如霜。</b><br>夜来幽梦忽还乡，小轩窗，正梳妆。<b>相顾无言，惟有泪千行。</b>料得年年肠断处：明月夜，短松冈。<br></center><p><br><br></p><center>浣 溪 沙<br><small>元丰七年十二月二十四日，从泗州刘倩叔游南山。</small><br><br>细雨斜风作小寒，淡烟疏柳媚晴滩。入淮清洛渐漫漫。<br><b>雪沫乳花浮午盏，蓼茸蒿笋试春盘。人间有味是清欢。</b><br></center><p><br><br></p><center>和董传留别<br><br><b>粗缯大布裹生涯，腹有诗书气自华。</b><br>厌伴老儒烹瓠叶，强随举子踏槐花。<br>囊空不办寻春马，眼乱行看择婿车。<br>得意犹堪夸世俗，诏黄新湿字如鸦。<br></center><p><br><br></p><center>蝶 恋 花<br><br>花褪残红青杏小，燕子飞时，绿水人家绕。枝上柳绵吹又少，<b>天涯何处无芳草！</b><br>墙里秋千墙外道，墙外行人，墙里佳人笑。笑渐不闻声渐悄，<b>多情却被无情恼。</b><br></center><p><br><br></p><center>定 风 波<br><small>王定国歌儿曰柔奴，姓宇文氏，眉目娟丽，善应对，家世住京师。定国南迁归，余问柔：“广南风土应是不好？”柔对曰：“此心安处，便是吾乡。”因为缀词云。</small><br><br>常羡人间琢玉郎，天应乞与点酥娘。尽道清歌传皓齿，风起，雪飞炎海变清凉。</b><br><b>万里归来颜愈少，微笑，笑时犹带岭梅香。试问岭南应不好，却道，此心安处是吾乡。</b><br></center><p><br><br></p><center>水 调 歌 头<br>黄州快哉亭赠张偓佺<br><br>落日绣帘卷，亭下水连空。知君为我新作，窗户湿青红。长记平山堂上，欹枕江南烟雨，杳杳没孤鸿。认得醉翁语：“山色有无中。”<br>一千顷，都镜净，倒碧峰。忽然浪起，掀舞一叶白头翁。堪笑兰台公子，未解庄生天籁，刚道有雌雄。<b>一点浩然气，千里快哉风。</b></center>]]></content>
    
    
    <summary type="html">&lt;center&gt;
  临 江 仙 &lt;br&gt;
  夜 归 临 皋 &lt;br&gt;&lt;br&gt;
  夜饮东坡醒复醉，归来仿佛三更。家童鼻息已雷鸣。敲门都不应，倚杖听江声。&lt;br&gt;
  长恨自身非我有，何时忘却营营。夜阑风静縠纹平。&lt;b&gt;小舟从此逝，江海寄余生。&lt;/b&gt;&lt;br&gt;</summary>
    
    
    
    <category term="随笔" scheme="http://example.com/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
    <category term="诗词歌赋" scheme="http://example.com/tags/%E8%AF%97%E8%AF%8D%E6%AD%8C%E8%B5%8B/"/>
    
  </entry>
  
  <entry>
    <title>刀锋</title>
    <link href="http://example.com/2021/12/26/%E5%88%80%E9%94%8B/"/>
    <id>http://example.com/2021/12/26/%E5%88%80%E9%94%8B/</id>
    <published>2021-12-26T09:35:17.000Z</published>
    <updated>2021-12-26T11:16:44.334Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><blockquote><p>“活着到底是为了什么，人生究竟有没有意义，还是只能可悲地任凭命运摆布？”</p></blockquote><p>《刀锋》这本书读下来，没有什么感受，甚至微信读书上都没写什么。</p><p>拉里在战友为他掩护而战死后，感受到了生命的无常，开始追寻生活的本源。为此不惜与自己的未婚妻伊莎贝尔分手，他每天都泡在图书馆10个小时左右，之后又在矿区，德国、法国、印度、中国等地，寻找答案。</p><span id="more"></span><p>在印度象神大师的点化后重回美国，抛手所有财产，过上了开出租车闲云野鹤的生活。</p><p>我觉得《刀锋》这本书，是想要读者和拉里一样找寻生命的本质。</p><p>你想过上怎样的生活，而为这样的生活应该怎样去做。</p><p>就像书中结尾所说：</p><blockquote><p>书中与我有关的人物无不如愿以偿：艾略特称为社交名流；伊莎贝尔凭着巨额财产，活跃于上流文化圈；格雷有了轻松赚钱的稳定工作，每日朝九晚六；苏珊·鲁维耶的生活无虞；苏菲求得一死；拉里获得幸福之道。</p></blockquote><p>或者人活着应该追求本性、本心吧，不要被社会、被人所裹挟。</p><p>下面分享一些好的句子</p><blockquote><p>剃刀边缘无比锋利，欲通过者无比艰辛；</p><p>事故智者常言，救赎之道难行。                                            ——《迦托 · 奥义书》</p></blockquote><blockquote><p>无论男女，不仅仅是代表自己，更反映出生的地域、是在城市亦或是农村学会走路、儿时常玩的游戏、从老一辈听来的传说、习惯的饮食、就读的学校、热衷的运动、阅读的诗篇与信仰的神祇，等等。凡此种种，均造就了一个人的样貌，光凭道听途说不可能通盘了解，比得亲身经历，进而融入自我生命。</p></blockquote><blockquote><p>他为人爽朗，笑口常开，但明眼人都不难发现，他这般友善聒噪的外表仅是面具，好掩饰精明的生意人形象。</p></blockquote><blockquote><p>成年人鲜少会想到，年轻人对我们的评价既无情却又中肯。</p></blockquote><blockquote><p>我并不怕犯错，搞不好会在其中一条冤枉路上，找到人生的目标。</p></blockquote><blockquote><p>“如果他真的爱你，就改为了你找份工作。”</p></blockquote><blockquote><p>有个男的这么献殷勤，任何女孩都会受宠若惊。一旦她发现身边的闺蜜们都巴不得嫁给他，我问你，谁能忍着不捷足先登呢？这就好像你去参加一场派对，虽然事前就知道会很无聊，点心又只有柠檬汁和饼干，但终究还是会前往，只因为没受邀请的好友都非常眼红。</p></blockquote><blockquote><p>可能不实用，也可能很实用，但是非常有趣。你真的很难想象，读懂《奥德赛》的原文又多么令人兴奋，仿佛只要踮起脚尖，伸出手来，就能碰到天上的星星。</p></blockquote><blockquote><p>同样有涂了睫毛膏的睫毛、画得鲜红的嘴唇、抹了胭脂的面颊、辛苦锻炼过的苗条身材、清晰立体的五官，以及如饥似渴的彷徨眼神，让人无法不察觉到，他们人生的唯一目的，就是尽力挽救逐渐消逝的风采。</p></blockquote><blockquote><p>人生如果不想随波逐流，就等于是场豪赌，失败的人不胜枚举，成功的人寥寥无几。</p></blockquote><blockquote><p>一般人在热恋时，常会编造各种借口，来说服自己凡事跟着感觉走。我猜想，这也许就是不幸的婚姻为何那么多的原因。就好像你明知道某人是骗子，但因为交情深厚，所以偏要把所有事情托付给他，只因不愿相信骗子会重视利益到牺牲友情，认为即使他对人再不老实，也绝不会辜负自己。</p></blockquote><blockquote><p>他说万物不是创造出来的，因为无只生无，并不生有，万物本身就是永恒的表征。这点还可以接受，但是他接着又说，善和恶都是神性的直接表征。</p></blockquote><blockquote><p>我和格雷一直都很幸福。他是个不可多得的丈夫。大萧条来临前，我们生活得开开心心的。我们喜欢交同样的朋友，也喜欢从事同样的活动，而且他对我非常体贴，有人这么对自己死心塌地，是很棒的事情。婚后到现在，他对我的爱从来没变过，而且觉得我是世上最完美的女人。他平时的温柔和细心，外人真的无法想象。他对我大方到不可思议，只要是好东西都会买给我。我们结婚这么多年，他从来没凶过我半句。我只能说自己真是太幸运了。</p></blockquote><blockquote><p>大城市里总会有许多自给自足的圈子，彼此不相往来，自成一个个小世界，仿佛是一座座孤岛，隔着无法横渡的海峡，成员互相依赖，过着自己的日子。</p></blockquote><blockquote><p><strong>“嗯，部分心理学家认为，意识是伴随着脑部活动出现的，但是不会反过来影响脑部活动。这就好比树木在水中的倒影，非得有树木才会存在，但是丝毫影响不了树木。有人说，爱情不一定要有激情，在我看来是胡说八道。所谓没有激情的爱情，根本就不是爱情，而是属于喜欢、体贴、共同的兴趣或是习惯。习惯尤其如此。两个人可以因为习惯而保持性关系，就像到了饭点肚子会饿一样。当然，性欲不一定要有爱情。性欲跟激情不同，而是自然而然的性本能，无异于人类其他本能。所以，只要有了天时地利，丈夫难免会出轨，太太却容易小题大做，实在是很傻。”</strong></p><p><strong>“难道只有男人会这样吗？”</strong></p><p><strong>我露出微笑。</strong></p><p><strong>“你真要问的话，我会说这样的现象不分男女。唯一不同之处是，对男人来说，露水姻缘可以不带情感；但对女人来说，还是会牵扯到情感。”</strong></p><p><strong>“那也得看是什么女人。”</strong></p><p><strong>我没搭腔，继续说下去。</strong></p><p><strong>“爱情如果跟激情分开，就不算是真的爱情，而是别的情感。燃起激情的火苗不是满足，而是阻碍。你想想，济慈告诉希腊古瓮上的情郎别难过，是什么意思呢？‘汝将永远爱恋，伊将永远娇美！’为什么呢？因为得不到呀。无论他再怎么疯狂追求，都追不到心爱的人，因为小两口困在大理石之中，成就了这件无情的艺术品。你和拉里对彼此的爱，就好比保罗与法兰契斯卡，或是罗密欧与朱丽叶，既单纯又自然。幸好，你们不是以悲剧收场。你嫁给了有钱人，拉里云游四海、探索世界，其中并没有激情的成分。”</strong></p><p><strong>“你怎么知道的？”</strong></p><p><strong>“激情是不计代价的。哲学家帕斯卡说过，感情自有离职参不透的理由。如果我的理解没错，这是指当感情受激情所控制，就会发明看似可信的理由，来证明可以为爱牺牲一切，置个人冗余于度外，忍受羞辱也甘愿。激情拥有毁灭的力量，摧毁了神话中的情侣，包括安东里与克里奥佩特拉、崔斯坦与伊索德、帕内尔与欧希亚。为了这股力量，激情就会凋零。届时才会出现怅然若失的感觉，发现虚掷了大半人生，饱受嫉妒伴随的痛苦，吞下种种责难辱骂，献出所有浓情爱意，掏空了灵魂的一切，岂料对方不过是个废物、笨蛋，或是自己编织梦想的借口，价值还不如一条口香糖。”</strong></p></blockquote><blockquote><p>我凭直觉认为，爱上他是很蠢的事，女人很可怜，常常一坠入情网，就变得不可爱了，所以我打定主意不能陷阱去。</p></blockquote><blockquote><p>我想对她来说，丈夫和孩子的死就等于是世界末日。她不顾自己的死活，甘愿沉沦于酗酒和滥交，只为了报复生命的残酷。她曾经有天堂般美好的生活，一夕破灭后，受不了平凡无趣的世界，绝望之余只好坠入地狱。我可以想象，她觉得既然再也喝不到天堂的琼浆玉露，倒不如让自己镇日与屎尿为伍。</p></blockquote><blockquote><p>吾不与人争，胜败均不值。<br>钟情大自然，次之为艺术。<br>生命之火暖双手，他日余烬消逝，吾可安然离去。</p></blockquote><blockquote><p><strong>自我牺牲的情感足以压倒一切，就连欲望和饥饿都相形见绌，这是对自我人格的最大肯定，就算因此走向灭亡也在所不惜。无论为什么牺牲，都无关紧要，值不值得也非重点。这就好比美酒，只是更令人陶醉；也好比爱情，只是更让人心碎；更好比罪恶，只是更加使人着迷。一个人牺牲自己的瞬间，比上帝还要伟大，因为上帝既是全知全能，怎么可能牺牲自己？顶多只能牺牲唯一的儿子。</strong></p></blockquote><blockquote><p>宝贝儿，走，去看那玫瑰<br>清晨才刚刚展开花蕊<br>裙般的花瓣沐浴着阳光，<br>恰好将夜色褪去<br>又绛染裙褶缕缕，如花般颜色的，正是您的面庞。<br>啊！只是一小会儿，<br>您看那花，宝贝儿，<br>她那凋零的美丽翩翩迟迟！<br>哦，自然竟也如恶妇般残忍，<br>仅仅朝夕之瞬，<br>这花便稍纵即逝！<br>宝贝儿，若是您信我的话，<br>就趁着青涩韶华<br>趁着如花灿烂的年岁<br>去采摘，采摘您青春的花朵：<br>因为时光会将您的美貌包裹，<br>一如他黯淡了这凋谢的玫瑰。</p></blockquote><blockquote><p>天空是一片深邃的蓝，闪烁着无数星斗，亮得惊人。我似乎打起了瞌睡，但感官仍旧清醒。忽然间，耳边传来一阵仓促又愤怒的声音，我的神智瞬间清醒起来。这是死亡的呼啸，世上没别的声音更教人敬畏。我走到床边，借着灯塔的光摸着艾略特的脉搏，他已经死了。我打开床头灯看着他，他的下巴张着，双眼睁开。我在帮他合上双眼前，先凝视了他一会儿，情绪涌上心头，几滴眼泪就这么滑落双颊。这位老友为人亲切和善，一生却是如此傻气、无用又微不足道，我想到这里就悲从中来。他出席过无数宴会，和许多王公贵族、爵士名流来往，如今都毫无意义，这些人早把他给忘了。</p></blockquote><blockquote><p>说也奇怪，许多人都饱受恐惧的煎熬。我不是指害怕身处密闭空间，或者害怕站在高处，而是害怕死亡，更惨的是害怕人生。他们多半看起来非常健康，生活富足且无所牵挂，却被恐惧折磨。我有时会觉得，这是最让人困扰的情绪，我一度自问，这是否植根于深沉的动物本能，自从远古先祖首次感受到生命的颤动后，就代代遗传了下来。</p></blockquote><blockquote><p>凡是对我有深远影响的人，几乎都是碰巧遇到的，但回想起来，却好像是命中注定，仿佛全是在我需要他们时出现的。</p></blockquote><blockquote><p>她的性情开朗、温和又热情，把性爱当成身体的本能，无异于吃喝拉撒睡，自己既能享受快感，也乐意给人快感。她就像个小动物，但是非常讨人喜欢，既漂亮又温驯。</p></blockquote><blockquote><p>女人哪！我原本总以为，男人若要靠女人卖身来养他，至少得身材壮硕且魅力十足，随时准备跟人动刀动枪；而如此矮小猥琐的家伙，外表看来顶多是个律师助理，竟有能耐在人满为患的小白脸圈子占有一席之地。</p></blockquote><blockquote><p>印度许多贤者后来也认知到人类的软弱，承认也可以运用爱和工作获得救赎，但是他们从没否认过，唯有知识才是最崇高又艰难的途径，因为知识仰赖人类最宝贵的能力，也就是理性。</p></blockquote><blockquote><p>我这辈子的奇特经验很多了：我曾多次走过鬼门关，多次陷入风流韵事，曾骑马沿着马可·波罗当年的道路穿越中亚抵达中国，曾在圣彼得堡一间客厅中，边喝着俄罗斯茶，边听着一名身穿黑外套条纹裤、说话轻声细语的小矮子，说他暗杀某公爵的过程，曾坐在西敏寺大厅中，聆听恬静温柔的海顿钢琴三重奏，外头则是炸弹轰隆隆的爆炸声。但是，种种遭遇都不及眼前的景象：我在一家装潢华美的餐馆中，坐在红丝绒椅子上，听着拉里谈论神和永恒，谈论何谓梵，以及无穷无尽的轮回。</p></blockquote><blockquote><p>女人最满意的职业还是婚姻</p></blockquote><blockquote><p>拉里已如他所愿，淹没于喧嚣激荡的人海，其中有众多矛盾与利益纠葛，有人迷失于失序的世界，有人坚信善良，有人外表笃定，有人内心彷徨，有人慈悲为怀，有人不知变通，有人轻信他人，有人防卫心重，有人恶劣，也有人慷慨，凡此种种构成了美国众生相。</p></blockquote>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;“活着到底是为了什么，人生究竟有没有意义，还是只能可悲地任凭命运摆布？”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;《刀锋》这本书读下来，没有什么感受，甚至微信读书上都没写什么。&lt;/p&gt;
&lt;p&gt;拉里在战友为他掩护而战死后，感受到了生命的无常，开始追寻生活的本源。为此不惜与自己的未婚妻伊莎贝尔分手，他每天都泡在图书馆10个小时左右，之后又在矿区，德国、法国、印度、中国等地，寻找答案。&lt;/p&gt;</summary>
    
    
    
    <category term="书评" scheme="http://example.com/categories/%E4%B9%A6%E8%AF%84/"/>
    
    
    <category term="2021" scheme="http://example.com/tags/2021/"/>
    
  </entry>
  
  <entry>
    <title>2021年终总结</title>
    <link href="http://example.com/2021/12/25/2021%E5%B9%B4%E7%BB%88%E6%80%BB%E7%BB%93/"/>
    <id>http://example.com/2021/12/25/2021%E5%B9%B4%E7%BB%88%E6%80%BB%E7%BB%93/</id>
    <published>2021-12-25T06:12:58.000Z</published>
    <updated>2022-01-17T13:30:15.149Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script>    <div id="aplayer-EtMHByPd" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="408814313" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#ad7a86"    ></div><br><blockquote><p>那一天我二十一岁，在我一生的黄金时代，我有好多奢望。我想爱，想吃，还想在一瞬间变成天上半明半暗的云，后来我才知道，生活就是个缓慢受锤的过程，人一天天老下去，奢望也一天天消逝，最后变得像挨了锤的牛一样。可是我过二十一岁生日时没有预见到这一点。我觉得自己会永远生猛下去，什么也锤不了我。—— 王小波 《黄金时代》</p></blockquote><p>Happy New Year  2022年了！</p><p>说起来这一年过得好快啊，我还清晰记得我今年年初刚上班的场景，转眼这一年便悄然结束了。</p><span id="more"></span><p>回想起这一年我好像什么都没有做，记得我写过<a href="https://mengxun.club/2021/10/25/%E6%97%B6%E5%85%89%E9%A3%9E%E9%80%9D%EF%BC%8C%E6%88%91%E5%B7%B2%E4%B8%8D%E5%86%8D%E5%B9%B4%E5%B0%91/">《时光飞逝，我已不再年少》</a>当时就感觉这一年就这么静悄悄的过去了，什么都没有留下。</p><p>现在我想应该翻翻手机里这一年的照片，看看我还能记得什么。</p><h4 id="回忆这一年"><a href="#回忆这一年" class="headerlink" title="回忆这一年"></a>回忆这一年</h4><p><img src="1.jpeg"></p><center><small>2.13年初，和表弟一起在商场买鞋，当时感觉儿童NIKE很喜感</small></center><br><p><img src="2.jpeg"></p><center><small>2.14，人家情人节，我练字😂。虽然现在的字依然很丑...</small></center><br><p><img src="3.jpeg"></p><br><p><img src="4.jpeg"></p><center><small>3.10与3.15上班路上北京的晴天与黄沙</small></center><br><p><img src="5.jpeg"></p><center><small>4.12 晚上7点的北京</small></center><br><p><img src="6.jpeg"></p><center><small>4.17 上午8点30，加班路上的北京</small></center><br><p><img src="7.jpeg"></p><center><small>5.3 河北某小山景点</small></center><br><p><img src="8.jpeg"></p><center><small>5.3 山间小路</small></center><br><p><img src="9.jpeg"></p><center><small>5.3 山顶！又征服了一座山</small></center><br><p><img src="10.jpeg"></p><center><small>5.3 有些风景回头看也很美</small></center><br><p><img src="11.jpeg"></p><center><small>5.24 先给自己定个规划 (*╹▽╹*)</small></center><br><p><img src="12.jpeg"></p><center><small>5.26 18:55雨后天晴，有❤️</small></center><br><p><img src="13.jpeg"></p><center><small>6.13 找到了微信头像</small></center><br><p><img src="14.jpeg"></p><center><small>6.29 哈哈，我引以为傲的 ArchLinux Kde YYDS</small></center><br><p><img src="15.jpeg"></p><center><small>6.30 准备换工作 (・・。)ゞ</small></center><br><p><img src="16.jpeg"></p><center><small>7.1 建党百年，还有美丽的壁纸</small></center><br><p><img src="17.jpeg"></p><center><small>7.5 学习数字电路</small></center><br><p><img src="18.jpeg"></p><center><small>7.6 为我的键盘托PS怪猎图像</small></center><br><p><img src="19.jpeg"></p><center><small>7.8 苍天雷鸣</small></center><br><p><img src="20.jpeg"></p><center><small>7.24 与同事游颐和园</small></center><br><p><img src="21.jpeg"></p><center><small>7.24 好神圣的玉峰塔</small></center><br><p><img src="22.jpeg"></p><center><small>7.24 还记得小学来看过铜牛</small></center><br><p><img src="23.jpeg"></p><center><small>7.30 下午4点溜出去看看蓝天白云</small></center><br><p><img src="24.jpeg"></p><br><p><img src="25.jpeg"></p><br><p><img src="26.jpeg"></p><center><small>8.5 雨后的云</small></center><br><p><img src="27.jpeg"></p><center><small>8.17 如果你不开心就抬头看看天吧</small></center><br><p><img src="28.jpeg"></p><center><small>8.20 蓝天依旧</small></center><br><p><img src="29.jpeg"></p><center><small>8.22 鬼节和同事去看十三陵 (•̀⌄•́)</small></center><br><p><img src="30.jpeg"></p><center><small>8.24 开车注意限高啊</small></center><br><p><img src="31.jpeg"></p><center><small>8.26 〣( ºΔº )〣 那片云飘来后真的下雨了</small></center><br><p><img src="32.jpeg"></p><center><small>8.26 两条彩虹耶！</small></center><br><p><img src="33.jpeg"></p><center><small>8.26 雨后的景好美</small></center><br><p><img src="34.jpeg"></p><br><p><img src="35.jpeg"></p><center><small>8.26 雨后的云好壮观</small></center><br><p><img src="36.jpeg"></p><center><small>8.27 小白猫</small></center><br><p><img src="37.jpeg"></p><center><small>8.28 魔幻的清晨</small></center><br><p><img src="38.jpeg"></p><center><small>8.31 两只小老虎</small></center><br><p><img src="39.jpeg"></p><center><small>9.2 雨后的光明与黑暗</small></center><br><p><img src="40.jpeg"></p><center><small>9.5 国家博物馆</small></center><br><p><img src="41.jpeg"></p><center><small>9.5 人民大会堂</small></center><br><p><img src="42.jpeg"></p><center><small>9.5 天安门</small></center><br><p><img src="43.jpeg"></p><br><p><img src="44.jpeg"></p><center><small>10.10 高中时候的画</small></center><br><p><img src="45.jpeg"></p><center><small>10.16 好冷，不过去香山咯！</small></center><br><p><img src="46.jpeg"></p><center><small>10.16 于马连良墓一个人走进野山</small></center><br><p><img src="47.jpeg"></p><center><small>10.16 有时候一个人在山间散步，是一种满足与舒适。野兽齐鸣，树影摇曳，慢慢地走，内心却格外地沉静。</small></center><br><p><img src="48.jpeg"></p><center><small>10.16 城市与山</small></center><br><p><img src="49.jpeg"></p><center><small>10.16 那是...电视塔！！！</small></center><br><p><img src="50.jpeg"></p><center><small>10.16 山重水复疑无路，柳暗花明又一村。原来，我爬了这么久的山，以为是山顶，却是半山腰。当我以为脱离文明的时候，却越来越接近文明。</small></center><br><p><img src="51.jpeg"></p><center><small>10.16 更高的地方！！！</small></center><br><p><img src="52.jpeg"></p><center><small>10.16 这条路又通向哪呢？不管了，大不了回头。</small></center><br><p><img src="53.jpeg"></p><center><small>10.16 瞭望塔！看火人！</small></center><br><p><img src="54.jpeg"></p><center><small>10.16 一抹红叶</small></center><br><p><img src="55.jpeg"></p><center><small>10.16 山顶！</small></center><br><p><img src="56.jpeg"></p><center><small>10.16 世上本无路，只不过是走的人多了，路就有了。脚真疼啊 ‹(⁽˙́ʷ˙̀⁾ )∨( ⁽˙́ʷ˙̀⁾)›</small></center><br><p><img src="57.jpeg"></p><center><small>10.16 你说那边是不是香山？</small></center><br><p><img src="58.jpeg"></p><center><small>10.16 Civilization！</small></center><br><p><img src="59.jpeg"></p><center><small>10.16 其实香山的小胡同也很惬意，住在这养老应该不错吧。</small></center><br><p><img src="60.jpeg"></p><center><small>10.16 咦！那里有座寺，不如去看看！</small></center><br><p><img src="61.jpeg"></p><br><p><img src="62.jpeg"></p><br><p><img src="63.jpeg"></p><br><p><img src="64.jpeg"></p><center><small>10.17 寺内风光</small></center><br><p><img src="65.jpeg"></p><center><small>10.16 于香山半山腰对看来时路</small></center><br><p><img src="66.jpeg"></p><center><small>10.16 想买粉色牌子，但是工作人员一直看着我...于是买了事业签</small></center><br><p><img src="67.jpeg"></p><center><small>10.16 回去的路，让我想到之前去成都锦里的时候，也是这般热闹。下次一定要带朋友来！</small></center><br><p><img src="68.jpeg"></p><center><small>10.25 念去去，千里烟波，暮霭沉沉楚天阔。但也没什么好留恋的</small></center><br><p><img src="69.jpeg"></p><center><small>10.31 秋天遍地金黄，下次一定要欣赏到！</small></center><br><p><img src="70.jpeg"></p><center><small>11.2 家人们，emmm...我的🍚量其实还蛮大的。</small></center><br><p><img src="71.jpeg"></p><center><small>11.3 试图寻找爱情真谛</small></center><br><p><img src="72.jpeg"></p><center><small>11.5 我觉得我蛮好看的...٩(๑˃̵ᴗ˂̵๑)۶</small></center><br><p><img src="73.jpeg"></p><center><small>11.6 ❄️</small></center><br><p><img src="74.jpeg"></p><center><small>11.7 再不去自然博物馆要被拉黑了</small></center><br><p><img src="75.jpeg"></p><center><small>11.7 不是霸王龙，但也很霸气就是了</small></center><br><p><img src="76.jpeg"></p><center><small>11.7 充满智慧的表情</small></center><br><p><img src="77.jpeg"></p><center><small>11.7 那里有个公园，反正没事做，不如去看看！</small></center><br><p><img src="78.jpeg"></p><center><small>11.7 他朝若是同淋雪，此生也算共白头。如果能和喜欢的人一起赏雪，一定是很美的事情吧。</small></center><br><p><img src="79.jpeg"></p><br><p><img src="80.jpeg"></p><p><br><img src="81.jpeg"></p><p><br><img src="82.jpeg"></p><p><br><img src="83.jpeg"></p><p><br><img src="84.jpeg"></p><p><br><img src="85.jpeg"></p><p><br><img src="86.jpeg"></p><p><br><img src="87.jpeg"></p><p><br><img src="88.jpeg"></p><p><br><img src="89.jpeg"></p><p><br><img src="91.jpeg"></p><p><br><img src="92.jpeg"></p><p><br><img src="93.jpeg"></p><p><br><img src="94.jpeg"></p><p><br><img src="95.jpeg"></p><p><br><img src="96.jpeg"></p><br><center><small>11.7 天坛雪景</small></center><br><p><img src="97.jpeg"></p><center><small>11.8 好想去敦煌</small></center><br><p><img src="98.jpeg"></p><center><small>11.20 西山森林公园</small></center><br><p><img src="99.jpeg"></p><center><small>11.22 生日快乐！</small></center><br><p><img src="100.jpeg"></p><center><small>11.26 雁栖湖，定入目标</small></center><br><p><img src="101.jpeg"></p><center><small>11.27 偶遇《面纱》于国家图书馆</small></center><br><p><img src="102.jpeg"></p><center><small>11.27 终于没人跟我抢了</small></center><br><p><img src="103.jpeg"></p><center><small>11.30 笼中鸟</small></center><br><p><img src="104.jpeg"></p><center><small>12.2 希望有一天我也能滑雪</small></center><br><p><img src="105.jpeg"></p><center><small>12.5 心动不如行动！</small></center><br><p><img src="106.PNG"></p><center><small>12.11 人生的意义是什么？《葬》剧照</small></center><br><p><img src="107.jpeg"></p><center><small>12.12 国家图书馆</small></center><br><p><img src="108.jpeg"></p><center><small>12.12 某个公园</small></center><br><p><img src="109.jpeg"></p><center><small>12.12 第一次去海底捞</small></center><br><p><img src="110.jpeg"></p><center><small>12.16 这就是美国电影里的，可以开车点餐的麦当劳吗</small></center><br><p><img src="111.jpeg"></p><center><small>12.16 多给了我一份鸡翅，但我没好意思说，因为100%会送我...最后也没吃完</small></center><br><p><img src="112.jpeg"></p><center><small>12.21 温暖的小屋</small></center><br><p><img src="113.jpeg"></p><center><small>12.23 终于抢到茅台了！！！开心到起飞</small></center><br><p>感觉2021年就像做了个梦一样，我好像从未经历。</p><h4 id="这一年，当然也看了很多书"><a href="#这一年，当然也看了很多书" class="headerlink" title="这一年，当然也看了很多书"></a>这一年，当然也看了很多书</h4><p>《麦田里的守望者》、《软件测试技术指南》、《汇编语言》、《献给阿尔吉侬的花束》、《球状闪电》、《从零开始学Selenium自动化测试》、《三体 黑暗深林》、《月亮与六便士》、《白鹿原》、《孽子》、《三体 死神永生》、《爱的艺术》、《蛤蟆先生去看心理医生》、《面纱》、《刀锋》</p><p><img src="129.png"></p><p>这些书评大部分都能在往期文章中找到。</p><h4 id="感悟"><a href="#感悟" class="headerlink" title="感悟"></a>感悟</h4><p>工作，学习，护肤，旅游，玩游戏好像都没停下，但又没有什么成就。</p><p>希望能学会抵抗诱惑，独立自主，做自己。</p><br><p>好好地爱自己。</p><p>2022，加油！好好生活吧！</p><h4 id="计划"><a href="#计划" class="headerlink" title="计划"></a>计划</h4><ul><li>每天10：30必须睡觉</li><li>5.1号去敦煌或者长白山</li><li>去凤凰岭</li><li>去雁栖湖</li><li>去滑雪</li><li>去泡温泉</li><li>拥有一台相机</li><li>努力工作，好好赚钱</li><li>考研也不错</li><li>学好英语</li></ul><p>对了，今年的<a href="https://www.16personalities.com/ch">性格测试</a>我是 <a href="https://www.16personalities.com/ch/infp-%E4%BA%BA%E6%A0%BC">INFP_T</a></p>]]></content>
    
    
    <summary type="html">&lt;div id=&quot;aplayer-EtMHByPd&quot; class=&quot;aplayer aplayer-tag-marker meting-tag-marker&quot;
         data-id=&quot;408814313&quot; data-server=&quot;netease&quot; data-type=&quot;song&quot; data-mode=&quot;circulation&quot; data-autoplay=&quot;false&quot; data-mutex=&quot;true&quot; data-listmaxheight=&quot;340px&quot; data-preload=&quot;auto&quot; data-theme=&quot;#ad7a86&quot;
    &gt;&lt;/div&gt;

&lt;br&gt;

&lt;blockquote&gt;
&lt;p&gt;那一天我二十一岁，在我一生的黄金时代，我有好多奢望。我想爱，想吃，还想在一瞬间变成天上半明半暗的云，后来我才知道，生活就是个缓慢受锤的过程，人一天天老下去，奢望也一天天消逝，最后变得像挨了锤的牛一样。可是我过二十一岁生日时没有预见到这一点。我觉得自己会永远生猛下去，什么也锤不了我。—— 王小波 《黄金时代》&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Happy New Year  2022年了！&lt;/p&gt;
&lt;p&gt;说起来这一年过得好快啊，我还清晰记得我今年年初刚上班的场景，转眼这一年便悄然结束了。&lt;/p&gt;</summary>
    
    
    
    <category term="随笔" scheme="http://example.com/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
    <category term="2021" scheme="http://example.com/tags/2021/"/>
    
  </entry>
  
  <entry>
    <title>python 算法（持续更新）</title>
    <link href="http://example.com/2021/12/16/python-%E7%AE%97%E6%B3%95%EF%BC%88%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0%EF%BC%89/"/>
    <id>http://example.com/2021/12/16/python-%E7%AE%97%E6%B3%95%EF%BC%88%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0%EF%BC%89/</id>
    <published>2021-12-16T14:54:41.000Z</published>
    <updated>2022-01-20T14:28:52.152Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h3 id="递归"><a href="#递归" class="headerlink" title="递归"></a>递归</h3><p>递归的两个特点：</p><ul><li>调用自身</li><li>结束条件</li></ul><span id="more"></span><h4 id="两个递归实例："><a href="#两个递归实例：" class="headerlink" title="两个递归实例："></a>两个递归实例：</h4><p><strong>先打印结果再调用自身</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">func1</span>(<span class="params">x</span>):</span></span><br><span class="line">  <span class="keyword">if</span> x&gt;<span class="number">0</span>:</span><br><span class="line">    <span class="built_in">print</span>(x)</span><br><span class="line">    func1(x-<span class="number">1</span>)</span><br><span class="line">    </span><br><span class="line">func1(<span class="number">5</span>)</span><br></pre></td></tr></table></figure><p>结果：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">5</span></span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">1</span></span><br></pre></td></tr></table></figure><p><strong>先调用自身再打印结果</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">func2</span>(<span class="params">x</span>):</span></span><br><span class="line">  <span class="keyword">if</span> x&gt;<span class="number">0</span>:</span><br><span class="line">  func2(x-<span class="number">1</span>)</span><br><span class="line">    <span class="built_in">print</span>(x)</span><br><span class="line">    </span><br><span class="line">func2(<span class="number">5</span>)</span><br></pre></td></tr></table></figure><p>结果</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="number">5</span></span><br></pre></td></tr></table></figure><p><br><br></p><h4 id="汉诺塔（hanoi）"><a href="#汉诺塔（hanoi）" class="headerlink" title="汉诺塔（hanoi）"></a>汉诺塔（hanoi）</h4><p><img src="hanoi.png"></p><p><strong>思考</strong></p><p>n个盘子时：</p><ol><li>把n-1个盘子从A经过C移动到B</li><li>把第n个盘子从A移动到C</li><li>把n-1个小盘子从B经过A移动到C</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># n个盘子，a、b、c三个柱子</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hanoi</span>(<span class="params">n,a,b,c</span>):</span></span><br><span class="line">  <span class="comment"># 盘子的数量大于0，不然就减成负数了</span></span><br><span class="line">  <span class="keyword">if</span> n&gt;<span class="number">0</span>:</span><br><span class="line">    <span class="comment"># 我们会通过很多步骤讲n-1个盘子经过c柱子移动到b柱子上</span></span><br><span class="line">    hanoi(n-<span class="number">1</span>,a,c,b)</span><br><span class="line">    <span class="comment"># 再将最底下的盘子n移动到c上</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;moving form %s to %s&quot;</span> % (a,c))</span><br><span class="line">    <span class="comment"># 再将b柱子上的盘子经过a移动到c上</span></span><br><span class="line">    hanoi(n-<span class="number">1</span>,b,a,c)</span><br><span class="line"> </span><br><span class="line">hanoi(<span class="number">3</span>,<span class="string">&quot;A&quot;</span>,<span class="string">&quot;B&quot;</span>,<span class="string">&quot;C&quot;</span>)</span><br></pre></td></tr></table></figure><p>输出结果：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">moving <span class="keyword">from</span> A to C</span><br><span class="line">moving <span class="keyword">from</span> A to B</span><br><span class="line">moving <span class="keyword">from</span> C to B</span><br><span class="line">moving <span class="keyword">from</span> A to C</span><br><span class="line">moving <span class="keyword">from</span> B to A</span><br><span class="line">moving <span class="keyword">from</span> B to C</span><br><span class="line">moving <span class="keyword">from</span> A to C</span><br></pre></td></tr></table></figure><p><br><br></p><h3 id="查找"><a href="#查找" class="headerlink" title="查找"></a>查找</h3><h4 id="列表查找（Linear-Search）"><a href="#列表查找（Linear-Search）" class="headerlink" title="列表查找（Linear Search）"></a>列表查找（Linear Search）</h4><p>列表查找（线性表查找）：从列表中查找指定元素</p><ul><li>输入：列表、待查找元素</li><li>输出：元素下标（未找到元素时一般返回None或-1）</li></ul><p>内置列表查找函数：index（）</p><p>顺序查找：也叫线性查找，从列表第一个元素开始，顺序搜索，直到找到元素或搜索到列表最后一个元素为止</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#传入一个列表，与要查找的值</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">linearSearch</span>(<span class="params">li,val</span>):</span></span><br><span class="line">    <span class="keyword">for</span> ind,v <span class="keyword">in</span> <span class="built_in">enumerate</span>(li):</span><br><span class="line">        <span class="keyword">if</span> v == val:</span><br><span class="line">            <span class="keyword">return</span> ind</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">li = [<span class="number">2</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">8</span>,<span class="number">1</span>,<span class="number">5</span>]</span><br><span class="line">val = <span class="number">10</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(LinearSearch(li,val))</span><br></pre></td></tr></table></figure><p><strong>时间复杂度：O(n)</strong></p><p><br><br></p><h4 id="二分查找（Binary-Search）"><a href="#二分查找（Binary-Search）" class="headerlink" title="二分查找（Binary Search）"></a>二分查找（Binary Search）</h4><p>二分查找：又叫折半查找，从有序列表的初始候选区<code>li[O:n]</code>开始 ，通过对待查找的值与候选区域中间值得比较，可以使候选区减少一半</p><p><strong>二分查找需要先排序，但是有可能排序时间要远多于线性查找O(n)，所以如果你对这个列表需要以后的多次查找，可以使用二分查找</strong></p><p>Python的内置查找函数：<code>.index()</code>是线性查找的，因为没办法确定列表是有序的</p><p><img src="BinarySearch.png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">binarySearch</span>(<span class="params">li,val</span>):</span></span><br><span class="line">  left = <span class="number">0</span></span><br><span class="line">  right = <span class="built_in">len</span>(li)-<span class="number">1</span></span><br><span class="line"><span class="keyword">while</span> left &lt;= right:<span class="comment"># 候选区有值就循环</span></span><br><span class="line">  mid = (left+right)//<span class="number">2</span></span><br><span class="line">  <span class="keyword">if</span> li[mid] &lt; val:</span><br><span class="line">    left = left[mid]+<span class="number">1</span></span><br><span class="line">  <span class="keyword">elif</span> li[mid] &gt; val:</span><br><span class="line">    right = right[mid]-<span class="number">1</span></span><br><span class="line">  <span class="keyword">elif</span> li[mid] == val:</span><br><span class="line">    <span class="keyword">return</span> mid</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">  <span class="keyword">return</span> <span class="literal">None</span></span><br></pre></td></tr></table></figure><p><strong>时间复杂度：O(logn)</strong></p><p><br><br></p><h3 id="排序"><a href="#排序" class="headerlink" title="排序"></a>排序</h3><p>常见排序书算法</p><ol><li><p>排序Low B三人组</p><ul><li>冒泡排序</li><li>选择排序</li><li>插入排序</li></ul></li><li><p>排序NB三人组</p><ul><li>快速排序</li><li>堆排序</li><li>归并排序</li></ul></li><li><p>其他排序</p><ul><li>希尔排序</li><li>计数排序</li><li>基数排序</li></ul></li></ol><br><h4 id="列表排序"><a href="#列表排序" class="headerlink" title="列表排序"></a>列表排序</h4><ul><li>列表排序：将无序的列表变为有序的列表<ul><li>输入：列表</li><li>输出：有序列表</li></ul></li><li>升序与降序</li><li>内置排序函数：sort()</li></ul><p><br><br></p><h4 id="冒泡排序（Bubble-Sort）"><a href="#冒泡排序（Bubble-Sort）" class="headerlink" title="冒泡排序（Bubble Sort）"></a>冒泡排序（Bubble Sort）</h4><ul><li>列表每两个相邻的数，如果前面比后面大，则交换这两个数。</li><li>一趟排序完成后，则无序区减少一个数，有序区增加一个数。</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">bubbleSort</span>(<span class="params">li</span>):</span></span><br><span class="line">  <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(li)-<span class="number">1</span>):</span><br><span class="line">    <span class="keyword">for</span> k <span class="keyword">in</span> <span class="built_in">range</span>(li)-i-<span class="number">1</span>:</span><br><span class="line">      <span class="keyword">if</span> li[k] &gt; li[k+<span class="number">1</span>]:</span><br><span class="line">        li[k],li[k+<span class="number">1</span>] = li[k+<span class="number">1</span>],li[k]</span><br><span class="line"></span><br><span class="line">li = [random.randint(<span class="number">0</span>,<span class="number">10000</span>) <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1000</span>)]</span><br><span class="line"><span class="built_in">print</span>(li)</span><br><span class="line">bubble_sort(li)</span><br><span class="line"><span class="built_in">print</span>(li)</span><br></pre></td></tr></table></figure><p><br><br></p><h4 id="选择排序-（Select-Sort）"><a href="#选择排序-（Select-Sort）" class="headerlink" title="选择排序 （Select Sort）"></a>选择排序 （Select Sort）</h4><ul><li>一趟排序记录最小的数，放到第一个位置</li><li>再一趟排序记录记录列表无序区最小的数，放到第二个位置</li><li>算法关键点：有序区和无序区、无序区最小数的位置</li></ul><p><strong>方法一「不推荐」</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">select_sort</span>(<span class="params">li</span>):</span></span><br><span class="line">  li_new = []</span><br><span class="line">  <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(li)):</span><br><span class="line">    min_val = <span class="built_in">min</span>(li)</span><br><span class="line">    li_new.append(min_val)</span><br><span class="line">    li.remove(min_val)</span><br><span class="line">  <span class="keyword">return</span> li</span><br></pre></td></tr></table></figure><ul><li>min()函数的时间复杂度为O(n)</li><li>remove()函数的时间复杂度为O(n)，因为删除列表的一个个数后，需要将被删除数后的其他数一一移动一个位置</li><li>因为新创建了一个列表，所以他的空间复杂度也增加了</li></ul><p><strong>方法二</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">select_sort</span>(<span class="params">li</span>):</span></span><br><span class="line">  <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(li)-<span class="number">1</span>):<span class="comment"># i是第几趟</span></span><br><span class="line">    min_loc = i</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(i+<span class="number">1</span>,<span class="built_in">len</span>(li)):</span><br><span class="line"><span class="keyword">if</span> li[j] &lt; li[min_loc]:</span><br><span class="line">        min_loc = j</span><br><span class="line">    li[j],li[min_loc] = li[min_loc],li[j]</span><br><span class="line">  <span class="keyword">return</span> li</span><br></pre></td></tr></table></figure><p><br><br></p><h4 id="插入排序（Insert-Sort）"><a href="#插入排序（Insert-Sort）" class="headerlink" title="插入排序（Insert Sort）"></a>插入排序（Insert Sort）</h4><ul><li>初始时手里（有序区）只有一张手牌</li><li>每次（从无序区）摸一张牌，插入到手里已有牌的正确位置</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">insert_sort</span>(<span class="params">li</span>):</span></span><br><span class="line">  <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="built_in">len</span>(li)):<span class="comment"># i 指摸到牌的下标</span></span><br><span class="line">    tmp = li[i]</span><br><span class="line">    j = i - <span class="number">1</span><span class="comment"># j 指手里牌的下标</span></span><br><span class="line">    <span class="keyword">while</span> j &gt;= <span class="number">0</span> <span class="keyword">and</span> li[j] &gt; tmp:</span><br><span class="line">      li[j+<span class="number">1</span>] = li[j]</span><br><span class="line">      j -= <span class="number">1</span></span><br><span class="line">    li[j+<span class="number">1</span>] = tmp</span><br><span class="line">      </span><br><span class="line">li = [<span class="number">3</span>,<span class="number">5</span>,<span class="number">7</span>,<span class="number">9</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">4</span>]</span><br><span class="line">insert_sort(li)</span><br><span class="line"><span class="built_in">print</span>(li)</span><br></pre></td></tr></table></figure><ul><li>时间复杂度为：O(n^2)</li></ul><p><br><br></p><h4 id="快速排序（Quick-sort）"><a href="#快速排序（Quick-sort）" class="headerlink" title="快速排序（Quick_sort）"></a>快速排序（Quick_sort）</h4><ul><li>取一个元素p（第一个元素），使元素p归位；</li><li>列表被p分成两部分，左边都比p小，右边都比p大</li><li>递归完成排序</li></ul><p><img src="QuickSort.png"></p><p>快速排序-框架</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">quick_sort</span>(<span class="params">data,left,right</span>):</span></span><br><span class="line">  <span class="keyword">if</span> left &lt; right:</span><br><span class="line">    mid = partition(data,left,right)</span><br><span class="line">    quick_sort(data,left,mid-<span class="number">1</span>)</span><br><span class="line">   quick_sort(data,mid+<span class="number">1</span>,right)</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;递归&quot;&gt;&lt;a href=&quot;#递归&quot; class=&quot;headerlink&quot; title=&quot;递归&quot;&gt;&lt;/a&gt;递归&lt;/h3&gt;&lt;p&gt;递归的两个特点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;调用自身&lt;/li&gt;
&lt;li&gt;结束条件&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="数据结构" scheme="http://example.com/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    
    <category term="python数据结构" scheme="http://example.com/tags/python%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
  </entry>
  
</feed>
